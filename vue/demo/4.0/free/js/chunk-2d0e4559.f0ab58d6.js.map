{"version":3,"sources":["webpack:///./src/views/base/Accordion.vue","webpack:///./src/views/base/Accordion.vue?8a88"],"names":["class","xs","name","href","item-key","flush","active-item-key","always-open","setup","activeKey","flushActiveKey","__exports__","render"],"mappings":"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","file":"js/chunk-2d0e4559.f0ab58d6.js","sourcesContent":["<template>\n  <CRow>\n    <CCol :xs=\"12\">\n      <DocsCallout name=\"Accordion\" href=\"components/accordion\" />\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Accordion</strong>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Click the accordions below to expand/collapse the accordion content.\n          </p>\n          <DocsExample href=\"components/accordion\">\n            <CAccordion>\n              <CAccordionItem :item-key=\"1\">\n                <CAccordionHeader> Accordion Item #1 </CAccordionHeader>\n                <CAccordionBody>\n                  <strong>This is the first item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </CAccordionBody>\n              </CAccordionItem>\n              <CAccordionItem :item-key=\"2\">\n                <CAccordionHeader> Accordion Item #2 </CAccordionHeader>\n                <CAccordionBody>\n                  <strong>This is the second item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </CAccordionBody>\n              </CAccordionItem>\n              <CAccordionItem :item-key=\"3\">\n                <CAccordionHeader> Accordion Item #3 </CAccordionHeader>\n                <CAccordionBody>\n                  <strong>This is the third item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </CAccordionBody>\n              </CAccordionItem>\n            </CAccordion>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Accordion</strong> <small>Flush</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Add <code>flush</code> to remove the default\n            <code>background-color</code>, some borders, and some rounded\n            corners to render accordions edge-to-edge with their parent\n            container.\n          </p>\n          <DocsExample href=\"components/accordion#flush\">\n            <CAccordion flush>\n              <CAccordionItem>\n                <CAccordionHeader> Accordion Item #1 </CAccordionHeader>\n                <CAccordionBody>\n                  <strong>This is the first item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </CAccordionBody>\n              </CAccordionItem>\n              <CAccordionItem>\n                <CAccordionHeader> Accordion Item #2 </CAccordionHeader>\n                <CAccordionBody>\n                  <strong>This is the second item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </CAccordionBody>\n              </CAccordionItem>\n              <CAccordionItem>\n                <CAccordionHeader> Accordion Item #3 </CAccordionHeader>\n                <CAccordionBody>\n                  <strong>This is the third item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </CAccordionBody>\n              </CAccordionItem>\n            </CAccordion>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Accordion</strong> <small>Always open</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Add <code>always-open</code> property to make accordion items stay\n            open when another item is opened.\n          </p>\n          <DocsExample href=\"components/accordion#always-open\">\n            <CAccordion :active-item-key=\"2\" always-open>\n              <CAccordionItem :item-key=\"1\">\n                <CAccordionHeader> Accordion Item #1 </CAccordionHeader>\n                <CAccordionBody>\n                  <strong>This is the first item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </CAccordionBody>\n              </CAccordionItem>\n              <CAccordionItem :item-key=\"2\">\n                <CAccordionHeader> Accordion Item #2 </CAccordionHeader>\n                <CAccordionBody>\n                  <strong>This is the second item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </CAccordionBody>\n              </CAccordionItem>\n              <CAccordionItem :item-key=\"3\">\n                <CAccordionHeader> Accordion Item #3 </CAccordionHeader>\n                <CAccordionBody>\n                  <strong>This is the third item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </CAccordionBody>\n              </CAccordionItem>\n            </CAccordion>\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n  </CRow>\n</template>\n\n<script>\nimport { ref } from 'vue'\nexport default {\n  name: 'Accordion',\n  setup() {\n    const activeKey = ref(1)\n    const flushActiveKey = ref(1)\n\n    return {\n      activeKey,\n      flushActiveKey,\n    }\n  },\n}\n</script>\n","import { render } from \"./Accordion.vue?vue&type=template&id=67ada28a\"\nimport script from \"./Accordion.vue?vue&type=script&lang=js\"\nexport * from \"./Accordion.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/lukaszholeczek/CoreUI/admin-templates/coreui-free-vue-admin-template/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}