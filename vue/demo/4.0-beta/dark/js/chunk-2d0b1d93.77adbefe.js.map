{"version":3,"sources":["webpack:///./src/views/forms/Range.vue","webpack:///./src/views/forms/Range.vue?371d"],"names":["class","xs","name","href","for","id","disabled","min","max","defaultValue","step","render"],"mappings":"yIAOsB,eAA0B,cAAlB,aAAS,G,qBAAU,eAAe,sB,EAEtD,eAII,KAJDA,MAAM,8BAA4B,C,eAAC,mBAEpC,eAA+C,YAAzC,wB,eAAyC,mBAC/C,eAA+B,YAAzB,gB,eAAyB,Q,oBAGA,iB,EASjC,eAA0B,cAAlB,aAAS,G,qBAAU,eAAuB,aAAhB,YAAQ,G,EAG1C,eAGI,KAHDA,MAAM,8BAA4B,C,eAAC,aAC5B,eAAqB,YAAf,Y,eAAe,mG,oBAIG,kB,EASlC,eAA0B,cAAlB,aAAS,G,qBAAU,eAA0B,aAAnB,eAAW,G,EAG7C,eAKI,KALDA,MAAM,8BAA4B,C,eAAC,2CACE,eAAgB,YAAV,O,eAAU,SACtD,eAAgB,YAAV,O,eAAU,MAAE,eAAc,YAAR,K,eAAQ,SAAK,eAAgB,YAAV,O,eAAU,mEACN,eAAgB,YAAV,O,eAAU,SAC/D,eAAgB,YAAV,O,eAAU,mB,oBAGe,iB,EASjC,eAA0B,cAAlB,aAAS,G,qBAAU,eAAoB,aAAb,SAAK,G,EAGvC,eAKI,KALDA,MAAM,8BAA4B,C,eAAC,0FAEZ,eAAiB,YAAX,Q,eAAW,yEAEzC,eAA+B,YAAzB,c,eAAyB,Q,oBAGA,iB,4TArEzC,eAiFO,Q,wBAhFL,iBAEO,CAFP,eAEO,GAFAC,GAAI,IAAE,C,wBACX,iBAAoD,CAApD,eAAoD,GAAvCC,KAAK,QAAQC,KAAK,yB,MAEjC,eAeO,GAfAF,GAAI,IAAE,C,wBACX,iBAaQ,CAbR,eAaQ,GAbDD,MAAM,QAAM,C,wBACjB,iBAAuE,CAAvE,eAAuE,Q,wBAAzD,iBAA0B,CAA1B,E,EAA2B,M,MACzC,eAUY,Q,wBATV,iBAII,CAJJ,EAKA,eAGc,GAHDG,KAAK,oBAAkB,C,wBAClC,iBAAyD,CAAzD,eAAyD,GAA7CC,IAAI,gBAAc,C,wBAAC,iBAAa,C,YAC5C,eAAgC,GAApBC,GAAG,qB,oCAKvB,eAgBO,GAhBAJ,GAAI,IAAE,C,wBACX,iBAcQ,CAdR,eAcQ,GAdDD,MAAM,QAAM,C,wBACjB,iBAEc,CAFd,eAEc,Q,wBADZ,iBAA0B,CAA1B,E,EAA2B,M,MAE7B,eASY,Q,wBARV,iBAGI,CAHJ,EAIA,eAGc,GAHDG,KAAK,6BAA2B,C,wBAC3C,iBAA2D,CAA3D,eAA2D,GAA/CC,IAAI,iBAAe,C,wBAAC,iBAAc,C,YAC9C,eAA0C,GAA9BC,GAAG,gBAAgBC,SAAA,S,oCAKvC,eAkBO,GAlBAL,GAAI,IAAE,C,wBACX,iBAgBQ,CAhBR,eAgBQ,GAhBDD,MAAM,QAAM,C,wBACjB,iBAEc,CAFd,eAEc,Q,wBADZ,iBAA0B,CAA1B,E,EAA2B,M,MAE7B,eAWY,Q,wBAVV,iBAKI,CALJ,EAMA,eAGc,GAHDG,KAAK,gCAA8B,C,wBAC9C,iBAAyD,CAAzD,eAAyD,GAA7CC,IAAI,gBAAc,C,wBAAC,iBAAa,C,YAC5C,eAAmE,GAAtDG,IAAK,EAAIC,IAAK,EAAGC,aAAa,IAAIJ,GAAG,qB,oCAK1D,eAwBO,GAxBAJ,GAAI,IAAE,C,wBACX,iBAsBQ,CAtBR,eAsBQ,GAtBDD,MAAM,QAAM,C,wBACjB,iBAEc,CAFd,eAEc,Q,wBADZ,iBAA0B,CAA1B,E,EAA2B,M,MAE7B,eAiBY,Q,wBAhBV,iBAKI,CALJ,EAMA,eASc,GATDG,KAAK,0BAAwB,C,wBACxC,iBAAyD,CAAzD,eAAyD,GAA7CC,IAAI,gBAAc,C,wBAAC,iBAAa,C,YAC5C,eAME,GALCG,IAAK,EACLC,IAAK,EACLE,KAAM,GACPD,aAAa,IACbJ,GAAG,gB,mEAUF,OACbH,KAAM,SCpFR,EAAOS,OAASA,EAED","file":"js/chunk-2d0b1d93.77adbefe.js","sourcesContent":["<template>\n  <CRow>\n    <CCol :xs=\"12\">\n      <DocsCallout name=\"Range\" href=\"forms/range.html\" />\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader> <strong>Vue Range</strong> <small></small> </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Create custom\n            <code>&lt;input type=&#34;range&#34;&gt;</code> controls with\n            <code>&lt;CFormRange&gt;</code>.\n          </p>\n          <DocsExample href=\"forms/range.html\">\n            <CFormLabel for=\"customRange1\">Example range</CFormLabel>\n            <CFormRange id=\"customRange1\" />\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Range</strong> <small>Disabled</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Add the <code>disabled</code> boolean attribute on an input to give\n            it a grayed out appearance and remove pointer events.\n          </p>\n          <DocsExample href=\"forms/range.html#disabled\">\n            <CFormLabel for=\"disabledRange\">Disabled range</CFormLabel>\n            <CFormRange id=\"disabledRange\" disabled />\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Range</strong> <small>Min and max</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            Range inputs have implicit values for <code>min</code> and\n            <code>max</code>â€” <code>0</code> and <code>100</code>, respectively.\n            You may specify new values for those using the <code>min</code> and\n            <code>max</code> attributes.\n          </p>\n          <DocsExample href=\"forms/range.html#min-and-max\">\n            <CFormLabel for=\"customRange2\">Example range</CFormLabel>\n            <CFormRange :min=\"0\" :max=\"5\" defaultValue=\"3\" id=\"customRange2\" />\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Range</strong> <small>Steps</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-medium-emphasis small\">\n            By default, range inputs &#34;snap&#34; to integer values. To change\n            this, you can specify a <code>step</code> value. In the example\n            below, we double the number of steps by using\n            <code>step=&#34;0.5&#34;</code>.\n          </p>\n          <DocsExample href=\"forms/range.html#steps\">\n            <CFormLabel for=\"customRange3\">Example range</CFormLabel>\n            <CFormRange\n              :min=\"0\"\n              :max=\"5\"\n              :step=\"0.5\"\n              defaultValue=\"3\"\n              id=\"customRange3\"\n            />\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n  </CRow>\n</template>\n\n<script>\nexport default {\n  name: 'Range',\n}\n</script>\n","import { render } from \"./Range.vue?vue&type=template&id=dbe7241a\"\nimport script from \"./Range.vue?vue&type=script&lang=js\"\nexport * from \"./Range.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}