"use strict";(self.webpackChunk_coreui_vue_pro=self.webpackChunk_coreui_vue_pro||[]).push([[7634],{5854:(t,d,e)=>{e.r(d),e.d(d,{data:()=>o});const o={key:"v-03b6fdd3",path:"/api/modal/CModal.api.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"CModal",slug:"cmodal",children:[]}],filePathRelative:"api/modal/CModal.api.md",git:{updatedTime:1629846188e3,contributors:[{name:"Łukasz Holeczek",email:"lukasz@holeczek.pl",commits:2}]}}},6726:(t,d,e)=>{e.r(d),e.d(d,{default:()=>a});const o=(0,e(6252).uE)('<h3 id="cmodal" tabindex="-1">CModal <a class="anchor-link" href="#cmodal" aria-hidden="true">#</a></h3><h4 id="props" tabindex="-1">Props <a class="anchor-link" href="#props" aria-hidden="true">#</a></h4><table class="table table-striped"><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Values</th><th>Default</th></tr></thead><tbody><tr><td><code>alignment</code></td><td>Align the modal in the center or top of the screen.<br><code>@default</code> &#39;top&#39;</td><td>string</td><td><code>&#39;top&#39;</code>, <code>&#39;center&#39;</code></td><td>&#39;top&#39;</td></tr><tr><td><code>backdrop</code></td><td>Apply a backdrop on body while offcanvas is open.<br><code>@default</code> true</td><td>boolean|string</td><td><code>boolean</code>, <code>&#39;static&#39;</code></td><td>true</td></tr><tr><td><code>className</code></td><td>A string of all className you want applied to the modal content component.<br>TODO: Consider if we should change this prop name to describe better its role.</td><td>string</td><td>-</td><td>undefined</td></tr><tr><td><code>fullscreen</code></td><td>Set modal to covers the entire user viewport</td><td>boolean|string</td><td><code>boolean</code>, <code>&#39;sm&#39;</code>, <code>&#39;md&#39;</code>, <code>&#39;lg&#39;</code>, <code>&#39;xl&#39;</code>, <code>&#39;xxl&#39;</code></td><td>undefined</td></tr><tr><td><code>keyboard</code></td><td>Closes the modal when escape key is pressed.<br><code>@default</code> true</td><td>boolean</td><td>-</td><td>true</td></tr><tr><td><code>dismiss</code></td><td>Does the modal dialog itself scroll, or does the whole dialog scroll within the window.</td><td>boolean</td><td>-</td><td>false</td></tr><tr><td><code>scrollable</code></td><td>Create a scrollable modal that allows scrolling the modal body.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><code>size</code></td><td>Size the component small, large, or extra large.</td><td>string</td><td><code>&#39;sm&#39;</code>, <code>&#39;lg&#39;</code>, <code>&#39;xl&#39;</code></td><td>undefined</td></tr><tr><td><code>transition</code></td><td>Remove animation to create modal that simply appear rather than fade in to view.</td><td>boolean</td><td>-</td><td>true</td></tr><tr><td><code>visible</code></td><td>Toggle the visibility of alert component.</td><td>boolean</td><td>-</td><td></td></tr></tbody></table><h4 id="events" tabindex="-1">Events <a class="anchor-link" href="#events" aria-hidden="true">#</a></h4><table class="table table-striped"><thead><tr><th>Event name</th><th>Properties</th><th>Description</th></tr></thead><tbody><tr><td><code>dismiss</code></td><td></td><td>Event called before the dissmiss animation has started.</td></tr></tbody></table><hr>',6),a={render:function(t,d){return o}}}}]);