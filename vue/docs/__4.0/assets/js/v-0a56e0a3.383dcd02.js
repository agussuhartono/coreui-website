"use strict";(self.webpackChunk_coreui_vue_pro=self.webpackChunk_coreui_vue_pro||[]).push([[6768],{9555:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-0a56e0a3",path:"/layout/breakpoints.html",title:"Breakpoints",lang:"en-US",frontmatter:{title:"Breakpoints",name:"Breakpoints",description:"Breakpoints are the triggers in CoreUI for Vue.js for how your layout responsive changes across device or viewport sizes.",menu:"Layout"},excerpt:"",headers:[{level:2,title:"Core concepts",slug:"core-concepts",children:[]},{level:2,title:"Available breakpoints",slug:"available-breakpoints",children:[]},{level:2,title:"Media queries",slug:"media-queries",children:[{level:3,title:"Min-width",slug:"min-width",children:[]},{level:3,title:"Max-width",slug:"max-width",children:[]},{level:3,title:"Single breakpoint",slug:"single-breakpoint",children:[]},{level:3,title:"Between breakpoints",slug:"between-breakpoints",children:[]}]}],filePathRelative:"layout/breakpoints.md",git:{updatedTime:null,contributors:[]}}},2949:(n,s,a)=>{a.r(s),a.d(s,{default:()=>f});var e=a(6252);const p=(0,e.uE)('<h2 id="core-concepts" tabindex="-1">Core concepts <a class="anchor-link" href="#core-concepts" aria-hidden="true">#</a></h2><ul><li><p><strong>Breakpoints are the building blocks of responsive design.</strong> Use them to control when your layout can be adapted at a particular viewport or device size.</p></li><li><p><strong>Use media queries to architect your CSS by breakpoint.</strong> Media queries are a feature of CSS that allow you to conditionally apply styles based on a set of browser and operating system parameters. We most commonly use <code>min-width</code> in our media queries.</p></li><li><p><strong>Mobile first, responsive design is the goal.</strong> CoreUI&#39;s CSS aims to apply the bare minimum of styles to make a layout work at the smallest breakpoint, and then layers on styles to adjust that design for larger devices. This optimizes your CSS, improves rendering time, and provides a great experience for your visitors.</p></li></ul><h2 id="available-breakpoints" tabindex="-1">Available breakpoints <a class="anchor-link" href="#available-breakpoints" aria-hidden="true">#</a></h2><p>CoreUI for Vue.js includes six default breakpoints, sometimes referred to as <em>grid tiers</em>, for building responsively. These breakpoints can be customized if you&#39;re using our source Sass files.</p><table class="table"><thead><tr><th>Breakpoint</th><th>Class infix</th><th>Dimensions</th></tr></thead><tbody><tr><td>X-Small</td><td><em>None</em></td><td>&lt;576px</td></tr><tr><td>Small</td><td><code>sm</code></td><td>≥576px</td></tr><tr><td>Medium</td><td><code>md</code></td><td>≥768px</td></tr><tr><td>Large</td><td><code>lg</code></td><td>≥992px</td></tr><tr><td>Extra large</td><td><code>xl</code></td><td>≥1200px</td></tr><tr><td>Extra extra large</td><td><code>xxl</code></td><td>≥1400px</td></tr></tbody></table><p>Each breakpoint was chosen to comfortably hold containers whose widths are multiples of 12. Breakpoints are also representative of a subset of common device sizes and viewport dimensions—they don&#39;t specifically target every use case or device. Instead, the ranges provide a strong and consistent foundation to build on for nearly any device.</p><p>These breakpoints are customizable via Sass—you&#39;ll find them in a Sass map in our <code>_variables.scss</code> stylesheet.</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token property"><span class="token variable">$grid-breakpoints</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>\n  <span class="token property">xs</span><span class="token punctuation">:</span> 0<span class="token punctuation">,</span>\n  <span class="token property">sm</span><span class="token punctuation">:</span> 576px<span class="token punctuation">,</span>\n  <span class="token property">md</span><span class="token punctuation">:</span> 768px<span class="token punctuation">,</span>\n  <span class="token property">lg</span><span class="token punctuation">:</span> 992px<span class="token punctuation">,</span>\n  <span class="token property">xl</span><span class="token punctuation">:</span> 1200px<span class="token punctuation">,</span>\n  <span class="token property">xxl</span><span class="token punctuation">:</span> 1400px\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',8),t=(0,e.Uk)("For more information and examples on how to modify our Sass maps and variables, please refer to "),o={href:"https://coreui.io/docs/4.0/layout/grid#sass",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Uk)("the Sass section of the Grid documentation"),l=(0,e.Uk)("."),i=(0,e._)("h2",{id:"media-queries",tabindex:"-1"},[(0,e.Uk)("Media queries "),(0,e._)("a",{class:"anchor-link",href:"#media-queries","aria-hidden":"true"},"#")],-1),u=(0,e.Uk)("Since CoreUI for Vue.js is developed to be mobile first, we use a handful of "),r={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries",target:"_blank",rel:"noopener noreferrer"},d=(0,e.Uk)("media queries"),k=(0,e.Uk)(" to create sensible breakpoints for our layouts and interfaces. These breakpoints are mostly based on minimum viewport widths and allow us to scale up elements as the viewport changes."),m=(0,e.uE)('<h3 id="min-width" tabindex="-1">Min-width <a class="anchor-link" href="#min-width" aria-hidden="true">#</a></h3><p>CoreUI for Vue.js primarily uses the following media query ranges—or breakpoints—in our source Sass files for our layout, grid system, and components.</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token comment">// Source mixins</span>\n\n<span class="token comment">// No media query necessary for xs breakpoint as it&#39;s effectively `@media (min-width: 0) { ... }`</span>\n<span class="token keyword">@include</span> <span class="token function">media-breakpoint-up</span><span class="token punctuation">(</span>sm<span class="token punctuation">)</span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n<span class="token keyword">@include</span> <span class="token function">media-breakpoint-up</span><span class="token punctuation">(</span>md<span class="token punctuation">)</span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n<span class="token keyword">@include</span> <span class="token function">media-breakpoint-up</span><span class="token punctuation">(</span>lg<span class="token punctuation">)</span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n<span class="token keyword">@include</span> <span class="token function">media-breakpoint-up</span><span class="token punctuation">(</span>xl<span class="token punctuation">)</span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n<span class="token keyword">@include</span> <span class="token function">media-breakpoint-up</span><span class="token punctuation">(</span>xxl<span class="token punctuation">)</span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n\n<span class="token comment">// Usage</span>\n\n<span class="token comment">// Example: Hide starting at `min-width: 0`, and then show at the `sm` breakpoint</span>\n<span class="token selector">.custom-class </span><span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">@include</span> <span class="token function">media-breakpoint-up</span><span class="token punctuation">(</span>sm<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token selector">.custom-class </span><span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>These Sass mixins translate in our compiled CSS using the values declared in our Sass variables. For example:</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token comment">// X-Small devices (portrait phones, less than 576px)</span>\n<span class="token comment">// No media query for `xs` since this is the default in CoreUI</span>\n\n<span class="token comment">// Small devices (landscape phones, 576px and up)</span>\n<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 576px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n\n<span class="token comment">// Medium devices (tablets, 768px and up)</span>\n<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 768px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n\n<span class="token comment">// Large devices (desktops, 992px and up)</span>\n<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 992px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n\n<span class="token comment">// X-Large devices (large desktops, 1200px and up)</span>\n<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 1200px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n\n<span class="token comment">// XX-Large devices (larger desktops, 1400px and up)</span>\n<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 1400px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="max-width" tabindex="-1">Max-width <a class="anchor-link" href="#max-width" aria-hidden="true">#</a></h3><p>We occasionally use media queries that go in the other direction (the given screen size <em>or smaller</em>):</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token comment">// No media query necessary for xs breakpoint as it&#39;s effectively `@media (max-width: 0) { ... }`</span>\n<span class="token keyword">@include</span> <span class="token function">media-breakpoint-down</span><span class="token punctuation">(</span>sm<span class="token punctuation">)</span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n<span class="token keyword">@include</span> <span class="token function">media-breakpoint-down</span><span class="token punctuation">(</span>md<span class="token punctuation">)</span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n<span class="token keyword">@include</span> <span class="token function">media-breakpoint-down</span><span class="token punctuation">(</span>lg<span class="token punctuation">)</span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n<span class="token keyword">@include</span> <span class="token function">media-breakpoint-down</span><span class="token punctuation">(</span>xl<span class="token punctuation">)</span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n<span class="token keyword">@include</span> <span class="token function">media-breakpoint-down</span><span class="token punctuation">(</span>xxl<span class="token punctuation">)</span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n\n<span class="token comment">// Example: Style from medium breakpoint and down</span>\n<span class="token keyword">@include</span> <span class="token function">media-breakpoint-down</span><span class="token punctuation">(</span>md<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token selector">.custom-class </span><span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>These mixins take those declared breakpoints, subtract <code>.02px</code> from them, and use them as our <code>max-width</code> values. For example:</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token comment">// X-Small devices (portrait phones, less than 576px)</span>\n<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 575.98px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n\n<span class="token comment">// Small devices (landscape phones, less than 768px)</span>\n<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 767.98px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n\n<span class="token comment">// Medium devices (tablets, less than 992px)</span>\n<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 991.98px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n\n<span class="token comment">// Large devices (desktops, less than 1200px)</span>\n<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 1199.98px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n\n<span class="token comment">// X-Large devices (large desktops, less than 1400px)</span>\n<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 1399.98px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n\n<span class="token comment">// XX-Large devices (larger desktops)</span>\n<span class="token comment">// No media query since the xxl breakpoint has no upper bound on its width</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>',10),b=(0,e._)("strong",null,"Why subtract .02px?",-1),h=(0,e.Uk)(" Browsers don’t currently support "),g=(0,e._)("a",{href:"https://www.w3.org/TR/mediaqueries-4/#range-context"},"range context queries",-1),x=(0,e.Uk)(", so we work around the limitations of "),y=(0,e._)("a",{href:"https://www.w3.org/TR/mediaqueries-4/#mq-min-max"},[(0,e._)("code",null,"min-"),(0,e.Uk)(" and "),(0,e._)("code",null,"max-"),(0,e.Uk)(" prefixes")],-1),w=(0,e.Uk)(" and viewports with fractional widths (which can occur under certain conditions on high-dpi devices, for instance) by using values with higher precision. "),v=(0,e.uE)('<h3 id="single-breakpoint" tabindex="-1">Single breakpoint <a class="anchor-link" href="#single-breakpoint" aria-hidden="true">#</a></h3><p>There are also media queries and mixins for targeting a single segment of screen sizes using the minimum and maximum breakpoint widths.</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token keyword">@include</span> <span class="token function">media-breakpoint-only</span><span class="token punctuation">(</span>xs<span class="token punctuation">)</span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n<span class="token keyword">@include</span> <span class="token function">media-breakpoint-only</span><span class="token punctuation">(</span>sm<span class="token punctuation">)</span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n<span class="token keyword">@include</span> <span class="token function">media-breakpoint-only</span><span class="token punctuation">(</span>md<span class="token punctuation">)</span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n<span class="token keyword">@include</span> <span class="token function">media-breakpoint-only</span><span class="token punctuation">(</span>lg<span class="token punctuation">)</span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n<span class="token keyword">@include</span> <span class="token function">media-breakpoint-only</span><span class="token punctuation">(</span>xl<span class="token punctuation">)</span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n<span class="token keyword">@include</span> <span class="token function">media-breakpoint-only</span><span class="token punctuation">(</span>xxl<span class="token punctuation">)</span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>For example the <code>@include media-breakpoint-only(md) { ... }</code> will result in :</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 768px<span class="token punctuation">)</span> <span class="token operator">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 991.98px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="between-breakpoints" tabindex="-1">Between breakpoints <a class="anchor-link" href="#between-breakpoints" aria-hidden="true">#</a></h3><p>Similarly, media queries may span multiple breakpoint widths:</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token keyword">@include</span> <span class="token function">media-breakpoint-between</span><span class="token punctuation">(</span>md<span class="token punctuation">,</span> xl<span class="token punctuation">)</span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Which results in:</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token comment">// Example</span>\n<span class="token comment">// Apply styles starting from medium devices and up to extra large devices</span>\n<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 768px<span class="token punctuation">)</span> <span class="token operator">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 1199.98px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',10),f={render:function(n,s){const a=(0,e.up)("OutboundLink"),f=(0,e.up)("CCallout");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,(0,e._)("p",null,[t,(0,e._)("a",o,[c,(0,e.Wm)(a)]),l]),i,(0,e._)("p",null,[u,(0,e._)("a",r,[d,(0,e.Wm)(a)]),k]),m,(0,e.Wm)(f,{color:"warning"},{default:(0,e.w5)((()=>[b,h,g,x,y,w])),_:1}),v],64)}}}}]);