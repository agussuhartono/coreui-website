"use strict";(self.webpackChunk_coreui_vue_pro=self.webpackChunk_coreui_vue_pro||[]).push([[9081],{9466:(t,d,e)=>{e.r(d),e.d(d,{data:()=>o});const o={key:"v-163eef2e",path:"/api/dropdown/CDropdown.api.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"CDropdown",slug:"cdropdown",children:[]}],filePathRelative:"api/dropdown/CDropdown.api.md",git:{updatedTime:1629846188e3,contributors:[{name:"Łukasz Holeczek",email:"lukasz@holeczek.pl",commits:3}]}}},9992:(t,d,e)=>{e.r(d),e.d(d,{default:()=>r});const o=(0,e(6252).uE)('<h3 id="cdropdown" tabindex="-1">CDropdown <a class="anchor-link" href="#cdropdown" aria-hidden="true">#</a></h3><h4 id="props" tabindex="-1">Props <a class="anchor-link" href="#props" aria-hidden="true">#</a></h4><table class="table table-striped"><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Values</th><th>Default</th></tr></thead><tbody><tr><td><code>alignment</code></td><td></td><td>string|object</td><td><code>{ &#39;start&#39; | &#39;end&#39; | { xs: &#39;start&#39; | &#39;end&#39; } | { sm: &#39;start&#39; | &#39;end&#39; } | { md: &#39;start&#39; | &#39;end&#39; } | { lg: &#39;start&#39; | &#39;end&#39; } | { xl: &#39;start&#39; | &#39;end&#39;} | { xxl: &#39;start&#39; | &#39;end&#39;} }</code></td><td>undefined</td></tr><tr><td><code>caret</code></td><td>Enables pseudo element caret on toggler.<br><code>@default</code> true</td><td>boolean</td><td>-</td><td>true</td></tr><tr><td><code>dark</code></td><td>Sets a darker color scheme to match a dark navbar.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><code>direction</code></td><td>Sets a specified direction and location of the dropdown menu.</td><td>string</td><td><code>&#39;dropup&#39; | &#39;dropend&#39; | &#39;dropstart&#39;</code></td><td>undefined</td></tr><tr><td><code>disabled</code></td><td>Toggle the disabled state for the component.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><code>placement</code></td><td>Describes the placement of your component after Popper.js has applied all the modifiers that may have flipped or altered the originally provided placement property.<br><code>@default</code> &#39;bottom-start&#39;</td><td>Placement</td><td><code>&#39;auto&#39; | &#39;top-end&#39; | &#39;top&#39; | &#39;top-start&#39; | &#39;bottom-end&#39; | &#39;bottom&#39; | &#39;bottom-start&#39; | &#39;right-start&#39; | &#39;right&#39; | &#39;right-end&#39; | &#39;left-start&#39; | &#39;left&#39; | &#39;left-end&#39;</code></td><td>&#39;bottom-start&#39;</td></tr><tr><td><code>popper</code></td><td>If you want to disable dynamic positioning set this property to <code>true</code>.</td><td>boolean</td><td>-</td><td>true</td></tr><tr><td><code>trigger</code></td><td>Sets which event handlers you’d like provided to your toggle prop. You can specify one trigger or an array of them.</td><td>string|array</td><td>-</td><td>&#39;click&#39;</td></tr><tr><td><code>variant</code></td><td>Set the dropdown variant to an btn-group, dropdown, input-group, and nav-item.</td><td>string</td><td>-</td><td>&#39;btn-group&#39;</td></tr><tr><td><code>visible</code></td><td>Toggle the visibility of dropdown menu component.<br><code>@default</code> false</td><td>boolean</td><td>-</td><td></td></tr></tbody></table><hr>',4),r={render:function(t,d){return o}}}}]);