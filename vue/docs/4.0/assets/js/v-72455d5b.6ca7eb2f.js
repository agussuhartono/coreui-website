"use strict";(self.webpackChunk_coreui_vue_pro=self.webpackChunk_coreui_vue_pro||[]).push([[411],{1448:(t,a,e)=>{e.r(a),e.d(a,{data:()=>n});const n={key:"v-72455d5b",path:"/layout/containers.html",title:"Containers",lang:"en-US",frontmatter:{name:"Containers",title:"Containers",description:"Containers are a fundamental building block of CoreUI for Vue.js that contain, pad, and align your content within a given device or viewport."},excerpt:"",headers:[{level:2,title:"How they work",slug:"how-they-work",children:[]},{level:2,title:"Default container",slug:"default-container",children:[]},{level:2,title:"Responsive containers",slug:"responsive-containers",children:[]},{level:2,title:"Fluid containers",slug:"fluid-containers",children:[]},{level:2,title:"API",slug:"api",children:[{level:3,title:"CContainer",slug:"ccontainer",children:[]}]}],filePathRelative:"layout/containers.md",git:{updatedTime:null,contributors:[]}}},8975:(t,a,e)=>{e.r(a),e.d(a,{default:()=>x});var n=e(6252);const s=(0,n.uE)('<h2 id="how-they-work" tabindex="-1">How they work <a class="anchor-link" href="#how-they-work" aria-hidden="true">#</a></h2><p>Containers are the most basic layout element in CoreUI for Vue.js and are <strong>required when using our default grid system</strong>. Containers are used to contain, pad, and (sometimes) center the content within them. While containers <em>can</em> be nested, most layouts do not require a nested container.</p><p>CoreUI for Vue.js comes with three different containers:</p><ul><li><code>&lt;CContainer&gt;</code>, which sets a <code>max-width</code> at each responsive breakpoint</li><li><code>&lt;CContainer fluid&gt;</code>, which is <code>width: 100%</code> at all breakpoints</li><li><code>&lt;CContainer {sm|md|lg|xl|xxl}&gt;</code>, which is <code>width: 100%</code> until the specified breakpoint</li></ul><p>The table below illustrates how each container&#39;s <code>max-width</code> compares to the original <code>&lt;CContainer&gt;</code> and <code>&lt;CContainer fluid&gt;</code> across each breakpoint.</p><table class="table"><thead><tr><td class="border-dark"></td><th scope="col"> Extra small<br><span class="fw-normal">&lt;576px</span></th><th scope="col"> Small<br><span class="fw-normal">≥576px</span></th><th scope="col"> Medium<br><span class="fw-normal">≥768px</span></th><th scope="col"> Large<br><span class="fw-normal">≥992px</span></th><th scope="col"> X-Large<br><span class="fw-normal">≥1200px</span></th><th scope="col"> XX-Large<br><span class="fw-normal">≥1400px</span></th></tr></thead><tbody><tr><th scope="row" class="fw-normal"><code>&lt;CContainer&gt;</code></th><td class="text-muted">100%</td><td>540px</td><td>720px</td><td>960px</td><td>1140px</td><td>1320px</td></tr><tr><th scope="row" class="fw-normal"><code>&lt;CContainer sm&gt;</code></th><td class="text-muted">100%</td><td>540px</td><td>720px</td><td>960px</td><td>1140px</td><td>1320px</td></tr><tr><th scope="row" class="fw-normal"><code>&lt;CContainer md&gt;</code></th><td class="text-muted">100%</td><td class="text-muted">100%</td><td>720px</td><td>960px</td><td>1140px</td><td>1320px</td></tr><tr><th scope="row" class="fw-normal"><code>&lt;CContainer lg&gt;</code></th><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td><td>960px</td><td>1140px</td><td>1320px</td></tr><tr><th scope="row" class="fw-normal"><code>&lt;CContainer xl&gt;</code></th><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td><td>1140px</td><td>1320px</td></tr><tr><th scope="row" class="fw-normal"><code>&lt;CContainer xxl&gt;</code></th><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td><td>1320px</td></tr><tr><th scope="row" class="fw-normal"><code>&lt;CContainer fluid&gt;</code></th><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td></tr></tbody></table><h2 id="default-container" tabindex="-1">Default container <a class="anchor-link" href="#default-container" aria-hidden="true">#</a></h2><p>Our default <code>&lt;CContainer&gt;</code> class is a responsive, fixed-width container, meaning its <code>max-width</code> changes at each breakpoint.</p>',8),o={class:"docs-example border rounded-top p-4"},d=(0,n.Uk)(" Content here "),l=(0,n.uE)('<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CContainer</span><span class="token punctuation">&gt;</span></span>\n  Content here\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CContainer</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="responsive-containers" tabindex="-1">Responsive containers <a class="anchor-link" href="#responsive-containers" aria-hidden="true">#</a></h2><p>Responsive containers allow you to specify a class that is 100% wide until the specified breakpoint is reached, after which we apply <code>max-width</code>s for each of the higher breakpoints. For example, <code>&lt;CContainer sm&gt;</code> is 100% wide to start until the <code>sm</code> breakpoint is reached, where it will scale up with <code>md</code>, <code>lg</code>, <code>xl</code>, and <code>xxl</code>.</p>',3),i={class:"docs-example border rounded-top p-4"},c=(0,n.Uk)("100% wide until small breakpoint"),r=(0,n.Uk)("100% wide until medium breakpoint"),p=(0,n.Uk)("100% wide until large breakpoint"),u=(0,n.Uk)("100% wide until extra large breakpoint"),h=(0,n.Uk)("100% wide until extra extra large breakpoint"),m=(0,n.uE)('<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CContainer</span> <span class="token attr-name">sm</span><span class="token punctuation">&gt;</span></span>100% wide until small breakpoint<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CContainer</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CContainer</span> <span class="token attr-name">md</span><span class="token punctuation">&gt;</span></span>100% wide until medium breakpoint<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CContainer</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CContainer</span> <span class="token attr-name">lg</span><span class="token punctuation">&gt;</span></span>100% wide until large breakpoint<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CContainer</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CContainer</span> <span class="token attr-name">xl</span><span class="token punctuation">&gt;</span></span>100% wide until extra large breakpoint<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CContainer</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CContainer</span> <span class="token attr-name">xxl</span><span class="token punctuation">&gt;</span></span>100% wide until extra extra large breakpoint<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CContainer</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="fluid-containers" tabindex="-1">Fluid containers <a class="anchor-link" href="#fluid-containers" aria-hidden="true">#</a></h2><p>Use <code>&lt;CContainer fluid&gt;</code> for a full width container, spanning the entire width of the viewport.</p>',3),k={class:"docs-example border rounded-top p-4"},g=(0,n.Uk)(" Content here "),b=(0,n.uE)('<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CContainer</span> <span class="token attr-name">fluid</span><span class="token punctuation">&gt;</span></span>\n  Content here\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CContainer</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="api" tabindex="-1">API <a class="anchor-link" href="#api" aria-hidden="true">#</a></h2><h3 id="ccontainer" tabindex="-1">CContainer <a class="anchor-link" href="#ccontainer" aria-hidden="true">#</a></h3><h4 id="props" tabindex="-1">Props <a class="anchor-link" href="#props" aria-hidden="true">#</a></h4><table class="table table-striped"><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Values</th><th>Default</th></tr></thead><tbody><tr><td><code>sm</code></td><td>Set container 100% wide until small breakpoint.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><code>md</code></td><td>Set container 100% wide until medium breakpoint.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><code>lg</code></td><td>Set container 100% wide until large breakpoint.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><code>xl</code></td><td>Set container 100% wide until X-large breakpoint.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><code>xxl</code></td><td>Set container 100% wide until XX-large breakpoint.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><code>fluid</code></td><td>Set container 100% wide, spanning the entire width of the viewport.</td><td>boolean</td><td>-</td><td></td></tr></tbody></table><hr>',6),x={render:function(t,a){const e=(0,n.up)("CContainer");return(0,n.wg)(),(0,n.iD)(n.HY,null,[s,(0,n._)("div",o,[(0,n.Wm)(e,null,{default:(0,n.w5)((()=>[d])),_:1})]),l,(0,n._)("div",i,[(0,n.Wm)(e,{sm:""},{default:(0,n.w5)((()=>[c])),_:1}),(0,n.Wm)(e,{md:""},{default:(0,n.w5)((()=>[r])),_:1}),(0,n.Wm)(e,{lg:""},{default:(0,n.w5)((()=>[p])),_:1}),(0,n.Wm)(e,{xl:""},{default:(0,n.w5)((()=>[u])),_:1}),(0,n.Wm)(e,{xxl:""},{default:(0,n.w5)((()=>[h])),_:1})]),m,(0,n._)("div",k,[(0,n.Wm)(e,{fluid:""},{default:(0,n.w5)((()=>[g])),_:1})]),b],64)}}}}]);