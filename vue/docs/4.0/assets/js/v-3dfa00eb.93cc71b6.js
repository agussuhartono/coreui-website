"use strict";(self.webpackChunk_coreui_vue_pro=self.webpackChunk_coreui_vue_pro||[]).push([[7777],{5266:(e,d,t)=>{t.r(d),t.d(d,{data:()=>o});const o={key:"v-3dfa00eb",path:"/api/navbar/CNavbar.api.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"CNavbar",slug:"cnavbar",children:[]}],filePathRelative:"api/navbar/CNavbar.api.md",git:{updatedTime:1630266473e3,contributors:[{name:"Łukasz Holeczek",email:"lukasz@holeczek.pl",commits:3}]}}},4405:(e,d,t)=>{t.r(d),t.d(d,{default:()=>c});const o=(0,t(6252).uE)('<h3 id="cnavbar" tabindex="-1">CNavbar <a class="anchor-link" href="#cnavbar" aria-hidden="true">#</a></h3><h4 id="props" tabindex="-1">Props <a class="anchor-link" href="#props" aria-hidden="true">#</a></h4><table class="table table-striped"><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Values</th><th>Default</th></tr></thead><tbody><tr><td><code>color</code></td><td>Sets the color context of the component to one of CoreUI’s themed colors.</td><td>Color</td><td><code>&#39;primary&#39;</code>, <code>&#39;secondary&#39;</code>, <code>&#39;success&#39;</code>, <code>&#39;danger&#39;</code>, <code>&#39;warning&#39;</code>, <code>&#39;info&#39;</code>, <code>&#39;dark&#39;</code>, <code>&#39;light&#39;</code>, <code>string</code></td><td></td></tr><tr><td><code>colorScheme</code></td><td>Sets if the color of text should be colored for a light or dark dark background.</td><td>string</td><td><code>&#39;dark&#39;</code>, <code>&#39;light&#39;</code></td><td>undefined</td></tr><tr><td><code>component</code></td><td>Component used for the root node. Either a string to use a HTML element or a component.<br><code>@default</code> &#39;nav&#39;</td><td>string</td><td>-</td><td>&#39;nav&#39;</td></tr><tr><td><code>container</code></td><td>Defines optional container wrapping children elements.</td><td>boolean|string</td><td><code>boolean</code>, <code>&#39;sm&#39;</code>, <code>&#39;md&#39;</code>, <code>&#39;lg&#39;</code>, <code>&#39;xl&#39;</code>, <code>&#39;xxl&#39;</code>, <code>&#39;fluid&#39;</code></td><td>undefined</td></tr><tr><td><code>expand</code></td><td>Defines the responsive breakpoint to determine when content collapses.</td><td>boolean|string</td><td><code>boolean</code>, <code>&#39;sm&#39;</code>, <code>&#39;md&#39;</code>, <code>&#39;lg&#39;</code>, <code>&#39;xl&#39;</code>, <code>&#39;xxl&#39;</code></td><td>undefined</td></tr><tr><td><code>placement</code></td><td>Place component in non-static positions.</td><td>string</td><td><code>&#39;fixed-top&#39;</code>, <code>&#39;fixed-bottom&#39;</code>, <code>&#39;sticky-top&#39;</code></td><td>undefined</td></tr></tbody></table><hr>',4),c={render:function(e,d){return o}}}}]);