"use strict";(self.webpackChunk_coreui_vue_pro=self.webpackChunk_coreui_vue_pro||[]).push([[1544],{5168:(e,t,a)=>{a.r(t),a.d(t,{data:()=>n});const n={key:"v-3207355c",path:"/components/close-button.html",title:"Vue Close Button Component",lang:"en-US",frontmatter:{title:"Vue Close Button Component",name:"Close Button",description:"A generic close button component for dismissing content like modals and alerts."},excerpt:"",headers:[{level:2,title:"Example",slug:"example",children:[]},{level:2,title:"Disabled state",slug:"disabled-state",children:[]},{level:2,title:"White variant",slug:"white-variant",children:[]},{level:2,title:"API",slug:"api",children:[{level:3,title:"CCloseButton",slug:"cclosebutton",children:[]}]}],filePathRelative:"components/close-button.md",git:{updatedTime:1630266473e3,contributors:[{name:"Łukasz Holeczek",email:"lukasz@holeczek.pl",commits:1}]}}},2985:(e,t,a)=>{a.r(t),a.d(t,{default:()=>h});var n=a(6252);const s=(0,n._)("h2",{id:"example",tabindex:"-1"},[(0,n.Uk)("Example "),(0,n._)("a",{class:"anchor-link",href:"#example","aria-hidden":"true"},"#")],-1),o=(0,n._)("p",null,[(0,n.Uk)("Provide an option to dismiss or close a component with "),(0,n._)("code",null,"<CCloseButton>"),(0,n.Uk)(". Default styling is limited, but highly customizable. Modify the Sass variables to replace the default "),(0,n._)("code",null,"background-image"),(0,n.Uk)(".")],-1),l={class:"docs-example border rounded-top p-4"},i=(0,n.uE)('<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CCloseButton</span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="disabled-state" tabindex="-1">Disabled state <a class="anchor-link" href="#disabled-state" aria-hidden="true">#</a></h2><p>Disabled close buttons change their <code>opacity</code>. We&#39;ve also applied <code>pointer-events: none</code> and <code>user-select: none</code> to preventing hover and active states from triggering.</p>',3),d={class:"docs-example border rounded-top p-4"},c=(0,n.uE)('<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CCloseButton</span> <span class="token attr-name">disabled</span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="white-variant" tabindex="-1">White variant <a class="anchor-link" href="#white-variant" aria-hidden="true">#</a></h2><p>Change the default <code>&lt;CCloseButton&gt;</code> to be white with the <code>white</code> boolean property.</p>',3),r={class:"docs-example rounded-top p-4 bg-dark"},p=(0,n.uE)('<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CCloseButton</span> <span class="token attr-name">white</span><span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CCloseButton</span> <span class="token attr-name">white</span> <span class="token attr-name">disabled</span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="api" tabindex="-1">API <a class="anchor-link" href="#api" aria-hidden="true">#</a></h2><h3 id="cclosebutton" tabindex="-1">CCloseButton <a class="anchor-link" href="#cclosebutton" aria-hidden="true">#</a></h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> CCloseButton <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue&#39;</span>\n<span class="token comment">// or</span>\n<span class="token keyword">import</span> CCloseButton <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue/src/components/close-button/CCloseButton&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="props" tabindex="-1">Props <a class="anchor-link" href="#props" aria-hidden="true">#</a></h4><table class="table table-striped table-api"><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Values</th><th>Default</th></tr></thead><tbody><tr><td><strong>disabled</strong></td><td>Toggle the disabled state for the component.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><strong>white</strong></td><td>Change the default color to white.</td><td>boolean</td><td>-</td><td></td></tr></tbody></table><h4 id="events" tabindex="-1">Events <a class="anchor-link" href="#events" aria-hidden="true">#</a></h4><table class="table table-striped table-api"><thead><tr><th>Event name</th><th>Description</th><th>Properties</th></tr></thead><tbody><tr><td><strong>click</strong></td><td>Event called when the user clicks on the component.</td><td></td></tr></tbody></table>',8),u={},h=(0,a(3744).Z)(u,[["render",function(e,t){const a=(0,n.up)("CCloseButton");return(0,n.wg)(),(0,n.iD)(n.HY,null,[s,o,(0,n._)("div",l,[(0,n.Wm)(a)]),i,(0,n._)("div",d,[(0,n.Wm)(a,{disabled:""})]),c,(0,n._)("div",r,[(0,n.Wm)(a,{white:""}),(0,n.Wm)(a,{white:"",disabled:""})]),p],64)}]])}}]);