"use strict";(self.webpackChunk_coreui_vue_pro=self.webpackChunk_coreui_vue_pro||[]).push([[7615],{7893:(t,d,e)=>{e.r(d),e.d(d,{data:()=>o});const o={key:"v-603ea675",path:"/api/dropdown/CDropdownToggle.api.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"CDropdownToggle",slug:"cdropdowntoggle",children:[]}],filePathRelative:"api/dropdown/CDropdownToggle.api.md",git:{updatedTime:1630266473e3,contributors:[{name:"Łukasz Holeczek",email:"lukasz@holeczek.pl",commits:3}]}}},2369:(t,d,e)=>{e.r(d),e.d(d,{default:()=>r});const o=(0,e(6252).uE)('<h3 id="cdropdowntoggle" tabindex="-1">CDropdownToggle <a class="anchor-link" href="#cdropdowntoggle" aria-hidden="true">#</a></h3><h4 id="props" tabindex="-1">Props <a class="anchor-link" href="#props" aria-hidden="true">#</a></h4><table class="table table-striped"><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Values</th><th>Default</th></tr></thead><tbody><tr><td><code>active</code></td><td>Toggle the active state for the component.</td><td>boolean</td><td>-</td><td>false</td></tr><tr><td><code>color</code></td><td>Sets the color context of the component to one of CoreUI’s themed colors.</td><td>Color</td><td><code>&#39;primary&#39;</code>, <code>&#39;secondary&#39;</code>, <code>&#39;success&#39;</code>, <code>&#39;danger&#39;</code>, <code>&#39;warning&#39;</code>, <code>&#39;info&#39;</code>, <code>&#39;dark&#39;</code>, <code>&#39;light&#39;</code></td><td></td></tr><tr><td><code>caret</code></td><td>Enables pseudo element caret on toggler.<br><code>@default</code> true</td><td>boolean</td><td>-</td><td>true</td></tr><tr><td><code>component</code></td><td>Component used for the root node. Either a string to use a HTML element or a component.</td><td>string</td><td>-</td><td>&#39;button&#39;</td></tr><tr><td><code>disabled</code></td><td>Toggle the disabled state for the component.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><code>shape</code></td><td>Select the shape of the component.</td><td>Shape</td><td>-</td><td></td></tr><tr><td><code>size</code></td><td>Size the component small or large.</td><td>string</td><td>-</td><td>undefined</td></tr><tr><td><code>split</code></td><td>Similarly, create split button dropdowns with virtually the same markup as single button dropdowns, but with the addition of <code>.dropdown-toggle-split</code> className for proper spacing around the dropdown caret.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><code>variant</code></td><td>Set the button variant to an outlined button or a ghost button.</td><td>string</td><td>-</td><td>undefined</td></tr><tr><td><code>togglerVariant</code></td><td></td><td>string</td><td>-</td><td>undefined</td></tr></tbody></table><hr>',4),r={render:function(t,d){return o}}}}]);