"use strict";(self.webpackChunk_coreui_vue_pro=self.webpackChunk_coreui_vue_pro||[]).push([[3430],{8103:(t,d,e)=>{e.r(d),e.d(d,{data:()=>o});const o={key:"v-1dab50f3",path:"/api/table/CTable.api.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"CTable",slug:"ctable",children:[]}],filePathRelative:"api/table/CTable.api.md",git:{updatedTime:1630266473e3,contributors:[{name:"Łukasz Holeczek",email:"lukasz@holeczek.pl",commits:3}]}}},2267:(t,d,e)=>{e.r(d),e.d(d,{default:()=>c});const o=(0,e(6252).uE)('<h3 id="ctable" tabindex="-1">CTable <a class="anchor-link" href="#ctable" aria-hidden="true">#</a></h3><h4 id="props" tabindex="-1">Props <a class="anchor-link" href="#props" aria-hidden="true">#</a></h4><table class="table table-striped"><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Values</th><th>Default</th></tr></thead><tbody><tr><td><code>align</code></td><td>Set the vertical aligment.</td><td>string</td><td><code>&#39;bottom&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;top&#39;</code></td><td>undefined</td></tr><tr><td><code>borderColor</code></td><td>Sets the border color of the component to one of CoreUI’s themed colors.<br><code>@value</code> &#39;primary&#39; | &#39;secondary&#39; | &#39;success&#39; | &#39;danger&#39; | &#39;warning&#39; | &#39;info&#39; | &#39;dark&#39; | &#39;light&#39; | string</td><td>Color</td><td>-</td><td></td></tr><tr><td><code>bordered</code></td><td>Add borders on all sides of the table and cells.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><code>borderless</code></td><td>Remove borders on all sides of the table and cells.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><code>caption</code></td><td>Put the <code>&lt;caption&gt;</code> on the top of the table.</td><td>string</td><td><code>&#39;top&#39;</code></td><td>undefined</td></tr><tr><td><code>color</code></td><td>Sets the color context of the component to one of CoreUI’s themed colors.</td><td>Color</td><td><code>&#39;primary&#39;</code>, <code>&#39;secondary&#39;</code>, <code>&#39;success&#39;</code>, <code>&#39;danger&#39;</code>, <code>&#39;warning&#39;</code>, <code>&#39;info&#39;</code>, <code>&#39;dark&#39;</code>, <code>&#39;light&#39;</code>, <code>string</code></td><td></td></tr><tr><td><code>hover</code></td><td>Enable a hover state on table rows within a <code>&lt;CTableBody&gt;</code>.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><code>responsive</code></td><td>Make any table responsive across all viewports or pick a maximum breakpoint with which to have a responsive table up to.</td><td>boolean|string</td><td><code>boolean</code>, <code>&#39;sm&#39;</code>, <code>&#39;md&#39;</code>, <code>&#39;lg&#39;</code>, <code>&#39;xl&#39;</code>, <code>&#39;xxl&#39;</code></td><td>undefined</td></tr><tr><td><code>small</code></td><td>Make table more compact by cutting all cell <code>padding</code> in half.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><code>striped</code></td><td>Add zebra-striping to any table row within the <code>&lt;CTableBody&gt;</code>.</td><td>boolean</td><td>-</td><td></td></tr></tbody></table><hr>',4),c={render:function(t,d){return o}}}}]);