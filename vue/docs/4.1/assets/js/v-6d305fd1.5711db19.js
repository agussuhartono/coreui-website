"use strict";(self.webpackChunk_coreui_vue_docs=self.webpackChunk_coreui_vue_docs||[]).push([[6818],{40312:(n,s,a)=>{a.r(s),a.d(s,{default:()=>en});var t=a(27875);const e=(0,t._)("h2",{id:"examples",tabindex:"-1"},[(0,t.Uk)("Examples "),(0,t._)("a",{class:"anchor-link",href:"#examples","aria-hidden":"true"},"#")],-1),o=(0,t._)("p",null,"Click the accordions below to expand/collapse the accordion content.",-1),p={class:"docs-example border rounded-top p-4"},l=(0,t.Uk)(" Accordion Item #1 "),c=(0,t._)("strong",null,"This is the first item's accordion body.",-1),i=(0,t.Uk)(" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the "),u=(0,t._)("code",null,".accordion-body",-1),r=(0,t.Uk)(", though the transition does limit overflow. "),d=(0,t.Uk)(" Accordion Item #2 "),k=(0,t._)("strong",null,"This is the second item's accordion body.",-1),g=(0,t.Uk)(" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the "),h=(0,t._)("code",null,".accordion-body",-1),b=(0,t.Uk)(", though the transition does limit overflow. "),m=(0,t.Uk)(" Accordion Item #3 "),y=(0,t._)("strong",null,"This is the third item's accordion body.",-1),w=(0,t.Uk)(" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the "),v=(0,t._)("code",null,".accordion-body",-1),f=(0,t.Uk)(", though the transition does limit overflow. "),C=(0,t.uE)('<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordion</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionItem</span> <span class="token attr-name">:item-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionHeader</span><span class="token punctuation">&gt;</span></span>\n      Accordion Item #1\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionHeader</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionBody</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the first item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is hidden by default,\n      until the collapse plugin adds the appropriate classes that we use to style each\n      element. These classes control the overall appearance, as well as the showing and\n      hiding via CSS transitions. You can modify any of this with custom CSS or overriding\n      our default variables. It&#39;s also worth noting that just about any HTML can go within\n      the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>.accordion-body<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>, though the transition does limit overflow.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionBody</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionItem</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionItem</span> <span class="token attr-name">:item-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionHeader</span><span class="token punctuation">&gt;</span></span>\n      Accordion Item #2\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionHeader</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionBody</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the second item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is hidden by default,\n      until the collapse plugin adds the appropriate classes that we use to style each\n      element. These classes control the overall appearance, as well as the showing and\n      hiding via CSS transitions. You can modify any of this with custom CSS or overriding\n      our default variables. It&#39;s also worth noting that just about any HTML can go within\n      the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>.accordion-body<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>, though the transition does limit overflow.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionBody</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionItem</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionItem</span> <span class="token attr-name">:item-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionHeader</span><span class="token punctuation">&gt;</span></span>\n      Accordion Item #3\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionHeader</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionBody</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the third item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is hidden by default,\n      until the collapse plugin adds the appropriate classes that we use to style each\n      element. These classes control the overall appearance, as well as the showing and\n      hiding via CSS transitions. You can modify any of this with custom CSS or overriding\n      our default variables. It&#39;s also worth noting that just about any HTML can go within\n      the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>.accordion-body<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>, though the transition does limit overflow.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionBody</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionItem</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordion</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h3 id="flush" tabindex="-1">Flush <a class="anchor-link" href="#flush" aria-hidden="true">#</a></h3><p>Add <code>flush</code> to remove the default <code>background-color</code>, some borders, and some rounded corners to render accordions edge-to-edge with their parent container.</p>',3),A={class:"docs-example border rounded-top p-4"},I=(0,t.Uk)(" Accordion Item #1 "),S=(0,t._)("strong",null,"This is the first item's accordion body.",-1),_=(0,t.Uk)(" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the "),T=(0,t._)("code",null,".accordion-body",-1),H=(0,t.Uk)(", though the transition does limit overflow. "),x=(0,t.Uk)(" Accordion Item #2 "),W=(0,t._)("strong",null,"This is the second item's accordion body.",-1),U=(0,t.Uk)(" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the "),j=(0,t._)("code",null,".accordion-body",-1),B=(0,t.Uk)(", though the transition does limit overflow. "),q=(0,t.Uk)(" Accordion Item #3 "),M=(0,t._)("strong",null,"This is the third item's accordion body.",-1),Y=(0,t.Uk)(" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the "),L=(0,t._)("code",null,".accordion-body",-1),E=(0,t.Uk)(", though the transition does limit overflow. "),P=(0,t.uE)('<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordion</span> <span class="token attr-name">flush</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionItem</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionHeader</span><span class="token punctuation">&gt;</span></span>\n      Accordion Item #1\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionHeader</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionBody</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the first item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is hidden by default,\n      until the collapse plugin adds the appropriate classes that we use to style each\n      element. These classes control the overall appearance, as well as the showing and\n      hiding via CSS transitions. You can modify any of this with custom CSS or overriding\n      our default variables. It&#39;s also worth noting that just about any HTML can go within\n      the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>.accordion-body<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>, though the transition does limit overflow.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionBody</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionItem</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionItem</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionHeader</span><span class="token punctuation">&gt;</span></span>\n      Accordion Item #2\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionHeader</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionBody</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the second item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is hidden by default,\n      until the collapse plugin adds the appropriate classes that we use to style each\n      element. These classes control the overall appearance, as well as the showing and\n      hiding via CSS transitions. You can modify any of this with custom CSS or overriding\n      our default variables. It&#39;s also worth noting that just about any HTML can go within\n      the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>.accordion-body<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>, though the transition does limit overflow.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionBody</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionItem</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionItem</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionHeader</span><span class="token punctuation">&gt;</span></span>\n      Accordion Item #3\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionHeader</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionBody</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the third item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is hidden by default,\n      until the collapse plugin adds the appropriate classes that we use to style each\n      element. These classes control the overall appearance, as well as the showing and\n      hiding via CSS transitions. You can modify any of this with custom CSS or overriding\n      our default variables. It&#39;s also worth noting that just about any HTML can go within\n      the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>.accordion-body<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>, though the transition does limit overflow.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionBody</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionItem</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordion</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h3 id="always-open" tabindex="-1">Always open <a class="anchor-link" href="#always-open" aria-hidden="true">#</a></h3><p>Add <code>always-open</code> property to make accordion items stay open when another item is opened.</p>',3),z={class:"docs-example border rounded-top p-4"},V=(0,t.Uk)(" Accordion Item #1 "),D=(0,t._)("strong",null,"This is the first item's accordion body.",-1),F=(0,t.Uk)(" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the "),R=(0,t._)("code",null,".accordion-body",-1),Z=(0,t.Uk)(", though the transition does limit overflow. "),G=(0,t.Uk)(" Accordion Item #2 "),J=(0,t._)("strong",null,"This is the second item's accordion body.",-1),K=(0,t.Uk)(" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the "),N=(0,t._)("code",null,".accordion-body",-1),O=(0,t.Uk)(", though the transition does limit overflow. "),Q=(0,t.Uk)(" Accordion Item #3 "),X=(0,t._)("strong",null,"This is the third item's accordion body.",-1),$=(0,t.Uk)(" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the "),nn=(0,t._)("code",null,".accordion-body",-1),sn=(0,t.Uk)(", though the transition does limit overflow. "),an=(0,t.uE)('<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordion</span> <span class="token attr-name">:active-item-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">always-open</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionItem</span> <span class="token attr-name">:item-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionHeader</span><span class="token punctuation">&gt;</span></span>\n      Accordion Item #1\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionHeader</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionBody</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the first item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is hidden by default,\n      until the collapse plugin adds the appropriate classes that we use to style each\n      element. These classes control the overall appearance, as well as the showing and\n      hiding via CSS transitions. You can modify any of this with custom CSS or overriding\n      our default variables. It&#39;s also worth noting that just about any HTML can go within\n      the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>.accordion-body<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>, though the transition does limit overflow.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionBody</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionItem</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionItem</span> <span class="token attr-name">:item-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionHeader</span><span class="token punctuation">&gt;</span></span>\n      Accordion Item #2\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionHeader</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionBody</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the second item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is hidden by default,\n      until the collapse plugin adds the appropriate classes that we use to style each\n      element. These classes control the overall appearance, as well as the showing and\n      hiding via CSS transitions. You can modify any of this with custom CSS or overriding\n      our default variables. It&#39;s also worth noting that just about any HTML can go within\n      the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>.accordion-body<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>, though the transition does limit overflow.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionBody</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionItem</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionItem</span> <span class="token attr-name">:item-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionHeader</span><span class="token punctuation">&gt;</span></span>\n      Accordion Item #3\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionHeader</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CAccordionBody</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the third item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is hidden by default,\n      until the collapse plugin adds the appropriate classes that we use to style each\n      element. These classes control the overall appearance, as well as the showing and\n      hiding via CSS transitions. You can modify any of this with custom CSS or overriding\n      our default variables. It&#39;s also worth noting that just about any HTML can go within\n      the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>.accordion-body<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>, though the transition does limit overflow.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionBody</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordionItem</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CAccordion</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h2 id="api" tabindex="-1">API <a class="anchor-link" href="#api" aria-hidden="true">#</a></h2><h3 id="caccordion" tabindex="-1">CAccordion <a class="anchor-link" href="#caccordion" aria-hidden="true">#</a></h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> CAccordion <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue&#39;</span>\n<span class="token comment">// or</span>\n<span class="token keyword">import</span> CAccordion <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue/src/components/accordion/CAccordion&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="props" tabindex="-1">Props <a class="anchor-link" href="#props" aria-hidden="true">#</a></h4><table class="table table-striped table-api"><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Values</th><th>Default</th></tr></thead><tbody><tr><td><strong>active-item-key</strong></td><td>The active item key.</td><td>number|string</td><td>-</td><td>-</td></tr><tr><td><strong>always-open</strong></td><td>Make accordion items stay open when another item is opened</td><td>boolean</td><td>-</td><td></td></tr><tr><td><strong>flush</strong></td><td>Removes the default background-color, some borders, and some rounded corners to render accordions edge-to-edge with their parent container.</td><td>boolean</td><td>-</td><td></td></tr></tbody></table><h3 id="caccordionheader" tabindex="-1">CAccordionHeader <a class="anchor-link" href="#caccordionheader" aria-hidden="true">#</a></h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> CAccordionHeader <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue&#39;</span>\n<span class="token comment">// or</span>\n<span class="token keyword">import</span> CAccordionHeader <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue/src/components/accordion/CAccordionHeader&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="caccordionbody" tabindex="-1">CAccordionBody <a class="anchor-link" href="#caccordionbody" aria-hidden="true">#</a></h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> CAccordionBody <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue&#39;</span>\n<span class="token comment">// or</span>\n<span class="token keyword">import</span> CAccordionBody <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue/src/components/accordion/CAccordionBody&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',10),tn={},en=(0,a(94407).Z)(tn,[["render",function(n,s){const a=(0,t.up)("CAccordionHeader"),tn=(0,t.up)("CAccordionBody"),en=(0,t.up)("CAccordionItem"),on=(0,t.up)("CAccordion");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,o,(0,t._)("div",p,[(0,t.Wm)(on,null,{default:(0,t.w5)((()=>[(0,t.Wm)(en,{"item-key":1},{default:(0,t.w5)((()=>[(0,t.Wm)(a,null,{default:(0,t.w5)((()=>[l])),_:1}),(0,t.Wm)(tn,null,{default:(0,t.w5)((()=>[c,i,u,r])),_:1})])),_:1}),(0,t.Wm)(en,{"item-key":2},{default:(0,t.w5)((()=>[(0,t.Wm)(a,null,{default:(0,t.w5)((()=>[d])),_:1}),(0,t.Wm)(tn,null,{default:(0,t.w5)((()=>[k,g,h,b])),_:1})])),_:1}),(0,t.Wm)(en,{"item-key":3},{default:(0,t.w5)((()=>[(0,t.Wm)(a,null,{default:(0,t.w5)((()=>[m])),_:1}),(0,t.Wm)(tn,null,{default:(0,t.w5)((()=>[y,w,v,f])),_:1})])),_:1})])),_:1})]),C,(0,t._)("div",A,[(0,t.Wm)(on,{flush:""},{default:(0,t.w5)((()=>[(0,t.Wm)(en,null,{default:(0,t.w5)((()=>[(0,t.Wm)(a,null,{default:(0,t.w5)((()=>[I])),_:1}),(0,t.Wm)(tn,null,{default:(0,t.w5)((()=>[S,_,T,H])),_:1})])),_:1}),(0,t.Wm)(en,null,{default:(0,t.w5)((()=>[(0,t.Wm)(a,null,{default:(0,t.w5)((()=>[x])),_:1}),(0,t.Wm)(tn,null,{default:(0,t.w5)((()=>[W,U,j,B])),_:1})])),_:1}),(0,t.Wm)(en,null,{default:(0,t.w5)((()=>[(0,t.Wm)(a,null,{default:(0,t.w5)((()=>[q])),_:1}),(0,t.Wm)(tn,null,{default:(0,t.w5)((()=>[M,Y,L,E])),_:1})])),_:1})])),_:1})]),P,(0,t._)("div",z,[(0,t.Wm)(on,{"active-item-key":2,"always-open":""},{default:(0,t.w5)((()=>[(0,t.Wm)(en,{"item-key":1},{default:(0,t.w5)((()=>[(0,t.Wm)(a,null,{default:(0,t.w5)((()=>[V])),_:1}),(0,t.Wm)(tn,null,{default:(0,t.w5)((()=>[D,F,R,Z])),_:1})])),_:1}),(0,t.Wm)(en,{"item-key":2},{default:(0,t.w5)((()=>[(0,t.Wm)(a,null,{default:(0,t.w5)((()=>[G])),_:1}),(0,t.Wm)(tn,null,{default:(0,t.w5)((()=>[J,K,N,O])),_:1})])),_:1}),(0,t.Wm)(en,{"item-key":3},{default:(0,t.w5)((()=>[(0,t.Wm)(a,null,{default:(0,t.w5)((()=>[Q])),_:1}),(0,t.Wm)(tn,null,{default:(0,t.w5)((()=>[X,$,nn,sn])),_:1})])),_:1})])),_:1})]),an],64)}]])},75245:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-6d305fd1",path:"/components/accordion.html",title:"Vue Accordion Component",lang:"en-US",frontmatter:{title:"Vue Accordion Component",name:"Accordion",description:"Build vertically collapsing accordions in combination with our Vue Collapse component."},excerpt:"",headers:[{level:2,title:"Examples",slug:"examples",children:[{level:3,title:"Flush",slug:"flush",children:[]},{level:3,title:"Always open",slug:"always-open",children:[]}]},{level:2,title:"API",slug:"api",children:[{level:3,title:"CAccordion",slug:"caccordion",children:[]},{level:3,title:"CAccordionHeader",slug:"caccordionheader",children:[]},{level:3,title:"CAccordionBody",slug:"caccordionbody",children:[]}]}],filePathRelative:"components/accordion.md",git:{updatedTime:1635705286e3,contributors:[{name:"Łukasz Holeczek",email:"lukasz@holeczek.pl",commits:2}]}}}}]);