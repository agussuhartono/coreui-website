(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{756:function(e,t,n){"use strict";n.r(t);var o=n(0),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("Api",{attrs:{props:[["color","undefined","String","Background color of the component."],["variant","undefined","String","slot_variant"],["size","undefined","String","Size of the switch. Valid values: 'sm','lg'."],["shape","undefined","String","Shape of the switch. Valid values: 'square','pill'."],["checked","false","Boolean /String /Number","slot_checked"],["labelOn, labelOff","undefined","String","slot_label"],["type","'checkbox'","String","HTML input type. Valid values: 'checkbox', 'radio'. If set to 'radio' component mechanism changes (see checked prop)."],["id, name, disabled, required, value other input attributes","undefined","HTML attributes","HTML attributes (not props) that could be passed to input."]],events:[["update:checked","true/false, event object","Triggered after clicking on the switch."]]},scopedSlots:e._u([{key:"slot_label",fn:function(){return[e._v("\n    Optionally set text labels on switch (you can pass one or both labels)\n    "),n("CodeBlock",{attrs:{code:'<CSwitch labelOn="\\u2713" labelOff="\\u2715"/>',language:"html"}})]},proxy:!0},{key:"slot_checked",fn:function(){return[e._v("\n    Prop which indicates state of the element. Set .sync modifier to receive state changes.\n  ")]},proxy:!0},{key:"slot_variant",fn:function(){return[e._v("\n    Variant of the component valid values: 'outline', 'opposite', '3d'.\n  ")]},proxy:!0}])})}),[],!1,null,null,null);t.default=a.exports}}]);