(window.webpackJsonp=window.webpackJsonp||[]).push([[198],{2408:function(r,s,e){"use strict";e.r(s);var a=e(0),t=Object(a.a)({},(function(){var r=this,s=r.$createElement,e=r._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[e("h1",{attrs:{id:"progress-bar"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#progress-bar"}},[r._v("#")]),r._v(" Progress bar")]),r._v(" "),e("h2",{attrs:{id:"usage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[r._v("#")]),r._v(" Usage")]),r._v(" "),e("CodeExample",{attrs:{filename:"progress/Progress"}}),r._v(" "),e("h2",{attrs:{id:"features"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[r._v("#")]),r._v(" Features")]),r._v(" "),e("ul",[e("li",[r._v("Single or splitted progress bar,")]),r._v(" "),e("li",[r._v("Diffrent widths heights and styles available,")]),r._v(" "),e("li",[r._v("Concise syntax for single bar")])]),r._v(" "),e("h2",{attrs:{id:"cprogress-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cprogress-api"}},[r._v("#")]),r._v(" CProgress API")]),r._v(" "),e("p",[r._v("For single bar use CProgress component without children. For splited progress bar (progress bar divided like in second example above) use CProgressBar components as children.\n"),e("ApiExecutor",{attrs:{filename:"Progress"}})],1),r._v(" "),e("h2",{attrs:{id:"cprogressbar-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cprogressbar-api"}},[r._v("#")]),r._v(" CProgressBar API")]),r._v(" "),e("p",[r._v("Use as a child component of CProgress when you want to split progress bar into multiple bars. To avoid passing props multiple times, you can define them once in parent CProgress component, so they will be inherited by all CProgressBar's. Props defined in CProgressBar have precedens over CProgress props.\n"),e("ApiExecutor",{attrs:{filename:"ProgressBar"}})],1)],1)}),[],!1,null,null,null);s.default=t.exports}}]);