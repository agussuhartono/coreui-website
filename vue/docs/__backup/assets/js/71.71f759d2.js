(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{749:function(e,t,n){"use strict";n.r(t);var o=n(0),i=Object(o.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("Api",{attrs:{props:[["options","undefined","Array","slot_options"],["value","undefined","String/Number/Boolean/Array","The value of select input. Set .sync modifier to track prop changes."],["plaintext","false","Boolean","Sets element to plaintext."],["placeholder","undefined","String","Sets empty value selected option with placeholder. Option is selected disabled and hidden."],["custom","false","Boolean","Enables custom input styling."]],events:[["update:value","value","Emitted on select change. Event is not emitted if 'multiple' HTML attribute is passed."]]},scopedSlots:e._u([{key:"slot_options",fn:function(){return[e._v("\n    Options of select element. If option is an object it has extended functionality, accesible by keys:\n    "),n("li",[e._v("label - optional property used when content inside option differ from value")]),e._v(" "),n("li",[e._v("value - the value of option. If text is not defined it will be displayed as option content")]),e._v(" "),n("li",[e._v("disabled - set to 'disabled' or 'true' to disable the option")]),e._v(" "),n("li",[e._v("attrs - object with additional html attributes of the option")]),e._v(" "),n("br"),e._v("\n    Example Option Array:\n    "),n("br"),e._v(" "),n("code",[e._v("\n    :options=\"[\n      { value: 'js', label: 'JavaScript' },\n      { value: 'html', label: 'HTML' }\n    ]\"\n    ")])]},proxy:!0}])})}),[],!1,null,null,null);t.default=i.exports}}]);