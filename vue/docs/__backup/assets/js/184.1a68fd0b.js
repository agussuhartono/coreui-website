(window.webpackJsonp=window.webpackJsonp||[]).push([[184],{2394:function(t,a,e){"use strict";e.r(a);var r=e(0),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"form-components"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#form-components"}},[t._v("#")]),t._v(" Form components")]),t._v(" "),e("h2",{attrs:{id:"usage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),e("CodeExample",{attrs:{filename:"form/Form"}}),t._v(" "),e("h2",{attrs:{id:"features"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[t._v("#")]),t._v(" Features")]),t._v(" "),e("ul",[e("li",[t._v("All-in-one form components.")]),t._v(" "),e("li",[t._v("Components share similar API and functionalities.")]),t._v(" "),e("li",[t._v("Use as basic or advanced customized inputs.")])]),t._v(" "),e("h2",{attrs:{id:"shared-props-and-slots"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shared-props-and-slots"}},[t._v("#")]),t._v(" Shared props and slots")]),t._v(" "),e("p",[t._v("Form components are sharing similar functionality,\nso you can remember their API and functionalities easily.")]),t._v(" "),e("p",[t._v("Html attributes passed to the form components are passed to the input, not wrapper (overridden default component behavior). If the HTML attribute is not mentioned as a prop, it means that it has default HTML behavior.")]),t._v(" "),e("p",[t._v("Besides the mentioned events, you can use base Vue listeners for event handling.\n"),e("ApiExecutor",{attrs:{filename:"FormShared"}})],1),t._v(" "),e("h2",{attrs:{id:"cinput-and-ctextarea-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cinput-and-ctextarea-api"}},[t._v("#")]),t._v(" CInput and CTextarea API")]),t._v(" "),e("ApiExecutor",{attrs:{filename:"Input"}}),t._v(" "),e("p",[e("a",{attrs:{href:"#shared-props-and-slots"}},[t._v("+ Shared props and slots")])]),t._v(" "),e("h2",{attrs:{id:"cinputcheckbox-and-cinputradio-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cinputcheckbox-and-cinputradio-api"}},[t._v("#")]),t._v(" CInputCheckbox and CInputRadio API")]),t._v(" "),e("p",[t._v("These components share similar props, but they differ in managing state, which is described in 'checked' prop description.")]),t._v(" "),e("p",[t._v("For multiple CInputRadio's, additionally to props, use 'name' HTML attribute accordingly, like in the example below.\n"),e("ApiExecutor",{attrs:{filename:"InputCheckbox"}}),t._v(" "),e("a",{attrs:{href:"#shared-props-and-slots"}},[t._v("+ Shared props and slots")])],1),t._v(" "),e("h2",{attrs:{id:"cinputradiogroup-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cinputradiogroup-api"}},[t._v("#")]),t._v(" CInputRadioGroup API")]),t._v(" "),e("p",[t._v("Component used for CInputRadio components grouping.\n"),e("ApiExecutor",{attrs:{filename:"InputRadioGroup"}})],1),t._v(" "),e("h2",{attrs:{id:"cselect-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cselect-api"}},[t._v("#")]),t._v(" CSelect API")]),t._v(" "),e("ApiExecutor",{attrs:{filename:"Select"}}),t._v(" "),e("p",[e("a",{attrs:{href:"#shared-props-and-slots"}},[t._v("+ Shared props and slots")])]),t._v(" "),e("h2",{attrs:{id:"cinputfile-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cinputfile-api"}},[t._v("#")]),t._v(" CInputFile API")]),t._v(" "),e("ApiExecutor",{attrs:{filename:"InputFile"}}),t._v(" "),e("p",[e("a",{attrs:{href:"#shared-props-and-slots"}},[t._v("+ Shared props and slots")])]),t._v(" "),e("h2",{attrs:{id:"cform-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cform-api"}},[t._v("#")]),t._v(" CForm API")]),t._v(" "),e("p",[t._v("Simple 'form' tag wrapper component\n"),e("ApiExecutor",{attrs:{filename:"Form"}})],1)],1)}),[],!1,null,null,null);a.default=s.exports}}]);