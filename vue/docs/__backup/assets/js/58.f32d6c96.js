(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{735:function(e,t,n){"use strict";n.r(t);var o=n(0),s=Object(o.a)({},(function(){var e=this.$createElement;return(this._self._c||e)("Api",{attrs:{props:[["inline","false","Boolean","Defines if component renders as inline or with dropdown."],["multiple","true","Boolean","Multiple options can be selected at once."],["options","undefined","Array","Config array for rendering option and optgroup elements"],["optionsEmptyPlaceholder","no items","String","Placeholder for no options items"],["search","false","Boolean","Show search input"],["searchPlaceholder","Select...","String","Toggles search input"],["selection","true","Boolean","Renders selected items list"],["selectionType","counter","String","List type of selected items: [counter | tags | text ]"],["selectionTypeCounterText","item(s) selected","String","Default text for counter type"],["selected","","Array","Selected values"],["name","","String","Defines a name for the select list. Needed to reference the form data"],["form","","String","Defines which form the select drop-down list belongs to"]],slots:[["default","undefined","Options for select if there is no config array defined"]],events:[["update","(event)","option item selected"]]}})}),[],!1,null,null,null);t.default=s.exports}}]);