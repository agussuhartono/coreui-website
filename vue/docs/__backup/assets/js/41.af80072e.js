(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{721:function(e,n,i){"use strict";i.r(n);var t=i(0),a=Object(t.a)({},(function(){var e=this,n=e.$createElement,i=e._self._c||n;return i("Api",{attrs:{props:[["validFeedback","undefined","String","Text which will be displayed when feedback is valid."],["invalidFeedback","undefined","String","Text which will be displayed when feedback is invalid."],["tooltipFeedback","false","Boolean","Show feedback as a tooltip."],["description","undefined","String","Description text displayed under form element."],["append","undefined","String","Content appended to input. (N/A in checkbox, radio and file)"],["prepend","undefined","String","Content prepended to input. (N/A in checkbox, radio and file)"],["label","undefined","String","Set label text of form element."],["wasValidated","false","Boolean","Adds initial validation to the element."],["isValid","null","Boolean/Function","Defines if form element is valid. If function is passed it is equal to boolean value returned by function, where current value of form element is taken as an argument. Effect of using this prop is added bootstrap is-valid/ is-invalid class."],["addInputClasses","undefined","String/Array/Object","Adds classes to input."],["addLabelClasses","undefined","String/Array/Object","Adds classes to label."],["horizontal","false","Boolean/Object","slot_horizontal"],["size","undefined","String","Sets size of form element. Valid values: 'sm', 'lg'. (N/A in checkbox, radio and file)."],["addWrapperClasses","undefined","String/Array/Object","Adds classes to input group wrapper.  (N/A in checkbox and radio)"]],slots:[["label","undefined","Optional slot for custom label."],["prepend-content","undefined","Optional slot for custom prepend content rendered inside '<span class='input-group-text'>'. (N/A in checkbox, radio and file)."],["append-content","undefined","Optional slot for custom append content rendered inside '<span class='input-group-text'>'. (N/A in checkbox, radio and file)."],["prepend","undefined","Optional slot for custom prepend. (N/A in checkbox, radio and file)."],["append","undefined","Optional slot for custom append. (N/A in checkbox, radio and file)"],["label-after-input","undefined","Optional slot for custom label displayed after input. (N/A in checkbox and radio)"],["valid-feedback","undefined","Optional slot for custom valid feedback."],["invalid-feedback","undefined","Optional slot for custom invalid feedback."],["description","undefined","Optional slot for custom description."]]},scopedSlots:e._u([{key:"slot_horizontal",fn:function(){return[e._v("\n    Display form element in horizontal grid.\n    Enabled property have two modes:\n    "),i("ul",[i("li",[e._v("\n        true - form element displayed in column wrappers with assigned default grid classes:\n         "),i("ul",[i("li",[e._v("label: col-sm-3")]),e._v(" "),i("li",[e._v("input: col-sm-9")])])]),e._v(" "),i("li",[e._v("\n        object with keys: label, input - assigning css classes to label and input wrappers. Example:\n        "),i("br"),e._v(" "),i("code",{staticClass:"ml-4"},[e._v("{ label: 'col-sm-5', input: 'col-sm-7'}")])])]),e._v("\n    (N/A in checkbox and radio)\n  ")]},proxy:!0}])})}),[],!1,null,null,null);n.default=a.exports}}]);