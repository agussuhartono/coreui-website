(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{755:function(n,e,t){"use strict";t.r(e);var o=t(0),i=Object(o.a)({},(function(){var n=this,e=n.$createElement;return(n._self._c||e)("Api",{attrs:{props:[["name","undefined","String","Sets text of the item."],["badge","undefined","Object","slot_badge"],["icon","undefined","String/Object","slot_icon"],["fontIcon","undefined","String","slot_fontIcon"],["addLinkClasses","undefined","String/ Array/ Object","Add classes to link element."],["label","false","Boolean","Sets link to label style."],["color","undefined","String","Color of the element."]],slots:[["default","sidebar nav link with optional name, icon and badge","Content of the component. Use it you want to customize item."]]},scopedSlots:n._u([{key:"slot_icon",fn:function(){return[n._v("\n    Use if you want to add icon as CIcon component. Available options:\n    - string - if you need to pass only CIcon 'name' prop,\n    - object - if you want to pass more of CIcon props/ attributes\n  ")]},proxy:!0},{key:"slot_fontIcon",fn:function(){return[n._v("\n    Use if you want to add css font icon. Value of prop are css classes of the icon.\n  ")]},proxy:!0},{key:"slot_badge",fn:function(){return[n._v("\n    If set badge will be displayed on the right side of the link. \n    Keys in object are CBadge component props, \n    content of the badge is defined by additional 'text' key. \n  ")]},proxy:!0}])})}),[],!1,null,null,null);e.default=i.exports}}]);