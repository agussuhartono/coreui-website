(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{683:function(e,t,o){"use strict";o.r(t);var n=o(0),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("Api",{attrs:{props:[["color","undefined","String","Defines background color of the alert"],["closeButton","false","Boolean","Adds close button to the alert."],["show","true","Boolean/Number","slot_show"],["fade","true","Boolean","Sets fading effect on visibility change."]],slots:[["default","undefined","Content of the alert. Slot have scoped method 'dismiss', which closes the alert."]],events:[["update:show","undefined","Event is emmited, state of the alert changes"]]},scopedSlots:e._u([{key:"slot_show",fn:function(){return[e._v("\n    Prop is controlling visibility, there are following states:\n    "),o("ul",{staticClass:"ml-3"},[o("li",[e._v("true: default state, alert is rendered")]),e._v(" "),o("li",[e._v("false: alert is not rendered")]),e._v(" "),o("li",[e._v("Numeric value: Alert will be rendered passed value for time period equal to that number in seconds. ")])]),e._v("\n    If you need to track state of alert set .sync modifier on this prop.\n  ")]},proxy:!0}])})}),[],!1,null,null,null);t.default=s.exports}}]);