import{_ as o,r as l,c as d,a as e,b as a,F as i,d as s,e as n,o as c}from"./app.13bd7681.js";const r={},p=e("h2",{id:"example",tabindex:"-1"},[s("Example "),e("a",{class:"anchor-link",href:"#example","aria-hidden":"true"},"#")],-1),u=e("p",null,[s("Provide an option to dismiss or close a component with "),e("code",null,"<CCloseButton>"),s(". Default styling is limited, but highly customizable. Modify the Sass variables to replace the default "),e("code",null,"background-image"),s(".")],-1),h={class:"docs-example border rounded-top p-4"},b=n(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CCloseButton</span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="disabled-state" tabindex="-1">Disabled state <a class="anchor-link" href="#disabled-state" aria-hidden="true">#</a></h2><p>Disabled close buttons change their <code>opacity</code>. We&#39;ve also applied <code>pointer-events: none</code> and <code>user-select: none</code> to preventing hover and active states from triggering.</p>`,3),m={class:"docs-example border rounded-top p-4"},g=n(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CCloseButton</span> <span class="token attr-name">disabled</span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="white-variant" tabindex="-1">White variant <a class="anchor-link" href="#white-variant" aria-hidden="true">#</a></h2><p>Change the default <code>&lt;CCloseButton&gt;</code> to be white with the <code>white</code> boolean property.</p>`,3),v={class:"docs-example rounded-top p-4 bg-dark"},k=n(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CCloseButton</span> <span class="token attr-name">white</span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CCloseButton</span> <span class="token attr-name">white</span> <span class="token attr-name">disabled</span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="api" tabindex="-1">API <a class="anchor-link" href="#api" aria-hidden="true">#</a></h2><h3 id="cclosebutton" tabindex="-1">CCloseButton <a class="anchor-link" href="#cclosebutton" aria-hidden="true">#</a></h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> CCloseButton <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue&#39;</span>
<span class="token comment">// or</span>
<span class="token keyword">import</span> CCloseButton <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue/src/components/close-button/CCloseButton&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="props" tabindex="-1">Props <a class="anchor-link" href="#props" aria-hidden="true">#</a></h4><table class="table table-striped table-api"><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Values</th><th>Default</th></tr></thead><tbody><tr><td><strong>disabled</strong></td><td>Toggle the disabled state for the component.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><strong>white</strong></td><td>Change the default color to white.</td><td>boolean</td><td>-</td><td></td></tr></tbody></table><h4 id="events" tabindex="-1">Events <a class="anchor-link" href="#events" aria-hidden="true">#</a></h4><table class="table table-striped table-api"><thead><tr><th>Event name</th><th>Description</th><th>Properties</th></tr></thead><tbody><tr><td><strong>click</strong></td><td>Event called when the user clicks on the component.</td><td></td></tr></tbody></table>`,8);function _(C,f){const t=l("CCloseButton");return c(),d(i,null,[p,u,e("div",h,[a(t)]),b,e("div",m,[a(t,{disabled:""})]),g,e("div",v,[a(t,{white:""}),a(t,{white:"",disabled:""})]),k],64)}var w=o(r,[["render",_],["__file","close-button.html.vue"]]);export{w as default};
