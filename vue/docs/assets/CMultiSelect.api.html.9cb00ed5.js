import{_ as t,e}from"./app.de592133.js";const d={},s=e(`<h3 id="cmultiselect" tabindex="-1">CMultiSelect <a class="anchor-link" href="#cmultiselect" aria-hidden="true">#</a></h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> CMultiSelect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue-pro&#39;</span>
<span class="token comment">// or</span>
<span class="token keyword">import</span> CMultiSelect <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue-pro/src/components/multi-select/CMultiSelect&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="props" tabindex="-1">Props <a class="anchor-link" href="#props" aria-hidden="true">#</a></h4><table class="table table-striped table-api"><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Values</th><th>Default</th></tr></thead><tbody><tr><td><strong>cleaner</strong></td><td>Enables selection cleaner element.<br><code>@default</code> true</td><td>boolean</td><td>-</td><td>true</td></tr><tr><td><strong>multiple</strong></td><td>It specifies that multiple options can be selected at once.<br><code>@default</code> true</td><td>boolean</td><td>-</td><td>true</td></tr><tr><td><strong>options</strong></td><td>List of option elements.</td><td>Option[]</td><td>-</td><td>() =&gt; []</td></tr><tr><td><strong>options-max-height</strong></td><td>Sets maxHeight of options list.<br><code>@default</code> &#39;auto&#39;</td><td>number|string</td><td>-</td><td>&#39;auto&#39;</td></tr><tr><td><strong>options-style</strong></td><td>Sets option style.<br><code>@default</code> &#39;checkbox&#39;</td><td>string</td><td><code>&#39;checkbox&#39;</code>, <code>&#39;text&#39;</code></td><td>&#39;checkbox&#39;</td></tr><tr><td><strong>placeholder</strong></td><td>Specifies a short hint that is visible in the search input.<br><code>@default</code> &#39;Select...&#39;&#39;</td><td>string</td><td>-</td><td>&#39;Select...&#39;</td></tr><tr><td><strong>search</strong></td><td>Enables search input element.</td><td>boolean</td><td>-</td><td>true</td></tr><tr><td><strong>search-no-results-label</strong></td><td>Sets the label for no results when filtering.</td><td>string</td><td>-</td><td>&#39;no items&#39;</td></tr><tr><td><strong>select-all</strong></td><td>Enables select all button.<br><code>@default</code> true</td><td>boolean</td><td>-</td><td>true</td></tr><tr><td><strong>select-all-label</strong></td><td>Sets the select all button label.<br><code>@default</code> &#39;Select all options&#39;</td><td>string</td><td>-</td><td>&#39;Select all options&#39;</td></tr><tr><td><strong>selection-type</strong></td><td>Sets the selection style.<br><code>@default</code> &#39;tags&#39;</td><td>string</td><td><code>&#39;counter&#39;</code>, <code>&#39;tags&#39;</code>, <code>&#39;text&#39;</code></td><td>&#39;tags&#39;</td></tr><tr><td><strong>selection-type-counter-text</strong></td><td>Sets the counter selection label.<br><code>@default</code> &#39;item(s) selected&#39;</td><td>string</td><td>-</td><td>&#39;item(s) selected&#39;</td></tr><tr><td><strong>visible</strong></td><td>Toggle the visibility of multi select dropdown.<br><code>@default</code> false</td><td>boolean</td><td>-</td><td>false</td></tr></tbody></table><h4 id="events" tabindex="-1">Events <a class="anchor-link" href="#events" aria-hidden="true">#</a></h4><table class="table table-striped table-api"><thead><tr><th>Event name</th><th>Description</th><th>Properties</th></tr></thead><tbody><tr><td><strong>change</strong></td><td>Execute a function when a user changes the selected option. [docs]</td><td></td></tr></tbody></table>`,6);function n(o,r){return s}var l=t(d,[["render",n],["__file","CMultiSelect.api.html.vue"]]);export{l as default};
