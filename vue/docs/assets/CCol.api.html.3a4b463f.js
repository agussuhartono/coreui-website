import{_ as t,e}from"./app.13bd7681.js";const n={},r=e(`<h3 id="ccol" tabindex="-1">CCol <a class="anchor-link" href="#ccol" aria-hidden="true">#</a></h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> CCol <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue&#39;</span>
<span class="token comment">// or</span>
<span class="token keyword">import</span> CCol <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue/src/components/grid/CCol&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="props" tabindex="-1">Props <a class="anchor-link" href="#props" aria-hidden="true">#</a></h4><table class="table table-striped table-api"><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Values</th><th>Default</th></tr></thead><tbody><tr><td><strong>xs</strong></td><td>The number of columns/offset/order on extra small devices (&lt;576px).</td><td>Col</td><td><code>&#39;auto&#39; | number | string | boolean | { span: &#39;auto&#39; | number | string | boolean } | { offset: number | string } | { order: &#39;first&#39; | &#39;last&#39; | number | string }</code></td><td>-</td></tr><tr><td><strong>sm</strong></td><td>The number of columns/offset/order on small devices (&lt;768px).</td><td>Col</td><td><code>&#39;auto&#39; | number | string | boolean | { span: &#39;auto&#39; | number | string | boolean } | { offset: number | string } | { order: &#39;first&#39; | &#39;last&#39; | number | string }</code></td><td>-</td></tr><tr><td><strong>md</strong></td><td>The number of columns/offset/order on medium devices (&lt;992px).</td><td>Col</td><td><code>&#39;auto&#39; | number | string | boolean | { span: &#39;auto&#39; | number | string | boolean } | { offset: number | string } | { order: &#39;first&#39; | &#39;last&#39; | number | string }</code></td><td>-</td></tr><tr><td><strong>lg</strong></td><td>The number of columns/offset/order on large devices (&lt;1200px).</td><td>Col</td><td><code>&#39;auto&#39; | number | string | boolean | { span: &#39;auto&#39; | number | string | boolean } | { offset: number | string } | { order: &#39;first&#39; | &#39;last&#39; | number | string }</code></td><td>-</td></tr><tr><td><strong>xl</strong></td><td>The number of columns/offset/order on X-Large devices (&lt;1400px).</td><td>Col</td><td><code>&#39;auto&#39; | number | string | boolean | { span: &#39;auto&#39; | number | string | boolean } | { offset: number | string } | { order: &#39;first&#39; | &#39;last&#39; | number | string }</code></td><td>-</td></tr><tr><td><strong>xxl</strong></td><td>The number of columns/offset/order on XX-Large devices (\u22651400px).</td><td>Col</td><td><code>&#39;auto&#39; | number | string | boolean | { span: &#39;auto&#39; | number | string | boolean } | { offset: number | string } | { order: &#39;first&#39; | &#39;last&#39; | number | string }</code></td><td>-</td></tr></tbody></table>`,4);function s(o,a){return r}var l=t(n,[["render",s],["__file","CCol.api.html.vue"]]);export{l as default};
