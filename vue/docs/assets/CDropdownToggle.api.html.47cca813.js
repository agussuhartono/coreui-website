import{_ as t,e as o}from"./app.0880af9b.js";const e={},d=o(`<h3 id="cdropdowntoggle" tabindex="-1">CDropdownToggle <a class="anchor-link" href="#cdropdowntoggle" aria-hidden="true">#</a></h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> CDropdownToggle <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue&#39;</span>
<span class="token comment">// or</span>
<span class="token keyword">import</span> CDropdownToggle <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue/src/components/dropdown/CDropdownToggle&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="props" tabindex="-1">Props <a class="anchor-link" href="#props" aria-hidden="true">#</a></h4><table class="table table-striped table-api"><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Values</th><th>Default</th></tr></thead><tbody><tr><td><strong>active</strong></td><td>Toggle the active state for the component.</td><td>boolean</td><td>-</td><td>false</td></tr><tr><td><strong>color</strong></td><td>Sets the color context of the component to one of CoreUI\u2019s themed colors.</td><td>string</td><td><code>&#39;primary&#39;</code>, <code>&#39;secondary&#39;</code>, <code>&#39;success&#39;</code>, <code>&#39;danger&#39;</code>, <code>&#39;warning&#39;</code>, <code>&#39;info&#39;</code>, <code>&#39;dark&#39;</code>, <code>&#39;light&#39;</code></td><td></td></tr><tr><td><strong>caret</strong></td><td>Enables pseudo element caret on toggler.</td><td>boolean</td><td>-</td><td>true</td></tr><tr><td><strong>component</strong></td><td>Component used for the root node. Either a string to use a HTML element or a component.</td><td>string</td><td>-</td><td>&#39;button&#39;</td></tr><tr><td><strong>disabled</strong></td><td>Toggle the disabled state for the component.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><strong>size</strong></td><td>Size the component small or large.</td><td>string</td><td><code>&#39;sm&#39;</code>, <code>&#39;lg&#39;</code></td><td>-</td></tr><tr><td><strong>split</strong></td><td>Similarly, create split button dropdowns with virtually the same markup as single button dropdowns, but with the addition of <code>.dropdown-toggle-split</code> className for proper spacing around the dropdown caret.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><strong>variant</strong></td><td>Set the button variant to an outlined button or a ghost button.</td><td>string</td><td><code>&#39;ghost&#39;</code>, <code>&#39;outline&#39;</code></td><td>-</td></tr></tbody></table>`,4);function n(s,r){return d}var c=t(e,[["render",n]]);export{c as default};
