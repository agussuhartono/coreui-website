import{_ as t,e}from"./app.ba637030.js";const d={},o=e(`<h3 id="cplaceholder" tabindex="-1">CPlaceholder <a class="anchor-link" href="#cplaceholder" aria-hidden="true">#</a></h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> CPlaceholder <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue&#39;</span>
<span class="token comment">// or</span>
<span class="token keyword">import</span> CPlaceholder <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue/src/components/placeholder/CPlaceholder&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="props" tabindex="-1">Props <a class="anchor-link" href="#props" aria-hidden="true">#</a></h4><table class="table table-striped table-api"><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Values</th><th>Default</th></tr></thead><tbody><tr><td><strong>animation</strong></td><td>Set animation type to better convey the perception of something being actively loaded.</td><td>string</td><td><code>&#39;glow&#39;</code>, <code>&#39;wave&#39;</code></td><td>-</td></tr><tr><td><strong>color</strong></td><td>Sets the color context of the component to one of CoreUI\u2019s themed colors.</td><td>string</td><td><code>&#39;primary&#39;</code>, <code>&#39;secondary&#39;</code>, <code>&#39;success&#39;</code>, <code>&#39;danger&#39;</code>, <code>&#39;warning&#39;</code>, <code>&#39;info&#39;</code>, <code>&#39;dark&#39;</code>, <code>&#39;light&#39;</code></td><td></td></tr><tr><td><strong>component</strong></td><td>Component used for the root node. Either a string to use a HTML element or a component.</td><td>string</td><td>-</td><td>&#39;span&#39;</td></tr><tr><td><strong>size</strong></td><td>Size the component extra small, small, or large.</td><td>string</td><td><code>&#39;xs&#39;</code>, <code>&#39;sm&#39;</code>, <code>&#39;lg&#39;</code></td><td>-</td></tr><tr><td><strong>xs</strong></td><td>The number of columns on extra small devices (&lt;576px).</td><td>number</td><td>-</td><td>-</td></tr><tr><td><strong>sm</strong></td><td>The number of columns on small devices (&lt;768px).</td><td>number</td><td>-</td><td>-</td></tr><tr><td><strong>md</strong></td><td>The number of columns on medium devices (&lt;992px).</td><td>number</td><td>-</td><td>-</td></tr><tr><td><strong>lg</strong></td><td>The number of columns on large devices (&lt;1200px).</td><td>number</td><td>-</td><td>-</td></tr><tr><td><strong>xl</strong></td><td>The number of columns on X-Large devices (&lt;1400px).</td><td>number</td><td>-</td><td>-</td></tr><tr><td><strong>xxl</strong></td><td>The number of columns on XX-Large devices (\u22651400px).</td><td>number</td><td>-</td><td>-</td></tr></tbody></table>`,4);function n(r,s){return o}var c=t(d,[["render",n],["__file","CPlaceholder.api.html.vue"]]);export{c as default};
