import{_ as d,r as l,c as r,a as o,b as n,w as a,F as c,e as s,o as i,d as e}from"./app.ba637030.js";const p={},u=s('<h2 id="how-they-work" tabindex="-1">How they work <a class="anchor-link" href="#how-they-work" aria-hidden="true">#</a></h2><p>Containers are the most basic layout element in CoreUI for Vue.js and are <strong>required when using our default grid system</strong>. Containers are used to contain, pad, and (sometimes) center the content within them. While containers <em>can</em> be nested, most layouts do not require a nested container.</p><p>CoreUI for Vue.js comes with three different containers:</p><ul><li><code>&lt;CContainer&gt;</code>, which sets a <code>max-width</code> at each responsive breakpoint</li><li><code>&lt;CContainer fluid&gt;</code>, which is <code>width: 100%</code> at all breakpoints</li><li><code>&lt;CContainer {sm|md|lg|xl|xxl}&gt;</code>, which is <code>width: 100%</code> until the specified breakpoint</li></ul><p>The table below illustrates how each container&#39;s <code>max-width</code> compares to the original <code>&lt;CContainer&gt;</code> and <code>&lt;CContainer fluid&gt;</code> across each breakpoint.</p><table class="table"><thead><tr><td class="border-dark"></td><th scope="col"> Extra small<br><span class="fw-normal">&lt;576px</span></th><th scope="col"> Small<br><span class="fw-normal">\u2265576px</span></th><th scope="col"> Medium<br><span class="fw-normal">\u2265768px</span></th><th scope="col"> Large<br><span class="fw-normal">\u2265992px</span></th><th scope="col"> X-Large<br><span class="fw-normal">\u22651200px</span></th><th scope="col"> XX-Large<br><span class="fw-normal">\u22651400px</span></th></tr></thead><tbody><tr><th scope="row" class="fw-normal"><code>&lt;CContainer&gt;</code></th><td class="text-muted">100%</td><td>540px</td><td>720px</td><td>960px</td><td>1140px</td><td>1320px</td></tr><tr><th scope="row" class="fw-normal"><code>&lt;CContainer sm&gt;</code></th><td class="text-muted">100%</td><td>540px</td><td>720px</td><td>960px</td><td>1140px</td><td>1320px</td></tr><tr><th scope="row" class="fw-normal"><code>&lt;CContainer md&gt;</code></th><td class="text-muted">100%</td><td class="text-muted">100%</td><td>720px</td><td>960px</td><td>1140px</td><td>1320px</td></tr><tr><th scope="row" class="fw-normal"><code>&lt;CContainer lg&gt;</code></th><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td><td>960px</td><td>1140px</td><td>1320px</td></tr><tr><th scope="row" class="fw-normal"><code>&lt;CContainer xl&gt;</code></th><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td><td>1140px</td><td>1320px</td></tr><tr><th scope="row" class="fw-normal"><code>&lt;CContainer xxl&gt;</code></th><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td><td>1320px</td></tr><tr><th scope="row" class="fw-normal"><code>&lt;CContainer fluid&gt;</code></th><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td><td class="text-muted">100%</td></tr></tbody></table><h2 id="default-container" tabindex="-1">Default container <a class="anchor-link" href="#default-container" aria-hidden="true">#</a></h2><p>Our default <code>&lt;CContainer&gt;</code> class is a responsive, fixed-width container, meaning its <code>max-width</code> changes at each breakpoint.</p>',8),h={class:"docs-example border rounded-top p-4"},m=e(" Content here "),g=s(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CContainer</span><span class="token punctuation">&gt;</span></span>
  Content here
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CContainer</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="responsive-containers" tabindex="-1">Responsive containers <a class="anchor-link" href="#responsive-containers" aria-hidden="true">#</a></h2><p>Responsive containers allow you to specify a class that is 100% wide until the specified breakpoint is reached, after which we apply <code>max-width</code>s for each of the higher breakpoints. For example, <code>&lt;CContainer sm&gt;</code> is 100% wide to start until the <code>sm</code> breakpoint is reached, where it will scale up with <code>md</code>, <code>lg</code>, <code>xl</code>, and <code>xxl</code>.</p>`,3),k={class:"docs-example border rounded-top p-4"},x=e("100% wide until small breakpoint"),b=e("100% wide until medium breakpoint"),C=e("100% wide until large breakpoint"),w=e("100% wide until extra large breakpoint"),f=e("100% wide until extra extra large breakpoint"),_=s(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CContainer</span> <span class="token attr-name">sm</span><span class="token punctuation">&gt;</span></span>100% wide until small breakpoint<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CContainer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CContainer</span> <span class="token attr-name">md</span><span class="token punctuation">&gt;</span></span>100% wide until medium breakpoint<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CContainer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CContainer</span> <span class="token attr-name">lg</span><span class="token punctuation">&gt;</span></span>100% wide until large breakpoint<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CContainer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CContainer</span> <span class="token attr-name">xl</span><span class="token punctuation">&gt;</span></span>100% wide until extra large breakpoint<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CContainer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CContainer</span> <span class="token attr-name">xxl</span><span class="token punctuation">&gt;</span></span>100% wide until extra extra large breakpoint<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CContainer</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="fluid-containers" tabindex="-1">Fluid containers <a class="anchor-link" href="#fluid-containers" aria-hidden="true">#</a></h2><p>Use <code>&lt;CContainer fluid&gt;</code> for a full width container, spanning the entire width of the viewport.</p>`,3),v={class:"docs-example border rounded-top p-4"},y=e(" Content here "),S=s(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CContainer</span> <span class="token attr-name">fluid</span><span class="token punctuation">&gt;</span></span>
  Content here
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CContainer</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="api" tabindex="-1">API <a class="anchor-link" href="#api" aria-hidden="true">#</a></h2><h3 id="ccontainer" tabindex="-1">CContainer <a class="anchor-link" href="#ccontainer" aria-hidden="true">#</a></h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> CContainer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue&#39;</span>
<span class="token comment">// or</span>
<span class="token keyword">import</span> CContainer <span class="token keyword">from</span> <span class="token string">&#39;@coreui/vue/src/components/grid/CContainer&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="props" tabindex="-1">Props <a class="anchor-link" href="#props" aria-hidden="true">#</a></h4><table class="table table-striped table-api"><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Values</th><th>Default</th></tr></thead><tbody><tr><td><strong>sm</strong></td><td>Set container 100% wide until small breakpoint.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><strong>md</strong></td><td>Set container 100% wide until medium breakpoint.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><strong>lg</strong></td><td>Set container 100% wide until large breakpoint.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><strong>xl</strong></td><td>Set container 100% wide until X-large breakpoint.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><strong>xxl</strong></td><td>Set container 100% wide until XX-large breakpoint.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><strong>fluid</strong></td><td>Set container 100% wide, spanning the entire width of the viewport.</td><td>boolean</td><td>-</td><td></td></tr></tbody></table>`,6);function V(X,j){const t=l("CContainer");return i(),r(c,null,[u,o("div",h,[n(t,null,{default:a(()=>[m]),_:1})]),g,o("div",k,[n(t,{sm:""},{default:a(()=>[x]),_:1}),n(t,{md:""},{default:a(()=>[b]),_:1}),n(t,{lg:""},{default:a(()=>[C]),_:1}),n(t,{xl:""},{default:a(()=>[w]),_:1}),n(t,{xxl:""},{default:a(()=>[f]),_:1})]),_,o("div",v,[n(t,{fluid:""},{default:a(()=>[y]),_:1})]),S],64)}var N=d(p,[["render",V],["__file","containers.html.vue"]]);export{N as default};
