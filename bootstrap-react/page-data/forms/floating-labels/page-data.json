{
    "componentChunkName": "component---src-templates-docs-tsx",
    "path": "/forms/floating-labels/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Bootstrap React"}},"mdx":{"id":"d6bc7a87-028c-5b5b-a185-531c7b013baa","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Floating labels\",\n  \"name\": \"Bootstrap React Floating labels\",\n  \"description\": \"Bootstrap React floating label component. Create beautifully simple form labels that float over your input fields.\",\n  \"menu\": \"Forms\",\n  \"route\": \"/forms/floating-labels\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"example\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Example\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#example\",\n    \"aria-label\": \"example permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Wrap a pair of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CFormInput>\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CFormLabel>\"), \" elements in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CFormFloating\"), \" to enable floating labels with textual form fields. A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"placeholder\"), \" is required on each \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CFormInput>\"), \" as our method of CSS-only floating labels uses the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \":placeholder-shown\"), \" pseudo-element. Also note that the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CFormInput>\"), \" must come first so we can utilize a sibling selector (e.g., \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~\"), \").\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CFormFloating, {\n    className: \"mb-3\",\n    mdxType: \"CFormFloating\"\n  }, mdx(CFormInput, {\n    type: \"email\",\n    id: \"floatingInput\",\n    placeholder: \"name@example.com\",\n    mdxType: \"CFormInput\"\n  }), mdx(CFormLabel, {\n    htmlFor: \"floatingInput\",\n    mdxType: \"CFormLabel\"\n  }, \"Email address\")), mdx(CFormFloating, {\n    mdxType: \"CFormFloating\"\n  }, mdx(CFormInput, {\n    type: \"password\",\n    id: \"floatingPassword\",\n    placeholder: \"Password\",\n    mdxType: \"CFormInput\"\n  }), mdx(CFormLabel, {\n    htmlFor: \"exampleFormControlTextarea1\",\n    mdxType: \"CFormLabel\"\n  }, \"Password\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CFormFloating className=\\\"mb-3\\\">\\n  <CFormInput type=\\\"email\\\" id=\\\"floatingInput\\\" placeholder=\\\"name@example.com\\\" />\\n  <CFormLabel htmlFor=\\\"floatingInput\\\">Email address</CFormLabel>\\n</CFormFloating>\\n<CFormFloating>\\n  <CFormInput type=\\\"password\\\" id=\\\"floatingPassword\\\" placeholder=\\\"Password\\\" />\\n  <CFormLabel htmlFor=\\\"exampleFormControlTextarea1\\\">Password</CFormLabel>\\n</CFormFloating>\\n\")), mdx(\"p\", null, \"When there's a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"value\"), \" already defined, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CFormLabel>\"), \"s will automatically adjust to their floated position.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CFormFloating, {\n    mdxType: \"CFormFloating\"\n  }, mdx(CFormInput, {\n    type: \"email\",\n    id: \"floatingInputValue\",\n    placeholder: \"name@example.com\",\n    defaultValue: \"test@example.com\",\n    mdxType: \"CFormInput\"\n  }), mdx(CFormLabel, {\n    htmlFor: \"floatingInputValue\",\n    mdxType: \"CFormLabel\"\n  }, \"Input with value\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CFormFloating>\\n  <CFormInput\\n    type=\\\"email\\\"\\n    id=\\\"floatingInputValue\\\"\\n    placeholder=\\\"name@example.com\\\"\\n    defaultValue=\\\"test@example.com\\\"\\n  />\\n  <CFormLabel htmlFor=\\\"floatingInputValue\\\">Input with value</CFormLabel>\\n</CFormFloating>\\n\")), mdx(\"h2\", {\n    \"id\": \"textareas\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Textareas\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#textareas\",\n    \"aria-label\": \"textareas permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"By default, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CFormTextarea>\"), \"s will be the same height as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CFormInput>\"), \"s.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CFormFloating, {\n    mdxType: \"CFormFloating\"\n  }, mdx(CFormTextarea, {\n    id: \"floatingTextarea\",\n    placeholder: \"Leave a comment here\",\n    mdxType: \"CFormTextarea\"\n  }), mdx(CFormLabel, {\n    htmlFor: \"floatingTextarea\",\n    mdxType: \"CFormLabel\"\n  }, \"Comments\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CFormFloating>\\n  <CFormTextarea\\n    id=\\\"floatingTextarea\\\"\\n    placeholder=\\\"Leave a comment here\\\"\\n  ></CFormTextarea>\\n  <CFormLabel htmlFor=\\\"floatingTextarea\\\">Comments</CFormLabel>\\n</CFormFloating>\\n\")), mdx(\"p\", null, \"To set a custom height on your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CFormTextarea>\"), \", do not use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rows\"), \" attribute. Instead, set an explicit \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"height\"), \" (either inline or via custom CSS).\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CFormFloating, {\n    mdxType: \"CFormFloating\"\n  }, mdx(CFormTextarea, {\n    placeholder: \"Leave a comment here\",\n    id: \"floatingTextarea2\",\n    style: {\n      height: '100px'\n    },\n    mdxType: \"CFormTextarea\"\n  }), mdx(CFormLabel, {\n    htmlFor: \"floatingTextarea2\",\n    mdxType: \"CFormLabel\"\n  }, \"Comments\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CFormFloating>\\n  <CFormTextarea\\n    placeholder=\\\"Leave a comment here\\\"\\n    id=\\\"floatingTextarea2\\\"\\n    style={{ height: '100px' }}\\n  ></CFormTextarea>\\n  <CFormLabel htmlFor=\\\"floatingTextarea2\\\">Comments</CFormLabel>\\n</CFormFloating>\\n\")), mdx(\"h2\", {\n    \"id\": \"selects\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Selects\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#selects\",\n    \"aria-label\": \"selects permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Other than \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CFormInput>\"), \", floating labels are only available on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CFormSelect>\"), \"s. They work in the same way, but unlike \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CFormInput>\"), \"s, they'll always show the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CFormLabel>\"), \" in its floated state. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Selects with \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"size\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"multiple\"), \" are not supported.\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CFormFloating, {\n    mdxType: \"CFormFloating\"\n  }, mdx(CFormSelect, {\n    id: \"floatingSelect\",\n    \"aria-label\": \"Floating label select example\",\n    mdxType: \"CFormSelect\"\n  }, mdx(\"option\", null, \"Open this select menu\"), mdx(\"option\", {\n    value: \"1\"\n  }, \"One\"), mdx(\"option\", {\n    value: \"2\"\n  }, \"Two\"), mdx(\"option\", {\n    value: \"3\"\n  }, \"Three\")), mdx(CFormLabel, {\n    htmlFor: \"floatingSelect\",\n    mdxType: \"CFormLabel\"\n  }, \"Works with selects\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CFormFloating>\\n  <CFormSelect id=\\\"floatingSelect\\\" aria-label=\\\"Floating label select example\\\">\\n    <option>Open this select menu</option>\\n    <option value=\\\"1\\\">One</option>\\n    <option value=\\\"2\\\">Two</option>\\n    <option value=\\\"3\\\">Three</option>\\n  </CFormSelect>\\n  <CFormLabel htmlFor=\\\"floatingSelect\\\">Works with selects</CFormLabel>\\n</CFormFloating>\\n\")), mdx(\"h2\", {\n    \"id\": \"layout\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Layout\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#layout\",\n    \"aria-label\": \"layout permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"When working with the Bootstrap React grid system, be sure to place form elements within column classes.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CRow, {\n    xs: {\n      gutter: 2\n    },\n    mdxType: \"CRow\"\n  }, mdx(CCol, {\n    md: true,\n    mdxType: \"CCol\"\n  }, mdx(CFormFloating, {\n    mdxType: \"CFormFloating\"\n  }, mdx(CFormInput, {\n    type: \"email\",\n    id: \"floatingInputGrid\",\n    placeholder: \"name@example.com\",\n    defaultValue: \"email@example.com\",\n    mdxType: \"CFormInput\"\n  }), mdx(CFormLabel, {\n    htmlFor: \"floatingInputGrid\",\n    mdxType: \"CFormLabel\"\n  }, \"Email address\"))), mdx(CCol, {\n    md: true,\n    mdxType: \"CCol\"\n  }, mdx(CFormFloating, {\n    mdxType: \"CFormFloating\"\n  }, mdx(CFormSelect, {\n    id: \"floatingSelectGrid\",\n    \"aria-label\": \"Floating label select example\",\n    mdxType: \"CFormSelect\"\n  }, mdx(\"option\", null, \"Open this select menu\"), mdx(\"option\", {\n    value: \"1\"\n  }, \"One\"), mdx(\"option\", {\n    value: \"2\"\n  }, \"Two\"), mdx(\"option\", {\n    value: \"3\"\n  }, \"Three\")), mdx(CFormLabel, {\n    htmlFor: \"floatingSelectGrid\",\n    mdxType: \"CFormLabel\"\n  }, \"Works with selects\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CRow xs={{gutter: 2}}>\\n  <CCol md>\\n    <CFormFloating>\\n      <CFormInput type=\\\"email\\\" id=\\\"floatingInputGrid\\\" placeholder=\\\"name@example.com\\\" defaultValue=\\\"email@example.com\\\" />\\n      <CFormLabel htmlFor=\\\"floatingInputGrid\\\">Email address</CFormLabel>\\n    </CFormFloating>\\n  </CCol>\\n  <CCol md>\\n    <CFormFloating>\\n      <CFormSelect id=\\\"floatingSelectGrid\\\" aria-label=\\\"Floating label select example\\\">\\n        <option>Open this select menu</option>\\n        <option value=\\\"1\\\">One</option>\\n        <option value=\\\"2\\\">Two</option>\\n        <option value=\\\"3\\\">Three</option>\\n      </CFormSelect>\\n      <CFormLabel htmlFor=\\\"floatingSelectGrid\\\">Works with selects</CFormLabel>\\n    </CFormFloating>\\n  </CCol>\\n</CRow>\\n\")), mdx(\"h2\", {\n    \"id\": \"api\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"API\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#api\",\n    \"aria-label\": \"api permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"cformfloating\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CFormFloating\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cformfloating\",\n    \"aria-label\": \"cformfloating permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CFormFloating } from '@coreui/bootstrap-react'\\n// or\\nimport CFormFloating from '@coreui/bootstrap-react/src/components/form/CFormFloating'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Floating labels","name":"Bootstrap React Floating labels","description":"Bootstrap React floating label component. Create beautifully simple form labels that float over your input fields.","route":"/forms/floating-labels"},"tableOfContents":{"items":[{"url":"#example","title":"Example"},{"url":"#textareas","title":"Textareas"},{"url":"#selects","title":"Selects"},{"url":"#layout","title":"Layout"},{"url":"#api","title":"API","items":[{"url":"#cformfloating","title":"CFormFloating"}]}]}}},"pageContext":{"id":"d6bc7a87-028c-5b5b-a185-531c7b013baa"}},
    "staticQueryHashes": ["4202924991"]}