{"version":3,"file":"static/js/5608.66261be1.chunk.js","mappings":"8NAyGA,UArGuB,WACrB,OACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAMA,GAAI,GAAV,UACE,UAAC,KAAD,CAAOC,UAAU,OAAjB,WACE,SAAC,KAAD,WACE,wDAEF,UAAC,KAAD,YACE,cAAGA,UAAU,6BAAb,kKAIA,UAAC,KAAD,CAAaC,KAAK,4BAAlB,WACE,SAAC,KAAD,CAAMD,UAAU,mBAAhB,SACG,CAAC,UAAW,YAAa,UAAW,SAAU,UAAW,QAAQE,KAChE,SAACC,EAAOC,GAAR,OACE,SAAC,KAAD,CAAMC,GAAI,EAAV,UACE,SAAC,KAAD,CAAgBF,MAAOA,EAAOG,QAAS,IAAvC,qBADgBF,SAQxB,SAAC,KAAD,CAAMJ,UAAU,mBAAhB,SACG,CAAC,UAAW,YAAa,UAAW,SAAU,UAAW,QAAQE,KAChE,SAACC,EAAOC,GAAR,OACE,SAAC,KAAD,CAAMC,GAAI,EAAV,UACE,SAAC,KAAD,CAAgBF,MAAOA,EAAOI,QAAQ,UAAUD,QAAS,IAAzD,qBADgBF,SAQxB,SAAC,KAAD,CAAMJ,UAAU,mBAAhB,SACG,CAAC,UAAW,YAAa,UAAW,SAAU,UAAW,QAAQE,KAChE,SAACC,EAAOC,GAAR,OACE,SAAC,KAAD,CAAMC,GAAI,EAAV,UACE,SAAC,KAAD,CAAgBF,MAAOA,EAAOI,QAAQ,QAAQD,QAAS,IAAvD,qBADgBF,YAS1B,+DACA,UAAC,KAAD,CAAaH,KAAK,iCAAlB,WACE,SAAC,KAAD,CAAMD,UAAU,mBAAhB,SACG,CAAC,UAAW,YAAa,UAAW,SAAU,UAAW,QAAQE,KAChE,SAACC,EAAOC,GAAR,OACE,SAAC,KAAD,CAAMC,GAAI,EAAV,UACE,SAAC,KAAD,CAAgBF,MAAOA,EAAOK,YAAY,OAAOF,QAAS,IAA1D,qBADgBF,SAQxB,SAAC,KAAD,CAAMJ,UAAU,mBAAhB,SACG,CAAC,UAAW,YAAa,UAAW,SAAU,UAAW,QAAQE,KAChE,SAACC,EAAOC,GAAR,OACE,SAAC,KAAD,CAAMC,GAAI,EAAV,UACE,SAAC,KAAD,CACEF,MAAOA,EACPK,YAAY,OACZD,QAAQ,UACRD,QAAS,IAJX,qBADgBF,SAaxB,SAAC,KAAD,CAAMJ,UAAU,mBAAhB,SACG,CAAC,UAAW,YAAa,UAAW,SAAU,UAAW,QAAQE,KAChE,SAACC,EAAOC,GAAR,OACE,SAAC,KAAD,CAAMC,GAAI,EAAV,UACE,SAAC,KAAD,CACEF,MAAOA,EACPK,YAAY,OACZD,QAAQ,QACRD,QAAS,IAJX,qBADgBF","sources":["views/buttons/loading-buttons/LoadingButtons.js"],"sourcesContent":["import React from 'react'\nimport { CLoadingButton, CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react-pro'\nimport { DocsExample } from 'src/components'\n\nconst LoadingButtons = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Loading Button</strong>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              CoreUI includes a buttons with built-in loading indicators. Indicate the loading state\n              of the button bridging the gap between action and feedback..\n            </p>\n            <DocsExample href=\"components/loading-button\">\n              <CRow className=\"py-4 text-center\">\n                {['primary', 'secondary', 'success', 'danger', 'warning', 'info'].map(\n                  (color, index) => (\n                    <CCol md={2} key={index}>\n                      <CLoadingButton color={color} timeout={2000}>\n                        Submit\n                      </CLoadingButton>\n                    </CCol>\n                  ),\n                )}\n              </CRow>\n              <CRow className=\"py-4 text-center\">\n                {['primary', 'secondary', 'success', 'danger', 'warning', 'info'].map(\n                  (color, index) => (\n                    <CCol md={2} key={index}>\n                      <CLoadingButton color={color} variant=\"outline\" timeout={2000}>\n                        Submit\n                      </CLoadingButton>\n                    </CCol>\n                  ),\n                )}\n              </CRow>\n              <CRow className=\"py-4 text-center\">\n                {['primary', 'secondary', 'success', 'danger', 'warning', 'info'].map(\n                  (color, index) => (\n                    <CCol md={2} key={index}>\n                      <CLoadingButton color={color} variant=\"ghost\" timeout={2000}>\n                        Submit\n                      </CLoadingButton>\n                    </CCol>\n                  ),\n                )}\n              </CRow>\n            </DocsExample>\n            <h6>Loading Buttons with grow spinner</h6>\n            <DocsExample href=\"components/loading-button#grow\">\n              <CRow className=\"py-4 text-center\">\n                {['primary', 'secondary', 'success', 'danger', 'warning', 'info'].map(\n                  (color, index) => (\n                    <CCol md={2} key={index}>\n                      <CLoadingButton color={color} spinnerType=\"grow\" timeout={2000}>\n                        Submit\n                      </CLoadingButton>\n                    </CCol>\n                  ),\n                )}\n              </CRow>\n              <CRow className=\"py-4 text-center\">\n                {['primary', 'secondary', 'success', 'danger', 'warning', 'info'].map(\n                  (color, index) => (\n                    <CCol md={2} key={index}>\n                      <CLoadingButton\n                        color={color}\n                        spinnerType=\"grow\"\n                        variant=\"outline\"\n                        timeout={2000}\n                      >\n                        Submit\n                      </CLoadingButton>\n                    </CCol>\n                  ),\n                )}\n              </CRow>\n              <CRow className=\"py-4 text-center\">\n                {['primary', 'secondary', 'success', 'danger', 'warning', 'info'].map(\n                  (color, index) => (\n                    <CCol md={2} key={index}>\n                      <CLoadingButton\n                        color={color}\n                        spinnerType=\"grow\"\n                        variant=\"ghost\"\n                        timeout={2000}\n                      >\n                        Submit\n                      </CLoadingButton>\n                    </CCol>\n                  ),\n                )}\n              </CRow>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default LoadingButtons\n"],"names":["xs","className","href","map","color","index","md","timeout","variant","spinnerType"],"sourceRoot":""}