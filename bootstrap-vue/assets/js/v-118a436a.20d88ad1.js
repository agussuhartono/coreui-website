"use strict";(self.webpackChunk_coreui_bootstrap_vue_docs=self.webpackChunk_coreui_bootstrap_vue_docs||[]).push([[973],{20290:(t,e,s)=>{s.r(e),s.d(e,{default:()=>d});const a=(0,s(27875).uE)('<h3 id="ccarousel" tabindex="-1">CCarousel <a class="anchor-link" href="#ccarousel" aria-hidden="true">#</a></h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> CCarousel <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@coreui/bootstrap-vue&#39;</span>\n<span class="token comment">// or</span>\n<span class="token keyword">import</span> CCarousel <span class="token keyword">from</span> <span class="token string">&#39;@coreui/bootstrap-vue/src/components/carousel/CCarousel&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="props" tabindex="-1">Props <a class="anchor-link" href="#props" aria-hidden="true">#</a></h4><table class="table table-striped table-api"><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Values</th><th>Default</th></tr></thead><tbody><tr><td><strong>controls</strong></td><td>Adding in the previous and next controls.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><strong>dark</strong></td><td>Add darker controls, indicators, and captions.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><strong>index</strong></td><td>index of the active item.</td><td>number</td><td>-</td><td>0</td></tr><tr><td><strong>indicators</strong></td><td>Adding indicators at the bottom of the carousel for each item.</td><td>boolean</td><td>-</td><td></td></tr><tr><td><strong>interval</strong></td><td>The amount of time to delay between automatically cycling an item. If false, carousel will not automatically cycle.</td><td>boolean|number</td><td>-</td><td>5000</td></tr><tr><td><strong>pause</strong></td><td>If set to &#39;hover&#39;, pauses the cycling of the carousel on mouseenter and resumes the cycling of the carousel on mouseleave. If set to false, hovering over the carousel won&#39;t pause it.</td><td>boolean|string</td><td>-</td><td>&#39;hover&#39;</td></tr><tr><td><strong>transition</strong></td><td>Set type of the transition.</td><td>string</td><td><code>&#39;crossfade&#39;</code>, <code>&#39;slide&#39;</code></td><td>&#39;slide&#39;</td></tr><tr><td><strong>wrap</strong></td><td>Set whether the carousel should cycle continuously or have hard stops.</td><td>boolean</td><td>-</td><td>true</td></tr></tbody></table>',4),o={},d=(0,s(94407).Z)(o,[["render",function(t,e){return a}]])},66188:(t,e,s)=>{s.r(e),s.d(e,{data:()=>a});const a={key:"v-118a436a",path:"/api/carousel/CCarousel.api.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"CCarousel",slug:"ccarousel",children:[]}],filePathRelative:"api/carousel/CCarousel.api.md",git:{updatedTime:null,contributors:[]}}}}]);