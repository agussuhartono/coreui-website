"use strict";(self.webpackChunk_coreui_bootstrap_vue_docs=self.webpackChunk_coreui_bootstrap_vue_docs||[]).push([[7777],{202:(t,e,o)=>{o.r(e),o.d(e,{default:()=>a});const d=(0,o(7875).uE)('<h3 id="cnavbar" tabindex="-1">CNavbar <a class="anchor-link" href="#cnavbar" aria-hidden="true">#</a></h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> CNavbar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@coreui/bootstrap-vue&#39;</span>\n<span class="token comment">// or</span>\n<span class="token keyword">import</span> CNavbar <span class="token keyword">from</span> <span class="token string">&#39;@coreui/bootstrap-vue/src/components/navbar/CNavbar&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="props" tabindex="-1">Props <a class="anchor-link" href="#props" aria-hidden="true">#</a></h4><table class="table table-striped table-api"><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Values</th><th>Default</th></tr></thead><tbody><tr><td><strong>color</strong></td><td>* Sets the color context of the component to one of Bootstrap Vue’s themed colors.</td><td>string</td><td><code>&#39;primary&#39;</code>, <code>&#39;secondary&#39;</code>, <code>&#39;success&#39;</code>, <code>&#39;danger&#39;</code>, <code>&#39;warning&#39;</code>, <code>&#39;info&#39;</code>, <code>&#39;dark&#39;</code>, <code>&#39;light&#39;</code>, <code>string</code></td><td></td></tr><tr><td><strong>color-scheme</strong></td><td>Sets if the color of text should be colored for a light or dark dark background.</td><td>string</td><td><code>&#39;dark&#39;</code>, <code>&#39;light&#39;</code></td><td>-</td></tr><tr><td><strong>component</strong></td><td>Component used for the root node. Either a string to use a HTML element or a component.</td><td>string</td><td>-</td><td>&#39;nav&#39;</td></tr><tr><td><strong>container</strong></td><td>Defines optional container wrapping children elements.</td><td>boolean|string</td><td><code>boolean</code>, <code>&#39;sm&#39;</code>, <code>&#39;md&#39;</code>, <code>&#39;lg&#39;</code>, <code>&#39;xl&#39;</code>, <code>&#39;xxl&#39;</code>, <code>&#39;fluid&#39;</code></td><td>-</td></tr><tr><td><strong>expand</strong></td><td>Defines the responsive breakpoint to determine when content collapses.</td><td>boolean|string</td><td><code>boolean</code>, <code>&#39;sm&#39;</code>, <code>&#39;md&#39;</code>, <code>&#39;lg&#39;</code>, <code>&#39;xl&#39;</code>, <code>&#39;xxl&#39;</code></td><td>-</td></tr><tr><td><strong>placement</strong></td><td>Place component in non-static positions.</td><td>string</td><td><code>&#39;fixed-top&#39;</code>, <code>&#39;fixed-bottom&#39;</code>, <code>&#39;sticky-top&#39;</code></td><td>-</td></tr></tbody></table>',4),n={},a=(0,o(4407).Z)(n,[["render",function(t,e){return d}]])},5152:(t,e,o)=>{o.r(e),o.d(e,{data:()=>d});const d={key:"v-3dfa00eb",path:"/api/navbar/CNavbar.api.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"CNavbar",slug:"cnavbar",children:[]}],filePathRelative:"api/navbar/CNavbar.api.md",git:{updatedTime:1640027985e3,contributors:[{name:"Łukasz Holeczek",email:"lukasz@holeczek.pl",commits:4}]}}}}]);