{
    "componentChunkName": "component---src-templates-docs-tsx",
    "path": "/components/placeholder/",
    "result": {"data":{"site":{"siteMetadata":{"title":"CoreUI for React.js"}},"mdx":{"id":"ed92be14-3ba0-5201-b7aa-effbb3db0776","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React Placeholder Component\",\n  \"name\": \"Placeholder\",\n  \"description\": \"Use loading react placeholders for your components or pages to indicate something may still be loading.\",\n  \"menu\": \"Components\",\n  \"route\": \"/components/placeholder\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"about\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"About\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#about\",\n    \"aria-label\": \"about permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Placeholders can be used to enhance the experience of your application. They're built only with HTML and CSS, meaning you don't need any JavaScript to create them. You will, however, need some custom JavaScript to toggle their visibility. Their appearance, color, and sizing can be easily customized with our utility classes.\"), mdx(\"h2\", {\n    \"id\": \"example\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Example\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#example\",\n    \"aria-label\": \"example permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"In the example below, we take a typical card component and recreate it with placeholders applied to create a \\\"loading card\\\". Size and proportions are the same between the two.\"), mdx(Example, {\n    className: \"d-flex justify-content-around\",\n    mdxType: \"Example\"\n  }, mdx(CCard, {\n    style: {\n      width: '18rem'\n    },\n    mdxType: \"CCard\"\n  }, mdx(CCardImage, {\n    orientation: \"top\",\n    src: ReactImg,\n    mdxType: \"CCardImage\"\n  }), mdx(CCardBody, {\n    mdxType: \"CCardBody\"\n  }, mdx(CCardTitle, {\n    mdxType: \"CCardTitle\"\n  }, \"Card title\"), mdx(CCardText, {\n    mdxType: \"CCardText\"\n  }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), mdx(CButton, {\n    href: \"#\",\n    mdxType: \"CButton\"\n  }, \"Go somewhere\"))), mdx(CCard, {\n    style: {\n      width: '18rem'\n    },\n    mdxType: \"CCard\"\n  }, mdx(CCardImage, {\n    component: \"svg\",\n    orientation: \"top\",\n    width: \"100%\",\n    height: \"162\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    role: \"img\",\n    \"aria-label\": \"Placeholder\",\n    preserveAspectRatio: \"xMidYMid slice\",\n    focusable: \"false\",\n    mdxType: \"CCardImage\"\n  }, mdx(\"title\", null, \"Placeholder\"), mdx(\"rect\", {\n    width: \"100%\",\n    height: \"100%\",\n    fill: \"#868e96\"\n  })), mdx(CCardBody, {\n    mdxType: \"CCardBody\"\n  }, mdx(CPlaceholder, {\n    component: CCardTitle,\n    animation: \"glow\",\n    xs: 7,\n    mdxType: \"CPlaceholder\"\n  }, mdx(CPlaceholder, {\n    xs: 6,\n    mdxType: \"CPlaceholder\"\n  })), mdx(CPlaceholder, {\n    component: CCardText,\n    animation: \"glow\",\n    mdxType: \"CPlaceholder\"\n  }, mdx(CPlaceholder, {\n    xs: 7,\n    mdxType: \"CPlaceholder\"\n  }), mdx(CPlaceholder, {\n    xs: 4,\n    mdxType: \"CPlaceholder\"\n  }), mdx(CPlaceholder, {\n    xs: 4,\n    mdxType: \"CPlaceholder\"\n  }), mdx(CPlaceholder, {\n    xs: 6,\n    mdxType: \"CPlaceholder\"\n  }), mdx(CPlaceholder, {\n    xs: 8,\n    mdxType: \"CPlaceholder\"\n  })), mdx(CPlaceholder, {\n    component: CButton,\n    disabled: true,\n    href: \"#\",\n    tabIndex: -1,\n    xs: 6,\n    mdxType: \"CPlaceholder\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CCard style={{ width: '18rem' }}>\\n  <CCardImage orientation=\\\"top\\\" src={ReactImg} />\\n  <CCardBody>\\n    <CCardTitle>Card title</CCardTitle>\\n    <CCardText>\\n      Some quick example text to build on the card title and make up the bulk of the card's\\n      content.\\n    </CCardText>\\n    <CButton href=\\\"#\\\">Go somewhere</CButton>\\n  </CCardBody>\\n</CCard>\\n<CCard style={{ width: '18rem' }}>\\n  <CCardImage component=\\\"svg\\\" orientation=\\\"top\\\" width=\\\"100%\\\" height=\\\"162\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" role=\\\"img\\\" aria-label=\\\"Placeholder\\\" preserveAspectRatio=\\\"xMidYMid slice\\\" focusable=\\\"false\\\">\\n    <title>Placeholder</title><rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"#868e96\\\"></rect>\\n  </CCardImage>  \\n  <CCardBody>\\n    <CPlaceholder component={CCardTitle} animation=\\\"glow\\\" xs={7}>\\n      <CPlaceholder xs={6} />\\n    </CPlaceholder>\\n    <CPlaceholder component={CCardText} animation=\\\"glow\\\">\\n      <CPlaceholder xs={7} />\\n      <CPlaceholder xs={4} />\\n      <CPlaceholder xs={4} />\\n      <CPlaceholder xs={6} />\\n      <CPlaceholder xs={8} />\\n    </CPlaceholder>\\n    <CPlaceholder component={CButton} disabled href=\\\"#\\\" tabIndex={-1} xs={6}></CPlaceholder>\\n  </CCardBody>\\n</CCard>\\n\")), mdx(\"h2\", {\n    \"id\": \"how-it-works\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"How it works\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#how-it-works\",\n    \"aria-label\": \"how it works permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Create placeholders with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CPlaceholder>\"), \" component and a grid column propx (e.g., \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"xs={6}\"), \") to set the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"width\"), \". They can replace the text inside an element or be added as a modifier class to an existing component.\"), mdx(\"p\", null, \"We apply additional styling to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CButton\"), \"s via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"::before\"), \" to ensure the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"height\"), \" is respected. You may extend this pattern for other situations as needed, or add a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"&nbsp;\"), \" within the element to reflect the height when actual text is rendered in its place.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(\"p\", {\n    \"aria-hidden\": \"true\"\n  }, mdx(CPlaceholder, {\n    xs: 6,\n    mdxType: \"CPlaceholder\"\n  })), mdx(CPlaceholder, {\n    component: CButton,\n    \"aria-hidden\": \"true\",\n    disabled: true,\n    href: \"#\",\n    tabIndex: -1,\n    xs: 4,\n    mdxType: \"CPlaceholder\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<p aria-hidden=\\\"true\\\">\\n  <CPlaceholder xs={6} />\\n</p>\\n<CPlaceholder component={CButton} aria-hidden=\\\"true\\\" disabled href=\\\"#\\\" tabIndex={-1} xs={4}></CPlaceholder>\\n\")), mdx(CCallout, {\n    className: \"mb-4\",\n    color: \"info\",\n    mdxType: \"CCallout\"\n  }, \"The use of \", mdx(\"code\", null, \"aria-hidden=\\\"true\\\"\"), \" only indicates that the element should be hidden to screen readers. The \", mdx(\"strong\", null, \"loading\"), \" behavior of the placeholder depends on how authors will actually use the placeholder styles, how they plan to update things, etc. Some JavaScript code may be needed to *swap* the state of the placeholder and inform AT users of the update.\"), mdx(\"h3\", {\n    \"id\": \"width\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Width\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#width\",\n    \"aria-label\": \"width permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"You can change the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"width\"), \" through grid column classes, width utilities, or inline styles.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CPlaceholder, {\n    xs: 6,\n    mdxType: \"CPlaceholder\"\n  }), mdx(CPlaceholder, {\n    className: \"w-75\",\n    mdxType: \"CPlaceholder\"\n  }), mdx(CPlaceholder, {\n    style: {\n      width: '30%'\n    },\n    mdxType: \"CPlaceholder\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CPlaceholder xs={6} />\\n<CPlaceholder className=\\\"w-75\\\" />\\n<CPlaceholder style={{ width: '30%'}} />\\n\")), mdx(\"h3\", {\n    \"id\": \"color\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Color\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#color\",\n    \"aria-label\": \"color permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"By default, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CPlaceholder>\"), \" uses \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"currentColor\"), \". This can be overridden with a custom color or utility class.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CPlaceholder, {\n    xs: 12,\n    mdxType: \"CPlaceholder\"\n  }), mdx(CPlaceholder, {\n    color: \"primary\",\n    xs: 12,\n    mdxType: \"CPlaceholder\"\n  }), mdx(CPlaceholder, {\n    color: \"secondary\",\n    xs: 12,\n    mdxType: \"CPlaceholder\"\n  }), mdx(CPlaceholder, {\n    color: \"success\",\n    xs: 12,\n    mdxType: \"CPlaceholder\"\n  }), mdx(CPlaceholder, {\n    color: \"danger\",\n    xs: 12,\n    mdxType: \"CPlaceholder\"\n  }), mdx(CPlaceholder, {\n    color: \"warning\",\n    xs: 12,\n    mdxType: \"CPlaceholder\"\n  }), mdx(CPlaceholder, {\n    color: \"info\",\n    xs: 12,\n    mdxType: \"CPlaceholder\"\n  }), mdx(CPlaceholder, {\n    color: \"light\",\n    xs: 12,\n    mdxType: \"CPlaceholder\"\n  }), mdx(CPlaceholder, {\n    color: \"dark\",\n    xs: 12,\n    mdxType: \"CPlaceholder\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CPlaceholder xs={12} />\\n\\n<CPlaceholder color=\\\"primary\\\" xs={12} />\\n<CPlaceholder color=\\\"secondary\\\" xs={12} />\\n<CPlaceholder color=\\\"success\\\" xs={12} />\\n<CPlaceholder color=\\\"danger\\\" xs={12} />\\n<CPlaceholder color=\\\"warning\\\" xs={12} />\\n<CPlaceholder color=\\\"info\\\" xs={12} />\\n<CPlaceholder color=\\\"light\\\" xs={12} />\\n<CPlaceholder color=\\\"dark\\\" xs={12} />\\n\")), mdx(\"h3\", {\n    \"id\": \"sizing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Sizing\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#sizing\",\n    \"aria-label\": \"sizing permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"The size of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CPlaceholder>\"), \"s are based on the typographic style of the parent element. Customize them with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \" prop: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lg\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sm\"), \", or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"xs\"), \".\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CPlaceholder, {\n    xs: 12,\n    size: \"lg\",\n    mdxType: \"CPlaceholder\"\n  }), mdx(CPlaceholder, {\n    xs: 12,\n    mdxType: \"CPlaceholder\"\n  }), mdx(CPlaceholder, {\n    xs: 12,\n    size: \"sm\",\n    mdxType: \"CPlaceholder\"\n  }), mdx(CPlaceholder, {\n    xs: 12,\n    size: \"xs\",\n    mdxType: \"CPlaceholder\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CPlaceholder xs={12} size=\\\"lg\\\"/>\\n<CPlaceholder xs={12}/>\\n<CPlaceholder xs={12} size=\\\"sm\\\"/>\\n<CPlaceholder xs={12} size=\\\"xs\\\"/>\\n\")), mdx(\"h3\", {\n    \"id\": \"animation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Animation\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#animation\",\n    \"aria-label\": \"animation permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Animate placeholders with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"animation=\\\"glow\\\"\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"animation=\\\"wave\\\"\"), \" to better convey the perception of something being \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"actively\"), \" loaded.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CPlaceholder, {\n    component: \"p\",\n    animation: \"glow\",\n    mdxType: \"CPlaceholder\"\n  }, mdx(CPlaceholder, {\n    xs: 12,\n    mdxType: \"CPlaceholder\"\n  })), mdx(CPlaceholder, {\n    component: \"p\",\n    animation: \"wave\",\n    mdxType: \"CPlaceholder\"\n  }, mdx(CPlaceholder, {\n    xs: 12,\n    mdxType: \"CPlaceholder\"\n  }))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CPlaceholder component=\\\"p\\\" animation=\\\"glow\\\">\\n  <CPlaceholder xs={12} />\\n</CPlaceholder>  \\n\\n<CPlaceholder component=\\\"p\\\" animation=\\\"wave\\\">\\n  <CPlaceholder xs={12} />\\n</CPlaceholder> \\n\")), mdx(\"h2\", {\n    \"id\": \"api\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"API\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#api\",\n    \"aria-label\": \"api permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"cplaceholder\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CPlaceholder\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cplaceholder\",\n    \"aria-label\": \"cplaceholder permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CPlaceholder } from '@coreui/react'\\n// or\\nimport CPlaceholder from '@coreui/react/src/components/placeholder/CPlaceholder'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"animation\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set animation type to better convey the perception of something being actively loaded.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'glow'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'wave'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"color\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Sets the color context of the component to one of CoreUI\\u2019s themed colors.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'primary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'secondary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'success'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'danger'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'warning'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'info'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'dark'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'light'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"component\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Component used for the root node. Either a string to use a HTML element or a component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ComponentClass<any, any>\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"FunctionComponent<any>\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"lg\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The number of columns on large devices (<1200px).\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"md\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The number of columns on medium devices (<992px).\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"size\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Size the component extra small, small, or large.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'xs'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'sm'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'lg'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"sm\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The number of columns on small devices (<768px).\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"xl\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The number of columns on X-Large devices (<1400px).\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"xs\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The number of columns on extra small devices (<576px).\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"xxl\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The number of columns on XX-Large devices (\\u22651400px).\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"React Placeholder Component","description":"Use loading react placeholders for your components or pages to indicate something may still be loading.","route":"/components/placeholder"},"tableOfContents":{"items":[{"url":"#about","title":"About"},{"url":"#example","title":"Example"},{"url":"#how-it-works","title":"How it works","items":[{"url":"#width","title":"Width"},{"url":"#color","title":"Color"},{"url":"#sizing","title":"Sizing"},{"url":"#animation","title":"Animation"}]},{"url":"#api","title":"API","items":[{"url":"#cplaceholder","title":"CPlaceholder"}]}]}}},"pageContext":{"id":"ed92be14-3ba0-5201-b7aa-effbb3db0776"}},
    "staticQueryHashes": ["4202924991"]}