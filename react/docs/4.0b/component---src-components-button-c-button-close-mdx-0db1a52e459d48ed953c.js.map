{"version":3,"sources":["webpack:///../src/components/button/CButtonClose.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","CButtonClose","disabled","className","white","of","isMDXComponent"],"mappings":"gRAUaA,G,UAAe,S,wNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,UAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,WADR,WAGA,+EAA8D,0BAAYC,WAAW,KAAvB,kBAA9D,2GAAoO,0BAAYA,WAAW,KAAvB,oBAApO,KACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,mBAAoBC,SAAO,GAC5DL,QACAH,kBACAS,eACAC,UACAC,kBAL4D,gBAM5DX,IAN4D,EAO5DH,eAP4D,GAQ3DO,QAAQ,cACb,YAAC,IAAD,CAAcA,QAAQ,kBAEpB,kBACE,GAAM,kBADR,kBAGA,4DAA2C,0BAAYC,WAAW,KAAvB,WAA3C,wBAAuH,0BAAYA,WAAW,KAAvB,wBAAvH,QAAgM,0BAAYA,WAAW,KAAvB,qBAAhM,2DACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,4BAA6BC,SAAO,GACrEL,QACAH,kBACAS,eACAC,UACAC,kBALqE,gBAMrEX,IANqE,EAOrEH,eAPqE,GAQpEO,QAAQ,cACb,YAAC,IAAD,CAAcQ,UAAQ,EAACR,QAAQ,kBAE7B,kBACE,GAAM,iBADR,iBAGA,2CAA0B,0BAAYC,WAAW,KAAvB,kBAA1B,yBAA8G,0BAAYA,WAAW,KAAvB,SAA9G,sBACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,iGAAoGC,SAAO,GAC5IL,QACAH,kBACAS,eACAC,UACAC,kBAL4I,gBAM5IX,IAN4I,EAO5IH,eAP4I,GAQ3IO,QAAQ,cACb,mBAAKS,UAAU,WACb,YAAC,IAAD,CAAcC,OAAK,EAACV,QAAQ,iBAC5B,YAAC,IAAD,CAAcU,OAAK,EAACF,UAAQ,EAACR,QAAQ,mBAGrC,kBACE,GAAM,OADR,OAGA,kBACE,GAAM,gBADR,gBAGA,YAAC,IAAD,CAAOW,GAAIJ,IAAcP,QAAQ,gB,sNAKrCH,EAAWe,gBAAiB","file":"component---src-components-button-c-button-close-mdx-0db1a52e459d48ed953c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukaszholeczek/CoreUI/@coreui/react/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { CButtonClose } from './CButtonClose.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`Provide an option to dismiss or close a component with `}<inlineCode parentName=\"p\">{`<CButtonClose>`}</inlineCode>{`. Default styling is limited, but highly customizable. Modify the Sass variables to replace the default `}<inlineCode parentName=\"p\">{`background-image`}</inlineCode>{`.`}</p>\n    <Playground __position={0} __code={'<CButtonClose />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CButtonClose,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CButtonClose mdxType=\"CButtonClose\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"disabled-state\"\n    }}>{`Disabled state`}</h2>\n    <p>{`Disabled close buttons change their `}<inlineCode parentName=\"p\">{`opacity`}</inlineCode>{`. We've also applied `}<inlineCode parentName=\"p\">{`pointer-events: none`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`user-select: none`}</inlineCode>{` to preventing hover and active states from triggering.`}</p>\n    <Playground __position={1} __code={'<CButtonClose disabled />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CButtonClose,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CButtonClose disabled mdxType=\"CButtonClose\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"white-variant\"\n    }}>{`White variant`}</h2>\n    <p>{`Change the default `}<inlineCode parentName=\"p\">{`<CButtonClose>`}</inlineCode>{` to be white with the `}<inlineCode parentName=\"p\">{`white`}</inlineCode>{` boolean property.`}</p>\n    <Playground __position={2} __code={'<div className=\\\"bg-dark\\\">\\n  <CButtonClose white />\\n  <CButtonClose white disabled />\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CButtonClose,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div className=\"bg-dark\">\n    <CButtonClose white mdxType=\"CButtonClose\" />\n    <CButtonClose white disabled mdxType=\"CButtonClose\" />\n  </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <h3 {...{\n      \"id\": \"cbuttonclose\"\n    }}>{`CButtonClose`}</h3>\n    <Props of={CButtonClose} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}