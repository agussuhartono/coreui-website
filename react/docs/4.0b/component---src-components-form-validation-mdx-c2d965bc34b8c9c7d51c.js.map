{"version":3,"sources":["webpack:///../src/components/form/Validation.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","useState","CButton","CDropdown","CDropdownDivider","CDropdownHeader","CDropdownItem","CDropdownItemPlain","CDropdownMenu","CDropdownToggle","CForm","CFormControl","CFormCheck","CFormFeedback","CFormLabel","CFormSelect","CInputGroup","CInputGroupText","CCol","CRow","validated","setValidated","className","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","md","htmlFor","type","id","value","required","valid","aria-describedby","invalid","selected","disabled","xs","label","color","isValid","isInvalid","component","placeholder","name","aria-label","tooltip","isMDXComponent"],"mappings":"4dA4BaA,G,UAAe,S,oNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,cAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAkB5E,kBACE,GAAM,iBADR,iBAGA,2FAA0E,0BAAYC,WAAW,KAAvB,cAA1E,6BAA8J,0BAAYA,WAAW,KAAvB,WAA9J,kRAAoe,0BAAYA,WAAW,KAAvB,YAApe,QAAiiB,0BAAYA,WAAW,KAAvB,UAAjiB,0CACA,iJACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,o0FAA+4FC,SAAO,GACv7FL,QACAH,kBACAS,eACAC,UACAC,oBACAC,YACAC,cACAC,qBACAC,oBACAC,kBACAC,uBACAC,kBACAC,oBACAC,UACAC,iBACAC,eACAC,kBACAC,eACAC,gBACAC,gBACAC,oBACAC,SACAC,UAvBu7F,gBAwBv7F7B,IAxBu7F,EAyBv7FH,eAzBu7F,GA0Bt7FO,QAAQ,eACZ,WACK,MAAkCO,oBAAS,GAApCmB,EAAP,KAAkBC,EAAlB,KAaA,OAAO,YAAC,IAAD,CAAOC,UAAU,2BAA2BC,YAAU,EAACH,UAAWA,EAAWI,SAX/D,SAAAC,IAGU,IAFhBA,EAAMC,cAEVC,kBACPF,EAAMG,iBACNH,EAAMI,mBAGRR,GAAa,IAG6F3B,QAAQ,SACpH,YAAC,IAAD,CAAMoC,GAAG,IAAIpC,QAAQ,QACnB,YAAC,IAAD,CAAYqC,QAAQ,qBAAqBrC,QAAQ,cAAjD,SACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,qBAAqBC,MAAM,OAAOC,UAAQ,EAACzC,QAAQ,iBAChF,YAAC,IAAD,CAAe0C,OAAK,EAAC1C,QAAQ,iBAA7B,gBAIF,YAAC,IAAD,CAAMoC,GAAG,IAAIpC,QAAQ,QACnB,YAAC,IAAD,CAAYqC,QAAQ,qBAAqBrC,QAAQ,cAAjD,SACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,qBAAqBC,MAAM,OAAOC,UAAQ,EAACzC,QAAQ,iBAChF,YAAC,IAAD,CAAe0C,OAAK,EAAC1C,QAAQ,iBAA7B,gBAIF,YAAC,IAAD,CAAMoC,GAAG,IAAIpC,QAAQ,QACnB,YAAC,IAAD,CAAYqC,QAAQ,2BAA2BrC,QAAQ,cAAvD,YACA,YAAC,IAAD,CAAa4B,UAAU,iBAAiB5B,QAAQ,eAC9C,YAAC,IAAD,CAAiBuC,GAAG,oBAAoBvC,QAAQ,mBAAhD,KACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,2BAA2BC,MAAM,GAAGG,mBAAiB,oBAAoBF,UAAQ,EAACzC,QAAQ,iBACvH,YAAC,IAAD,CAAe4C,SAAO,EAAC5C,QAAQ,iBAA/B,+BAKJ,YAAC,IAAD,CAAMoC,GAAG,IAAIpC,QAAQ,QACnB,YAAC,IAAD,CAAYqC,QAAQ,qBAAqBrC,QAAQ,cAAjD,QACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,qBAAqBE,UAAQ,EAACzC,QAAQ,iBACnE,YAAC,IAAD,CAAe4C,SAAO,EAAC5C,QAAQ,iBAA/B,iCAIF,YAAC,IAAD,CAAMoC,GAAG,IAAIpC,QAAQ,QACnB,YAAC,IAAD,CAAYqC,QAAQ,qBAAqBrC,QAAQ,cAAjD,QACA,YAAC,IAAD,CAAauC,GAAG,qBAAqBvC,QAAQ,eAC3C,sBAAQ6C,UAAQ,EAACC,UAAQ,GAAzB,aACA,kCAEF,YAAC,IAAD,CAAeF,SAAO,EAAC5C,QAAQ,iBAA/B,iCAIF,YAAC,IAAD,CAAMoC,GAAG,IAAIpC,QAAQ,QACnB,YAAC,IAAD,CAAYqC,QAAQ,qBAAqBrC,QAAQ,cAAjD,QACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,qBAAqBE,UAAQ,EAACzC,QAAQ,iBACnE,YAAC,IAAD,CAAe4C,SAAO,EAAC5C,QAAQ,iBAA/B,gCAIF,YAAC,IAAD,CAAM+C,GAAG,KAAK/C,QAAQ,QACpB,YAAC,IAAD,CAAYsC,KAAK,WAAWC,GAAG,eAAeS,MAAM,gCAAgCP,UAAQ,EAACzC,QAAQ,eACrG,YAAC,IAAD,CAAe4C,SAAO,EAAC5C,QAAQ,iBAA/B,sCAIF,YAAC,IAAD,CAAM+C,GAAG,KAAK/C,QAAQ,QACpB,YAAC,IAAD,CAASiD,MAAM,UAAUX,KAAK,SAAStC,QAAQ,WAA/C,oBAKN,kBACE,GAAM,oBADR,oBAGA,8RACA,6IACA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,k0FAA64FC,SAAO,GACr7FL,QACAH,kBACAS,eACAC,UACAC,oBACAC,YACAC,cACAC,qBACAC,oBACAC,kBACAC,uBACAC,kBACAC,oBACAC,UACAC,iBACAC,eACAC,kBACAC,eACAC,gBACAC,gBACAC,oBACAC,SACAC,UAvBq7F,gBAwBr7F7B,IAxBq7F,EAyBr7FH,eAzBq7F,GA0Bp7FO,QAAQ,eACZ,WACK,MAAkCO,oBAAS,GAApCmB,EAAP,KAAkBC,EAAlB,KAaA,OAAO,YAAC,IAAD,CAAOC,UAAU,2BAA2BF,UAAWA,EAAWI,SAXpD,SAAAC,IAGU,IAFhBA,EAAMC,cAEVC,kBACPF,EAAMG,iBACNH,EAAMI,mBAGRR,GAAa,IAGkF3B,QAAQ,SACzG,YAAC,IAAD,CAAMoC,GAAG,IAAIpC,QAAQ,QACnB,YAAC,IAAD,CAAYqC,QAAQ,sBAAsBrC,QAAQ,cAAlD,SACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,sBAAsBC,MAAM,OAAOC,UAAQ,EAACzC,QAAQ,iBACjF,YAAC,IAAD,CAAe0C,OAAK,EAAC1C,QAAQ,iBAA7B,gBAIF,YAAC,IAAD,CAAMoC,GAAG,IAAIpC,QAAQ,QACnB,YAAC,IAAD,CAAYqC,QAAQ,sBAAsBrC,QAAQ,cAAlD,SACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,sBAAsBC,MAAM,OAAOC,UAAQ,EAACzC,QAAQ,iBACjF,YAAC,IAAD,CAAe0C,OAAK,EAAC1C,QAAQ,iBAA7B,gBAIF,YAAC,IAAD,CAAMoC,GAAG,IAAIpC,QAAQ,QACnB,YAAC,IAAD,CAAYqC,QAAQ,4BAA4BrC,QAAQ,cAAxD,YACA,YAAC,IAAD,CAAa4B,UAAU,iBAAiB5B,QAAQ,eAC9C,YAAC,IAAD,CAAiBuC,GAAG,sBAAsBvC,QAAQ,mBAAlD,KACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,4BAA4BC,MAAM,GAAGG,mBAAiB,sBAAsBF,UAAQ,EAACzC,QAAQ,iBAC1H,YAAC,IAAD,CAAe4C,SAAO,EAAC5C,QAAQ,iBAA/B,+BAKJ,YAAC,IAAD,CAAMoC,GAAG,IAAIpC,QAAQ,QACnB,YAAC,IAAD,CAAYqC,QAAQ,sBAAsBrC,QAAQ,cAAlD,QACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,sBAAsBE,UAAQ,EAACzC,QAAQ,iBACpE,YAAC,IAAD,CAAe4C,SAAO,EAAC5C,QAAQ,iBAA/B,iCAIF,YAAC,IAAD,CAAMoC,GAAG,IAAIpC,QAAQ,QACnB,YAAC,IAAD,CAAYqC,QAAQ,sBAAsBrC,QAAQ,cAAlD,QACA,YAAC,IAAD,CAAauC,GAAG,sBAAsBvC,QAAQ,eAC5C,sBAAQ6C,UAAQ,EAACC,UAAQ,GAAzB,aACA,kCAEF,YAAC,IAAD,CAAeF,SAAO,EAAC5C,QAAQ,iBAA/B,iCAIF,YAAC,IAAD,CAAMoC,GAAG,IAAIpC,QAAQ,QACnB,YAAC,IAAD,CAAYqC,QAAQ,sBAAsBrC,QAAQ,cAAlD,QACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,sBAAsBE,UAAQ,EAACzC,QAAQ,iBACpE,YAAC,IAAD,CAAe4C,SAAO,EAAC5C,QAAQ,iBAA/B,gCAIF,YAAC,IAAD,CAAM+C,GAAG,KAAK/C,QAAQ,QACpB,YAAC,IAAD,CAAYsC,KAAK,WAAWC,GAAG,eAAeS,MAAM,gCAAgCP,UAAQ,EAACzC,QAAQ,eACrG,YAAC,IAAD,CAAe4C,SAAO,EAAC5C,QAAQ,iBAA/B,sCAIF,YAAC,IAAD,CAAM+C,GAAG,KAAK/C,QAAQ,QACpB,YAAC,IAAD,CAASiD,MAAM,UAAUX,KAAK,SAAStC,QAAQ,WAA/C,oBAKN,kBACE,GAAM,eADR,eAGA,uKAAsJ,0BAAYC,WAAW,KAAvB,aAAtJ,QAAoN,0BAAYA,WAAW,KAAvB,WAApN,wBACA,4IAA2H,0BAAYA,WAAW,KAAvB,oBAA3H,qDAA6O,0BAAYA,WAAW,KAAvB,MAA7O,iFACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,wvEAAm0EC,SAAO,GAC32EL,QACAH,kBACAS,eACAC,UACAC,oBACAC,YACAC,cACAC,qBACAC,oBACAC,kBACAC,uBACAC,kBACAC,oBACAC,UACAC,iBACAC,eACAC,kBACAC,eACAC,gBACAC,gBACAC,oBACAC,SACAC,UAvB22E,gBAwB32E7B,IAxB22E,EAyB32EH,eAzB22E,GA0B12EO,QAAQ,cACb,YAAC,IAAD,CAAO4B,UAAU,2BAA2B5B,QAAQ,SAClD,YAAC,IAAD,CAAMoC,GAAG,IAAIpC,QAAQ,QACnB,YAAC,IAAD,CAAYqC,QAAQ,qBAAqBrC,QAAQ,cAAjD,SACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,qBAAqBC,MAAM,OAAOU,SAAO,EAACT,UAAQ,EAACzC,QAAQ,iBACxF,YAAC,IAAD,CAAe0C,OAAK,EAAC1C,QAAQ,iBAA7B,gBAIF,YAAC,IAAD,CAAMoC,GAAG,IAAIpC,QAAQ,QACnB,YAAC,IAAD,CAAYqC,QAAQ,qBAAqBrC,QAAQ,cAAjD,SACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,qBAAqBC,MAAM,OAAOU,SAAO,EAACT,UAAQ,EAACzC,QAAQ,iBACxF,YAAC,IAAD,CAAe0C,OAAK,EAAC1C,QAAQ,iBAA7B,gBAIF,YAAC,IAAD,CAAMoC,GAAG,IAAIpC,QAAQ,QACnB,YAAC,IAAD,CAAYqC,QAAQ,2BAA2BrC,QAAQ,cAAvD,YACA,YAAC,IAAD,CAAa4B,UAAU,iBAAiB5B,QAAQ,eAC9C,YAAC,IAAD,CAAiBuC,GAAG,sBAAsBvC,QAAQ,mBAAlD,KACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,2BAA2BC,MAAM,GAAGG,mBAAiB,sBAAsBQ,WAAS,EAACV,UAAQ,EAACzC,QAAQ,iBACnI,YAAC,IAAD,CAAe4C,SAAO,EAAC5C,QAAQ,iBAA/B,+BAKJ,YAAC,IAAD,CAAMoC,GAAG,IAAIpC,QAAQ,QACnB,YAAC,IAAD,CAAYqC,QAAQ,qBAAqBrC,QAAQ,cAAjD,QACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,qBAAqBY,WAAS,EAACV,UAAQ,EAACzC,QAAQ,iBAC7E,YAAC,IAAD,CAAe4C,SAAO,EAAC5C,QAAQ,iBAA/B,iCAIF,YAAC,IAAD,CAAMoC,GAAG,IAAIpC,QAAQ,QACnB,YAAC,IAAD,CAAYqC,QAAQ,qBAAqBrC,QAAQ,cAAjD,QACA,YAAC,IAAD,CAAauC,GAAG,qBAAqBY,WAAS,EAACnD,QAAQ,eACrD,sBAAQ6C,UAAQ,EAACC,UAAQ,GAAzB,aACA,kCAEF,YAAC,IAAD,CAAeF,SAAO,EAAC5C,QAAQ,iBAA/B,iCAIF,YAAC,IAAD,CAAMoC,GAAG,IAAIpC,QAAQ,QACnB,YAAC,IAAD,CAAYqC,QAAQ,qBAAqBrC,QAAQ,cAAjD,QACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,qBAAqBY,WAAS,EAACV,UAAQ,EAACzC,QAAQ,iBAC7E,YAAC,IAAD,CAAe4C,SAAO,EAAC5C,QAAQ,iBAA/B,gCAIF,YAAC,IAAD,CAAM+C,GAAG,KAAK/C,QAAQ,QACpB,YAAC,IAAD,CAAYsC,KAAK,WAAWC,GAAG,eAAeS,MAAM,gCAAgCG,WAAS,EAACV,UAAQ,EAACzC,QAAQ,eAC/G,YAAC,IAAD,CAAe4C,SAAO,EAAC5C,QAAQ,iBAA/B,sCAIF,YAAC,IAAD,CAAM+C,GAAG,KAAK/C,QAAQ,QACpB,YAAC,IAAD,CAASiD,MAAM,UAAUX,KAAK,SAAStC,QAAQ,WAA/C,kBAIF,kBACE,GAAM,sBADR,sBAGA,wGACA,sBACE,kBAAIC,WAAW,MAAK,0BAAYA,WAAW,MAAvB,kBAApB,KACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,iBAApB,KACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,gBAApB,MAEF,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,wtDAAuxDC,SAAO,GAC/zDL,QACAH,kBACAS,eACAC,UACAC,oBACAC,YACAC,cACAC,qBACAC,oBACAC,kBACAC,uBACAC,kBACAC,oBACAC,UACAC,iBACAC,eACAC,kBACAC,eACAC,gBACAC,gBACAC,oBACAC,SACAC,UAvB+zD,gBAwB/zD7B,IAxB+zD,EAyB/zDH,eAzB+zD,GA0B9zDO,QAAQ,cACb,YAAC,IAAD,CAAO0B,WAAW,EAAM1B,QAAQ,SAC9B,mBAAK4B,UAAU,QACb,YAAC,IAAD,CAAYS,QAAQ,qBAAqBT,UAAU,aAAa5B,QAAQ,cAAxE,YACA,YAAC,IAAD,CAAcoD,UAAU,WAAWb,GAAG,qBAAqBc,YAAY,4BAA4BF,WAAS,EAACV,UAAQ,EAACzC,QAAQ,iBAC9H,YAAC,IAAD,CAAe4C,SAAO,EAAC5C,QAAQ,iBAA/B,4CAIE,YAAC,IAAD,CAAY4B,UAAU,OAAOW,GAAG,uBAAuBS,MAAM,sBAAsBP,UAAQ,EAACzC,QAAQ,eACpG,YAAC,IAAD,CAAe4C,SAAO,EAAC5C,QAAQ,iBAA/B,iCAEA,YAAC,IAAD,CAAYsC,KAAK,QAAQgB,KAAK,gBAAgBf,GAAG,uBAAuBS,MAAM,sBAAsBP,UAAQ,EAACzC,QAAQ,eAErH,YAAC,IAAD,CAAY4B,UAAU,OAAOU,KAAK,QAAQgB,KAAK,gBAAgBf,GAAG,uBAAuBS,MAAM,6BAA6BP,UAAQ,EAACzC,QAAQ,eAC7I,YAAC,IAAD,CAAe4C,SAAO,EAAC5C,QAAQ,iBAA/B,sCAEA,mBAAK4B,UAAU,QACrB,YAAC,IAAD,CAAaa,UAAQ,EAACc,aAAW,iBAAiBvD,QAAQ,eACxD,sBAAQwC,MAAM,IAAd,yBACA,sBAAQA,MAAM,KAAd,OACA,sBAAQA,MAAM,KAAd,OACA,sBAAQA,MAAM,KAAd,UAEF,YAAC,IAAD,CAAeI,SAAO,EAAC5C,QAAQ,iBAA/B,oCAGM,mBAAK4B,UAAU,QACrB,YAAC,IAAD,CAAcU,KAAK,OAAOC,GAAG,qBAAqBgB,aAAW,eAAed,UAAQ,EAACzC,QAAQ,iBAC7F,YAAC,IAAD,CAAe4C,SAAO,EAAC5C,QAAQ,iBAA/B,uCAGM,mBAAK4B,UAAU,QACrB,YAAC,IAAD,CAASU,KAAK,SAASW,MAAM,UAAUH,UAAQ,EAAC9C,QAAQ,WAAxD,kBAIE,kBACE,GAAM,YADR,YAGA,+KAA8J,0BAAYC,WAAW,KAAvB,sBAA9J,kJACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,i8FAAohGC,SAAO,GAC5jGL,QACAH,kBACAS,eACAC,UACAC,oBACAC,YACAC,cACAC,qBACAC,oBACAC,kBACAC,uBACAC,kBACAC,oBACAC,UACAC,iBACAC,eACAC,kBACAC,eACAC,gBACAC,gBACAC,oBACAC,SACAC,UAvB4jG,gBAwB5jG7B,IAxB4jG,EAyB5jGH,eAzB4jG,GA0B3jGO,QAAQ,eACZ,WACK,MAAkCO,oBAAS,GAApCmB,EAAP,KAAkBC,EAAlB,KAaA,OAAO,YAAC,IAAD,CAAOC,UAAU,2BAA2BC,YAAU,EAACH,UAAWA,EAAWI,SAX/D,SAAAC,IAGU,IAFhBA,EAAMC,cAEVC,kBACPF,EAAMG,iBACNH,EAAMI,mBAGRR,GAAa,IAG6F3B,QAAQ,SACpH,YAAC,IAAD,CAAMoC,GAAG,IAAIR,UAAU,oBAAoB5B,QAAQ,QACjD,YAAC,IAAD,CAAYqC,QAAQ,sBAAsBrC,QAAQ,cAAlD,SACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,sBAAsBC,MAAM,OAAOC,UAAQ,EAACzC,QAAQ,iBACjF,YAAC,IAAD,CAAewD,SAAO,EAACd,OAAK,EAAC1C,QAAQ,iBAArC,gBAIF,YAAC,IAAD,CAAMoC,GAAG,IAAIR,UAAU,oBAAoB5B,QAAQ,QACjD,YAAC,IAAD,CAAYqC,QAAQ,sBAAsBrC,QAAQ,cAAlD,SACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,sBAAsBC,MAAM,OAAOC,UAAQ,EAACzC,QAAQ,iBACjF,YAAC,IAAD,CAAewD,SAAO,EAACd,OAAK,EAAC1C,QAAQ,iBAArC,gBAIF,YAAC,IAAD,CAAMoC,GAAG,IAAIR,UAAU,oBAAoB5B,QAAQ,QACjD,YAAC,IAAD,CAAYqC,QAAQ,4BAA4BrC,QAAQ,cAAxD,YACA,YAAC,IAAD,CAAa4B,UAAU,iBAAiB5B,QAAQ,eAC9C,YAAC,IAAD,CAAiBuC,GAAG,oBAAoBvC,QAAQ,mBAAhD,KACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,4BAA4BC,MAAM,GAAGG,mBAAiB,oBAAoBF,UAAQ,EAACzC,QAAQ,iBACxH,YAAC,IAAD,CAAewD,SAAO,EAACZ,SAAO,EAAC5C,QAAQ,iBAAvC,+BAKJ,YAAC,IAAD,CAAMoC,GAAG,IAAIR,UAAU,oBAAoB5B,QAAQ,QACjD,YAAC,IAAD,CAAYqC,QAAQ,sBAAsBrC,QAAQ,cAAlD,QACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,sBAAsBE,UAAQ,EAACzC,QAAQ,iBACpE,YAAC,IAAD,CAAewD,SAAO,EAACZ,SAAO,EAAC5C,QAAQ,iBAAvC,iCAIF,YAAC,IAAD,CAAMoC,GAAG,IAAIR,UAAU,oBAAoB5B,QAAQ,QACjD,YAAC,IAAD,CAAYqC,QAAQ,sBAAsBrC,QAAQ,cAAlD,QACA,YAAC,IAAD,CAAauC,GAAG,sBAAsBE,UAAQ,EAACzC,QAAQ,eACrD,sBAAQ6C,UAAQ,EAACC,UAAQ,EAACN,MAAM,IAAhC,aACA,kCAEF,YAAC,IAAD,CAAegB,SAAO,EAACZ,SAAO,EAAC5C,QAAQ,iBAAvC,iCAIF,YAAC,IAAD,CAAMoC,GAAG,IAAIR,UAAU,oBAAoB5B,QAAQ,QACjD,YAAC,IAAD,CAAYqC,QAAQ,sBAAsBrC,QAAQ,cAAlD,QACA,YAAC,IAAD,CAAcsC,KAAK,OAAOC,GAAG,sBAAsBE,UAAQ,EAACzC,QAAQ,iBACpE,YAAC,IAAD,CAAewD,SAAO,EAACZ,SAAO,EAAC5C,QAAQ,iBAAvC,gCAIF,YAAC,IAAD,CAAM+C,GAAG,KAAKnB,UAAU,oBAAoB5B,QAAQ,QAClD,YAAC,IAAD,CAASiD,MAAM,UAAUX,KAAK,SAAStC,QAAQ,WAA/C,0B,kNASVH,EAAW4D,gBAAiB","file":"component---src-components-form-validation-mdx-c2d965bc34b8c9c7d51c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukaszholeczek/CoreUI/@coreui/react/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { useState } from 'react';\nimport { CButton } from '../button/CButton';\nimport { CDropdown } from '../dropdown/CDropdown.tsx';\nimport { CDropdownDivider } from '../dropdown/CDropdownDivider.tsx';\nimport { CDropdownHeader } from '../dropdown/CDropdownHeader.tsx';\nimport { CDropdownItem } from '../dropdown/CDropdownItem.tsx';\nimport { CDropdownItemPlain } from '../dropdown/CDropdownItemPlain.tsx';\nimport { CDropdownMenu } from '../dropdown/CDropdownMenu.tsx';\nimport { CDropdownToggle } from '../dropdown/CDropdownToggle.tsx';\nimport { CForm } from './CForm';\nimport { CFormControl } from './CFormControl';\nimport { CFormCheck } from './CFormCheck';\nimport { CFormFeedback } from './CFormFeedback';\nimport { CFormLabel } from './CFormLabel';\nimport { CFormSelect } from './CFormSelect';\nimport { CInputGroup } from './CInputGroup';\nimport { CInputGroupText } from './CInputGroupText';\nimport { CCol } from '../grid/CCol';\nimport { CRow } from '../grid/CRow';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    {\n      /* ## How it works\n      Here's how form validation works with Bootstrap:\n      - HTML form validation is applied via CSS's two pseudo-classes, `:invalid` and `:valid`. It applies to `<input>`, `<select>`, and `<textarea>` elements.\n      - CoreUI for Bootstrap scopes the `:invalid` and `:valid` styles to parent `.was-validated` class, usually applied to the `<form>`. Otherwise, any required field without a value shows up as invalid on page load. This way, you may choose when to activate them (typically after form submission is attempted).\n      - To reset the appearance of the form (for instance, in the case of dynamic form submissions using AJAX), remove the `.was-validated` class from the `<form>` again after submission.\n      - As a fallback, `.is-invalid` and `.is-valid` classes may be used instead of the pseudo-classes for [server-side validation](#server-side). They do not require a `.was-validated` parent class.\n      - Due to constraints in how CSS works, we cannot (at present) apply styles to a `<label>` that comes before a form control in the DOM without the help of custom JavaScript.\n      - All modern browsers support the [constraint validation API](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#the-constraint-validation-api), a series of JavaScript methods for validating form controls.\n      - Feedback messages may utilize the [browser defaults](#browser-defaults) (different for each browser, and unstylable via CSS) or our custom feedback styles with additional HTML and CSS.\n      - You may provide custom validity messages with `setCustomValidity` in JavaScript.\n      With that in mind, consider the following demos for our custom form validation styles, optional server-side classes, and browser defaults. */\n    }\n    <h2 {...{\n      \"id\": \"custom-styles\"\n    }}>{`Custom styles`}</h2>\n    <p>{`For custom CoreUI form validation messages, you'll need to add the `}<inlineCode parentName=\"p\">{`noValidate`}</inlineCode>{` boolean property to your `}<inlineCode parentName=\"p\">{`<CForm>`}</inlineCode>{`. This disables the browser default feedback tooltips, but still provides access to the form validation APIs in JavaScript. Try to submit the form below; our JavaScript will intercept the submit button and relay feedback to you. When attempting to submit, you'll see the `}<inlineCode parentName=\"p\">{`:invalid`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`:valid`}</inlineCode>{` styles applied to your form controls.`}</p>\n    <p>{`Custom feedback styles apply custom colors, borders, focus styles, and background icons to better communicate feedback. `}</p>\n    <Playground __position={0} __code={'() => {\\n  const [validated, setValidated] = useState(false)\\n  const handleSubmit = event => {\\n    const form = event.currentTarget\\n    if (form.checkValidity() === false) {\\n      event.preventDefault()\\n      event.stopPropagation()\\n    }\\n    setValidated(true)\\n  }\\n  return (\\n    <CForm\\n      className=\\\"row g-3 needs-validation\\\"\\n      noValidate\\n      validated={validated}\\n      onSubmit={handleSubmit}\\n    >\\n      <CCol md=\\\"4\\\">\\n        <CFormLabel htmlFor=\\\"validationCustom01\\\">Email</CFormLabel>\\n        <CFormControl\\n          type=\\\"text\\\"\\n          id=\\\"validationCustom01\\\"\\n          value=\\\"Mark\\\"\\n          required\\n        />\\n        <CFormFeedback valid>Looks good!</CFormFeedback>\\n      </CCol>\\n      <CCol md=\\\"4\\\">\\n        <CFormLabel htmlFor=\\\"validationCustom02\\\">Email</CFormLabel>\\n        <CFormControl\\n          type=\\\"text\\\"\\n          id=\\\"validationCustom02\\\"\\n          value=\\\"Otto\\\"\\n          required\\n        />\\n        <CFormFeedback valid>Looks good!</CFormFeedback>\\n      </CCol>\\n      <CCol md=\\\"4\\\">\\n        <CFormLabel htmlFor=\\\"validationCustomUsername\\\">Username</CFormLabel>\\n        <CInputGroup className=\\\"has-validation\\\">\\n          <CInputGroupText id=\\\"inputGroupPrepend\\\">@</CInputGroupText>\\n          <CFormControl\\n            type=\\\"text\\\"\\n            id=\\\"validationCustomUsername\\\"\\n            value=\\\"\\\"\\n            aria-describedby=\\\"inputGroupPrepend\\\"\\n            required\\n          />\\n          <CFormFeedback invalid>Please choose a username.</CFormFeedback>\\n        </CInputGroup>\\n      </CCol>\\n      <CCol md=\\\"6\\\">\\n        <CFormLabel htmlFor=\\\"validationCustom03\\\">City</CFormLabel>\\n        <CFormControl type=\\\"text\\\" id=\\\"validationCustom03\\\" required />\\n        <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>\\n      </CCol>\\n      <CCol md=\\\"3\\\">\\n        <CFormLabel htmlFor=\\\"validationCustom04\\\">City</CFormLabel>\\n        <CFormSelect id=\\\"validationCustom04\\\">\\n          <option selected disabled>\\n            Choose...\\n          </option>\\n          <option>...</option>\\n        </CFormSelect>\\n        <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>\\n      </CCol>\\n      <CCol md=\\\"3\\\">\\n        <CFormLabel htmlFor=\\\"validationCustom05\\\">City</CFormLabel>\\n        <CFormControl type=\\\"text\\\" id=\\\"validationCustom05\\\" required />\\n        <CFormFeedback invalid>Please provide a valid zip.</CFormFeedback>\\n      </CCol>\\n      <CCol xs=\\\"12\\\">\\n        <CFormCheck\\n          type=\\\"checkbox\\\"\\n          id=\\\"invalidCheck\\\"\\n          label=\\\"Agree to terms and conditions\\\"\\n          required\\n        />\\n        <CFormFeedback invalid>\\n          You must agree before submitting.\\n        </CFormFeedback>\\n      </CCol>\\n      <CCol xs=\\\"12\\\">\\n        <CButton color=\\\"primary\\\" type=\\\"submit\\\">\\n          Submit form\\n        </CButton>\\n      </CCol>\\n    </CForm>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CDropdown,\n      CDropdownDivider,\n      CDropdownHeader,\n      CDropdownItem,\n      CDropdownItemPlain,\n      CDropdownMenu,\n      CDropdownToggle,\n      CForm,\n      CFormControl,\n      CFormCheck,\n      CFormFeedback,\n      CFormLabel,\n      CFormSelect,\n      CInputGroup,\n      CInputGroupText,\n      CCol,\n      CRow,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [validated, setValidated] = useState(false);\n\n        const handleSubmit = event => {\n          const form = event.currentTarget;\n\n          if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n\n          setValidated(true);\n        };\n\n        return <CForm className=\"row g-3 needs-validation\" noValidate validated={validated} onSubmit={handleSubmit} mdxType=\"CForm\">\n        <CCol md=\"4\" mdxType=\"CCol\">\n          <CFormLabel htmlFor=\"validationCustom01\" mdxType=\"CFormLabel\">Email</CFormLabel>\n          <CFormControl type=\"text\" id=\"validationCustom01\" value=\"Mark\" required mdxType=\"CFormControl\" />\n          <CFormFeedback valid mdxType=\"CFormFeedback\">\n            Looks good!\n          </CFormFeedback>\n        </CCol>\n        <CCol md=\"4\" mdxType=\"CCol\">\n          <CFormLabel htmlFor=\"validationCustom02\" mdxType=\"CFormLabel\">Email</CFormLabel>\n          <CFormControl type=\"text\" id=\"validationCustom02\" value=\"Otto\" required mdxType=\"CFormControl\" />\n          <CFormFeedback valid mdxType=\"CFormFeedback\">\n            Looks good!\n          </CFormFeedback>\n        </CCol>\n        <CCol md=\"4\" mdxType=\"CCol\">\n          <CFormLabel htmlFor=\"validationCustomUsername\" mdxType=\"CFormLabel\">Username</CFormLabel>\n          <CInputGroup className=\"has-validation\" mdxType=\"CInputGroup\">\n            <CInputGroupText id=\"inputGroupPrepend\" mdxType=\"CInputGroupText\">@</CInputGroupText>\n            <CFormControl type=\"text\" id=\"validationCustomUsername\" value=\"\" aria-describedby=\"inputGroupPrepend\" required mdxType=\"CFormControl\" />\n            <CFormFeedback invalid mdxType=\"CFormFeedback\">\n            Please choose a username.\n            </CFormFeedback>\n          </CInputGroup>\n        </CCol>\n        <CCol md=\"6\" mdxType=\"CCol\">\n          <CFormLabel htmlFor=\"validationCustom03\" mdxType=\"CFormLabel\">City</CFormLabel>\n          <CFormControl type=\"text\" id=\"validationCustom03\" required mdxType=\"CFormControl\" />\n          <CFormFeedback invalid mdxType=\"CFormFeedback\">\n            Please provide a valid city.\n          </CFormFeedback>\n        </CCol>\n        <CCol md=\"3\" mdxType=\"CCol\">\n          <CFormLabel htmlFor=\"validationCustom04\" mdxType=\"CFormLabel\">City</CFormLabel>\n          <CFormSelect id=\"validationCustom04\" mdxType=\"CFormSelect\">\n            <option selected disabled>Choose...</option>\n            <option>...</option>\n          </CFormSelect>\n          <CFormFeedback invalid mdxType=\"CFormFeedback\">\n            Please provide a valid city.\n          </CFormFeedback>\n        </CCol>\n        <CCol md=\"3\" mdxType=\"CCol\">\n          <CFormLabel htmlFor=\"validationCustom05\" mdxType=\"CFormLabel\">City</CFormLabel>\n          <CFormControl type=\"text\" id=\"validationCustom05\" required mdxType=\"CFormControl\" />\n          <CFormFeedback invalid mdxType=\"CFormFeedback\">\n            Please provide a valid zip.\n          </CFormFeedback>\n        </CCol>\n        <CCol xs=\"12\" mdxType=\"CCol\">\n          <CFormCheck type=\"checkbox\" id=\"invalidCheck\" label=\"Agree to terms and conditions\" required mdxType=\"CFormCheck\" />\n          <CFormFeedback invalid mdxType=\"CFormFeedback\">\n            You must agree before submitting.\n          </CFormFeedback>\n        </CCol>\n        <CCol xs=\"12\" mdxType=\"CCol\">\n          <CButton color=\"primary\" type=\"submit\" mdxType=\"CButton\">Submit form</CButton>\n        </CCol>\n      </CForm>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"browser-defaults\"\n    }}>{`Browser defaults`}</h2>\n    <p>{`Not interested in custom validation feedback messages or writing JavaScript to change form behaviors? All good, you can use the browser defaults. Try submitting the form below. Depending on your browser and OS, you'll see a slightly different style of feedback.`}</p>\n    <p>{`While these feedback styles cannot be styled with CSS, you can still customize the feedback text through JavaScript.`}</p>\n    <Playground __position={1} __code={'() => {\\n  const [validated, setValidated] = useState(false)\\n  const handleSubmit = event => {\\n    const form = event.currentTarget\\n    if (form.checkValidity() === false) {\\n      event.preventDefault()\\n      event.stopPropagation()\\n    }\\n    setValidated(true)\\n  }\\n  return (\\n    <CForm\\n      className=\\\"row g-3 needs-validation\\\"\\n      validated={validated}\\n      onSubmit={handleSubmit}\\n    >\\n      <CCol md=\\\"4\\\">\\n        <CFormLabel htmlFor=\\\"validationDefault01\\\">Email</CFormLabel>\\n        <CFormControl\\n          type=\\\"text\\\"\\n          id=\\\"validationDefault01\\\"\\n          value=\\\"Mark\\\"\\n          required\\n        />\\n        <CFormFeedback valid>Looks good!</CFormFeedback>\\n      </CCol>\\n      <CCol md=\\\"4\\\">\\n        <CFormLabel htmlFor=\\\"validationDefault02\\\">Email</CFormLabel>\\n        <CFormControl\\n          type=\\\"text\\\"\\n          id=\\\"validationDefault02\\\"\\n          value=\\\"Otto\\\"\\n          required\\n        />\\n        <CFormFeedback valid>Looks good!</CFormFeedback>\\n      </CCol>\\n      <CCol md=\\\"4\\\">\\n        <CFormLabel htmlFor=\\\"validationDefaultUsername\\\">Username</CFormLabel>\\n        <CInputGroup className=\\\"has-validation\\\">\\n          <CInputGroupText id=\\\"inputGroupPrepend02\\\">@</CInputGroupText>\\n          <CFormControl\\n            type=\\\"text\\\"\\n            id=\\\"validationDefaultUsername\\\"\\n            value=\\\"\\\"\\n            aria-describedby=\\\"inputGroupPrepend02\\\"\\n            required\\n          />\\n          <CFormFeedback invalid>Please choose a username.</CFormFeedback>\\n        </CInputGroup>\\n      </CCol>\\n      <CCol md=\\\"6\\\">\\n        <CFormLabel htmlFor=\\\"validationDefault03\\\">City</CFormLabel>\\n        <CFormControl type=\\\"text\\\" id=\\\"validationDefault03\\\" required />\\n        <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>\\n      </CCol>\\n      <CCol md=\\\"3\\\">\\n        <CFormLabel htmlFor=\\\"validationDefault04\\\">City</CFormLabel>\\n        <CFormSelect id=\\\"validationDefault04\\\">\\n          <option selected disabled>\\n            Choose...\\n          </option>\\n          <option>...</option>\\n        </CFormSelect>\\n        <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>\\n      </CCol>\\n      <CCol md=\\\"3\\\">\\n        <CFormLabel htmlFor=\\\"validationDefault05\\\">City</CFormLabel>\\n        <CFormControl type=\\\"text\\\" id=\\\"validationDefault05\\\" required />\\n        <CFormFeedback invalid>Please provide a valid zip.</CFormFeedback>\\n      </CCol>\\n      <CCol xs=\\\"12\\\">\\n        <CFormCheck\\n          type=\\\"checkbox\\\"\\n          id=\\\"invalidCheck\\\"\\n          label=\\\"Agree to terms and conditions\\\"\\n          required\\n        />\\n        <CFormFeedback invalid>\\n          You must agree before submitting.\\n        </CFormFeedback>\\n      </CCol>\\n      <CCol xs=\\\"12\\\">\\n        <CButton color=\\\"primary\\\" type=\\\"submit\\\">\\n          Submit form\\n        </CButton>\\n      </CCol>\\n    </CForm>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CDropdown,\n      CDropdownDivider,\n      CDropdownHeader,\n      CDropdownItem,\n      CDropdownItemPlain,\n      CDropdownMenu,\n      CDropdownToggle,\n      CForm,\n      CFormControl,\n      CFormCheck,\n      CFormFeedback,\n      CFormLabel,\n      CFormSelect,\n      CInputGroup,\n      CInputGroupText,\n      CCol,\n      CRow,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [validated, setValidated] = useState(false);\n\n        const handleSubmit = event => {\n          const form = event.currentTarget;\n\n          if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n\n          setValidated(true);\n        };\n\n        return <CForm className=\"row g-3 needs-validation\" validated={validated} onSubmit={handleSubmit} mdxType=\"CForm\">\n        <CCol md=\"4\" mdxType=\"CCol\">\n          <CFormLabel htmlFor=\"validationDefault01\" mdxType=\"CFormLabel\">Email</CFormLabel>\n          <CFormControl type=\"text\" id=\"validationDefault01\" value=\"Mark\" required mdxType=\"CFormControl\" />\n          <CFormFeedback valid mdxType=\"CFormFeedback\">\n            Looks good!\n          </CFormFeedback>\n        </CCol>\n        <CCol md=\"4\" mdxType=\"CCol\">\n          <CFormLabel htmlFor=\"validationDefault02\" mdxType=\"CFormLabel\">Email</CFormLabel>\n          <CFormControl type=\"text\" id=\"validationDefault02\" value=\"Otto\" required mdxType=\"CFormControl\" />\n          <CFormFeedback valid mdxType=\"CFormFeedback\">\n            Looks good!\n          </CFormFeedback>\n        </CCol>\n        <CCol md=\"4\" mdxType=\"CCol\">\n          <CFormLabel htmlFor=\"validationDefaultUsername\" mdxType=\"CFormLabel\">Username</CFormLabel>\n          <CInputGroup className=\"has-validation\" mdxType=\"CInputGroup\">\n            <CInputGroupText id=\"inputGroupPrepend02\" mdxType=\"CInputGroupText\">@</CInputGroupText>\n            <CFormControl type=\"text\" id=\"validationDefaultUsername\" value=\"\" aria-describedby=\"inputGroupPrepend02\" required mdxType=\"CFormControl\" />\n            <CFormFeedback invalid mdxType=\"CFormFeedback\">\n            Please choose a username.\n            </CFormFeedback>\n          </CInputGroup>\n        </CCol>\n        <CCol md=\"6\" mdxType=\"CCol\">\n          <CFormLabel htmlFor=\"validationDefault03\" mdxType=\"CFormLabel\">City</CFormLabel>\n          <CFormControl type=\"text\" id=\"validationDefault03\" required mdxType=\"CFormControl\" />\n          <CFormFeedback invalid mdxType=\"CFormFeedback\">\n            Please provide a valid city.\n          </CFormFeedback>\n        </CCol>\n        <CCol md=\"3\" mdxType=\"CCol\">\n          <CFormLabel htmlFor=\"validationDefault04\" mdxType=\"CFormLabel\">City</CFormLabel>\n          <CFormSelect id=\"validationDefault04\" mdxType=\"CFormSelect\">\n            <option selected disabled>Choose...</option>\n            <option>...</option>\n          </CFormSelect>\n          <CFormFeedback invalid mdxType=\"CFormFeedback\">\n            Please provide a valid city.\n          </CFormFeedback>\n        </CCol>\n        <CCol md=\"3\" mdxType=\"CCol\">\n          <CFormLabel htmlFor=\"validationDefault05\" mdxType=\"CFormLabel\">City</CFormLabel>\n          <CFormControl type=\"text\" id=\"validationDefault05\" required mdxType=\"CFormControl\" />\n          <CFormFeedback invalid mdxType=\"CFormFeedback\">\n            Please provide a valid zip.\n          </CFormFeedback>\n        </CCol>\n        <CCol xs=\"12\" mdxType=\"CCol\">\n          <CFormCheck type=\"checkbox\" id=\"invalidCheck\" label=\"Agree to terms and conditions\" required mdxType=\"CFormCheck\" />\n          <CFormFeedback invalid mdxType=\"CFormFeedback\">\n            You must agree before submitting.\n          </CFormFeedback>\n        </CCol>\n        <CCol xs=\"12\" mdxType=\"CCol\">\n          <CButton color=\"primary\" type=\"submit\" mdxType=\"CButton\">Submit form</CButton>\n        </CCol>\n      </CForm>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"server-side\"\n    }}>{`Server side`}</h2>\n    <p>{`We recommend using client-side validation, but in case you require server-side validation, you can indicate invalid and valid form fields with `}<inlineCode parentName=\"p\">{`isInvalid`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`isValid`}</inlineCode>{` boolean properties.`}</p>\n    <p>{`For invalid fields, ensure that the invalid feedback/error message is associated with the relevant form field using `}<inlineCode parentName=\"p\">{`aria-describedby`}</inlineCode>{` (noting that this attribute allows more than one `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` to be referenced, in case the field already points to additional form text).`}</p>\n    <Playground __position={2} __code={'<CForm className=\\\"row g-3 needs-validation\\\">\\n  <CCol md=\\\"4\\\">\\n    <CFormLabel htmlFor=\\\"validationServer01\\\">Email</CFormLabel>\\n    <CFormControl\\n      type=\\\"text\\\"\\n      id=\\\"validationServer01\\\"\\n      value=\\\"Mark\\\"\\n      isValid\\n      required\\n    />\\n    <CFormFeedback valid>Looks good!</CFormFeedback>\\n  </CCol>\\n  <CCol md=\\\"4\\\">\\n    <CFormLabel htmlFor=\\\"validationServer02\\\">Email</CFormLabel>\\n    <CFormControl\\n      type=\\\"text\\\"\\n      id=\\\"validationServer02\\\"\\n      value=\\\"Otto\\\"\\n      isValid\\n      required\\n    />\\n    <CFormFeedback valid>Looks good!</CFormFeedback>\\n  </CCol>\\n  <CCol md=\\\"4\\\">\\n    <CFormLabel htmlFor=\\\"validationServerUsername\\\">Username</CFormLabel>\\n    <CInputGroup className=\\\"has-validation\\\">\\n      <CInputGroupText id=\\\"inputGroupPrepend03\\\">@</CInputGroupText>\\n      <CFormControl\\n        type=\\\"text\\\"\\n        id=\\\"validationServerUsername\\\"\\n        value=\\\"\\\"\\n        aria-describedby=\\\"inputGroupPrepend03\\\"\\n        isInvalid\\n        required\\n      />\\n      <CFormFeedback invalid>Please choose a username.</CFormFeedback>\\n    </CInputGroup>\\n  </CCol>\\n  <CCol md=\\\"6\\\">\\n    <CFormLabel htmlFor=\\\"validationServer03\\\">City</CFormLabel>\\n    <CFormControl type=\\\"text\\\" id=\\\"validationServer03\\\" isInvalid required />\\n    <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>\\n  </CCol>\\n  <CCol md=\\\"3\\\">\\n    <CFormLabel htmlFor=\\\"validationServer04\\\">City</CFormLabel>\\n    <CFormSelect id=\\\"validationServer04\\\" isInvalid>\\n      <option selected disabled>\\n        Choose...\\n      </option>\\n      <option>...</option>\\n    </CFormSelect>\\n    <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>\\n  </CCol>\\n  <CCol md=\\\"3\\\">\\n    <CFormLabel htmlFor=\\\"validationServer05\\\">City</CFormLabel>\\n    <CFormControl type=\\\"text\\\" id=\\\"validationServer05\\\" isInvalid required />\\n    <CFormFeedback invalid>Please provide a valid zip.</CFormFeedback>\\n  </CCol>\\n  <CCol xs=\\\"12\\\">\\n    <CFormCheck\\n      type=\\\"checkbox\\\"\\n      id=\\\"invalidCheck\\\"\\n      label=\\\"Agree to terms and conditions\\\"\\n      isInvalid\\n      required\\n    />\\n    <CFormFeedback invalid>You must agree before submitting.</CFormFeedback>\\n  </CCol>\\n  <CCol xs=\\\"12\\\">\\n    <CButton color=\\\"primary\\\" type=\\\"submit\\\">\\n      Submit form\\n    </CButton>\\n  </CCol>\\n</CForm>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CDropdown,\n      CDropdownDivider,\n      CDropdownHeader,\n      CDropdownItem,\n      CDropdownItemPlain,\n      CDropdownMenu,\n      CDropdownToggle,\n      CForm,\n      CFormControl,\n      CFormCheck,\n      CFormFeedback,\n      CFormLabel,\n      CFormSelect,\n      CInputGroup,\n      CInputGroupText,\n      CCol,\n      CRow,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CForm className=\"row g-3 needs-validation\" mdxType=\"CForm\">\n    <CCol md=\"4\" mdxType=\"CCol\">\n      <CFormLabel htmlFor=\"validationServer01\" mdxType=\"CFormLabel\">Email</CFormLabel>\n      <CFormControl type=\"text\" id=\"validationServer01\" value=\"Mark\" isValid required mdxType=\"CFormControl\" />\n      <CFormFeedback valid mdxType=\"CFormFeedback\">\n        Looks good!\n      </CFormFeedback>\n    </CCol>\n    <CCol md=\"4\" mdxType=\"CCol\">\n      <CFormLabel htmlFor=\"validationServer02\" mdxType=\"CFormLabel\">Email</CFormLabel>\n      <CFormControl type=\"text\" id=\"validationServer02\" value=\"Otto\" isValid required mdxType=\"CFormControl\" />\n      <CFormFeedback valid mdxType=\"CFormFeedback\">\n        Looks good!\n      </CFormFeedback>\n    </CCol>\n    <CCol md=\"4\" mdxType=\"CCol\">\n      <CFormLabel htmlFor=\"validationServerUsername\" mdxType=\"CFormLabel\">Username</CFormLabel>\n      <CInputGroup className=\"has-validation\" mdxType=\"CInputGroup\">\n        <CInputGroupText id=\"inputGroupPrepend03\" mdxType=\"CInputGroupText\">@</CInputGroupText>\n        <CFormControl type=\"text\" id=\"validationServerUsername\" value=\"\" aria-describedby=\"inputGroupPrepend03\" isInvalid required mdxType=\"CFormControl\" />\n        <CFormFeedback invalid mdxType=\"CFormFeedback\">\n        Please choose a username.\n        </CFormFeedback>\n      </CInputGroup>\n    </CCol>\n    <CCol md=\"6\" mdxType=\"CCol\">\n      <CFormLabel htmlFor=\"validationServer03\" mdxType=\"CFormLabel\">City</CFormLabel>\n      <CFormControl type=\"text\" id=\"validationServer03\" isInvalid required mdxType=\"CFormControl\" />\n      <CFormFeedback invalid mdxType=\"CFormFeedback\">\n        Please provide a valid city.\n      </CFormFeedback>\n    </CCol>\n    <CCol md=\"3\" mdxType=\"CCol\">\n      <CFormLabel htmlFor=\"validationServer04\" mdxType=\"CFormLabel\">City</CFormLabel>\n      <CFormSelect id=\"validationServer04\" isInvalid mdxType=\"CFormSelect\">\n        <option selected disabled>Choose...</option>\n        <option>...</option>\n      </CFormSelect>\n      <CFormFeedback invalid mdxType=\"CFormFeedback\">\n        Please provide a valid city.\n      </CFormFeedback>\n    </CCol>\n    <CCol md=\"3\" mdxType=\"CCol\">\n      <CFormLabel htmlFor=\"validationServer05\" mdxType=\"CFormLabel\">City</CFormLabel>\n      <CFormControl type=\"text\" id=\"validationServer05\" isInvalid required mdxType=\"CFormControl\" />\n      <CFormFeedback invalid mdxType=\"CFormFeedback\">\n        Please provide a valid zip.\n      </CFormFeedback>\n    </CCol>\n    <CCol xs=\"12\" mdxType=\"CCol\">\n      <CFormCheck type=\"checkbox\" id=\"invalidCheck\" label=\"Agree to terms and conditions\" isInvalid required mdxType=\"CFormCheck\" />\n      <CFormFeedback invalid mdxType=\"CFormFeedback\">\n        You must agree before submitting.\n      </CFormFeedback>\n    </CCol>\n    <CCol xs=\"12\" mdxType=\"CCol\">\n      <CButton color=\"primary\" type=\"submit\" mdxType=\"CButton\">Submit form</CButton>\n    </CCol>\n  </CForm>\n    </Playground>\n    <h2 {...{\n      \"id\": \"supported-elements\"\n    }}>{`Supported elements`}</h2>\n    <p>{`Validation styles are available for the following form controls and components:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<CFormControl>`}</inlineCode>{`s`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<CFormSelect>`}</inlineCode>{`s`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<CFormCheck>`}</inlineCode>{`s`}</li>\n    </ul>\n    <Playground __position={3} __code={'<CForm validated={true}>\\n  <div class=\\\"mb-3\\\">\\n    <CFormLabel for=\\\"validationTextarea\\\" class=\\\"form-label\\\">\\n      Textarea\\n    </CFormLabel>\\n    <CFormControl\\n      component=\\\"textarea\\\"\\n      id=\\\"validationTextarea\\\"\\n      placeholder=\\\"Required example textarea\\\"\\n      isInvalid\\n      required\\n    ></CFormControl>\\n    <CFormFeedback invalid>\\n      Please enter a message in the textarea.\\n    </CFormFeedback>\\n  </div>\\n  <CFormCheck\\n    className=\\\"mb-3\\\"\\n    id=\\\"validationFormCheck1\\\"\\n    label=\\\"Check this checkbox\\\"\\n    required\\n  />\\n  <CFormFeedback invalid>Example invalid feedback text</CFormFeedback>\\n\\n  <CFormCheck\\n    type=\\\"radio\\\"\\n    name=\\\"radio-stacked\\\"\\n    id=\\\"validationFormCheck2\\\"\\n    label=\\\"Check this checkbox\\\"\\n    required\\n  />\\n\\n  <CFormCheck\\n    className=\\\"mb-3\\\"\\n    type=\\\"radio\\\"\\n    name=\\\"radio-stacked\\\"\\n    id=\\\"validationFormCheck3\\\"\\n    label=\\\"Or toggle this other radio\\\"\\n    required\\n  />\\n  <CFormFeedback invalid>More example invalid feedback text</CFormFeedback>\\n\\n  <div class=\\\"mb-3\\\">\\n    <CFormSelect required aria-label=\\\"select example\\\">\\n      <option value=\\\"\\\">Open this select menu</option>\\n      <option value=\\\"1\\\">One</option>\\n      <option value=\\\"2\\\">Two</option>\\n      <option value=\\\"3\\\">Three</option>\\n    </CFormSelect>\\n    <CFormFeedback invalid>Example invalid select feedback</CFormFeedback>\\n  </div>\\n\\n  <div class=\\\"mb-3\\\">\\n    <CFormControl\\n      type=\\\"file\\\"\\n      id=\\\"validationTextarea\\\"\\n      aria-label=\\\"file example\\\"\\n      required\\n    />\\n    <CFormFeedback invalid>Example invalid form file feedback</CFormFeedback>\\n  </div>\\n\\n  <div class=\\\"mb-3\\\">\\n    <CButton type=\\\"submit\\\" color=\\\"primary\\\" disabled>\\n      Submit form\\n    </CButton>\\n  </div>\\n</CForm>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CDropdown,\n      CDropdownDivider,\n      CDropdownHeader,\n      CDropdownItem,\n      CDropdownItemPlain,\n      CDropdownMenu,\n      CDropdownToggle,\n      CForm,\n      CFormControl,\n      CFormCheck,\n      CFormFeedback,\n      CFormLabel,\n      CFormSelect,\n      CInputGroup,\n      CInputGroupText,\n      CCol,\n      CRow,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CForm validated={true} mdxType=\"CForm\">\n    <div className=\"mb-3\">\n      <CFormLabel htmlFor=\"validationTextarea\" className=\"form-label\" mdxType=\"CFormLabel\">Textarea</CFormLabel>\n      <CFormControl component=\"textarea\" id=\"validationTextarea\" placeholder=\"Required example textarea\" isInvalid required mdxType=\"CFormControl\"></CFormControl>\n      <CFormFeedback invalid mdxType=\"CFormFeedback\">\n        Please enter a message in the textarea.\n      </CFormFeedback>\n    </div>\n        <CFormCheck className=\"mb-3\" id=\"validationFormCheck1\" label=\"Check this checkbox\" required mdxType=\"CFormCheck\" />\n        <CFormFeedback invalid mdxType=\"CFormFeedback\">Example invalid feedback text</CFormFeedback>\n\n        <CFormCheck type=\"radio\" name=\"radio-stacked\" id=\"validationFormCheck2\" label=\"Check this checkbox\" required mdxType=\"CFormCheck\" />\n\n        <CFormCheck className=\"mb-3\" type=\"radio\" name=\"radio-stacked\" id=\"validationFormCheck3\" label=\"Or toggle this other radio\" required mdxType=\"CFormCheck\" />\n        <CFormFeedback invalid mdxType=\"CFormFeedback\">More example invalid feedback text</CFormFeedback>\n\n        <div className=\"mb-3\">\n  <CFormSelect required aria-label=\"select example\" mdxType=\"CFormSelect\">\n    <option value=\"\">Open this select menu</option>\n    <option value=\"1\">One</option>\n    <option value=\"2\">Two</option>\n    <option value=\"3\">Three</option>\n  </CFormSelect>\n  <CFormFeedback invalid mdxType=\"CFormFeedback\">Example invalid select feedback</CFormFeedback>\n        </div>\n\n        <div className=\"mb-3\">\n  <CFormControl type=\"file\" id=\"validationTextarea\" aria-label=\"file example\" required mdxType=\"CFormControl\" />\n  <CFormFeedback invalid mdxType=\"CFormFeedback\">Example invalid form file feedback</CFormFeedback>\n        </div>\n\n        <div className=\"mb-3\">\n  <CButton type=\"submit\" color=\"primary\" disabled mdxType=\"CButton\">Submit form</CButton>\n        </div>\n  </CForm>\n    </Playground>\n    <h2 {...{\n      \"id\": \"tooltips\"\n    }}>{`Tooltips`}</h2>\n    <p>{`If your form layout allows it, you can swap the text for the tooltip to display validation feedback in a styled tooltip. Be sure to have a parent with `}<inlineCode parentName=\"p\">{`position: relative`}</inlineCode>{` on it for tooltip positioning. In the example below, our column classes have this already, but your project may require an alternative setup.`}</p>\n    <Playground __position={4} __code={'() => {\\n  const [validated, setValidated] = useState(false)\\n  const handleSubmit = event => {\\n    const form = event.currentTarget\\n    if (form.checkValidity() === false) {\\n      event.preventDefault()\\n      event.stopPropagation()\\n    }\\n    setValidated(true)\\n  }\\n  return (\\n    <CForm\\n      className=\\\"row g-3 needs-validation\\\"\\n      noValidate\\n      validated={validated}\\n      onSubmit={handleSubmit}\\n    >\\n      <CCol md=\\\"4\\\" className=\\\"position-relative\\\">\\n        <CFormLabel htmlFor=\\\"validationTooltip01\\\">Email</CFormLabel>\\n        <CFormControl\\n          type=\\\"text\\\"\\n          id=\\\"validationTooltip01\\\"\\n          value=\\\"Mark\\\"\\n          required\\n        />\\n        <CFormFeedback tooltip valid>\\n          Looks good!\\n        </CFormFeedback>\\n      </CCol>\\n      <CCol md=\\\"4\\\" className=\\\"position-relative\\\">\\n        <CFormLabel htmlFor=\\\"validationTooltip02\\\">Email</CFormLabel>\\n        <CFormControl\\n          type=\\\"text\\\"\\n          id=\\\"validationTooltip02\\\"\\n          value=\\\"Otto\\\"\\n          required\\n        />\\n        <CFormFeedback tooltip valid>\\n          Looks good!\\n        </CFormFeedback>\\n      </CCol>\\n      <CCol md=\\\"4\\\" className=\\\"position-relative\\\">\\n        <CFormLabel htmlFor=\\\"validationTooltipUsername\\\">Username</CFormLabel>\\n        <CInputGroup className=\\\"has-validation\\\">\\n          <CInputGroupText id=\\\"inputGroupPrepend\\\">@</CInputGroupText>\\n          <CFormControl\\n            type=\\\"text\\\"\\n            id=\\\"validationTooltipUsername\\\"\\n            value=\\\"\\\"\\n            aria-describedby=\\\"inputGroupPrepend\\\"\\n            required\\n          />\\n          <CFormFeedback tooltip invalid>\\n            Please choose a username.\\n          </CFormFeedback>\\n        </CInputGroup>\\n      </CCol>\\n      <CCol md=\\\"6\\\" className=\\\"position-relative\\\">\\n        <CFormLabel htmlFor=\\\"validationTooltip03\\\">City</CFormLabel>\\n        <CFormControl type=\\\"text\\\" id=\\\"validationTooltip03\\\" required />\\n        <CFormFeedback tooltip invalid>\\n          Please provide a valid city.\\n        </CFormFeedback>\\n      </CCol>\\n      <CCol md=\\\"3\\\" className=\\\"position-relative\\\">\\n        <CFormLabel htmlFor=\\\"validationTooltip04\\\">City</CFormLabel>\\n        <CFormSelect id=\\\"validationTooltip04\\\" required>\\n          <option selected disabled value=\\\"\\\">\\n            Choose...\\n          </option>\\n          <option>...</option>\\n        </CFormSelect>\\n        <CFormFeedback tooltip invalid>\\n          Please provide a valid city.\\n        </CFormFeedback>\\n      </CCol>\\n      <CCol md=\\\"3\\\" className=\\\"position-relative\\\">\\n        <CFormLabel htmlFor=\\\"validationTooltip05\\\">City</CFormLabel>\\n        <CFormControl type=\\\"text\\\" id=\\\"validationTooltip05\\\" required />\\n        <CFormFeedback tooltip invalid>\\n          Please provide a valid zip.\\n        </CFormFeedback>\\n      </CCol>\\n      <CCol xs=\\\"12\\\" className=\\\"position-relative\\\">\\n        <CButton color=\\\"primary\\\" type=\\\"submit\\\">\\n          Submit form\\n        </CButton>\\n      </CCol>\\n    </CForm>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CDropdown,\n      CDropdownDivider,\n      CDropdownHeader,\n      CDropdownItem,\n      CDropdownItemPlain,\n      CDropdownMenu,\n      CDropdownToggle,\n      CForm,\n      CFormControl,\n      CFormCheck,\n      CFormFeedback,\n      CFormLabel,\n      CFormSelect,\n      CInputGroup,\n      CInputGroupText,\n      CCol,\n      CRow,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [validated, setValidated] = useState(false);\n\n        const handleSubmit = event => {\n          const form = event.currentTarget;\n\n          if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n\n          setValidated(true);\n        };\n\n        return <CForm className=\"row g-3 needs-validation\" noValidate validated={validated} onSubmit={handleSubmit} mdxType=\"CForm\">\n        <CCol md=\"4\" className=\"position-relative\" mdxType=\"CCol\">\n          <CFormLabel htmlFor=\"validationTooltip01\" mdxType=\"CFormLabel\">Email</CFormLabel>\n          <CFormControl type=\"text\" id=\"validationTooltip01\" value=\"Mark\" required mdxType=\"CFormControl\" />\n          <CFormFeedback tooltip valid mdxType=\"CFormFeedback\">\n            Looks good!\n          </CFormFeedback>\n        </CCol>\n        <CCol md=\"4\" className=\"position-relative\" mdxType=\"CCol\">\n          <CFormLabel htmlFor=\"validationTooltip02\" mdxType=\"CFormLabel\">Email</CFormLabel>\n          <CFormControl type=\"text\" id=\"validationTooltip02\" value=\"Otto\" required mdxType=\"CFormControl\" />\n          <CFormFeedback tooltip valid mdxType=\"CFormFeedback\">\n            Looks good!\n          </CFormFeedback>\n        </CCol>\n        <CCol md=\"4\" className=\"position-relative\" mdxType=\"CCol\">\n          <CFormLabel htmlFor=\"validationTooltipUsername\" mdxType=\"CFormLabel\">Username</CFormLabel>\n          <CInputGroup className=\"has-validation\" mdxType=\"CInputGroup\">\n            <CInputGroupText id=\"inputGroupPrepend\" mdxType=\"CInputGroupText\">@</CInputGroupText>\n            <CFormControl type=\"text\" id=\"validationTooltipUsername\" value=\"\" aria-describedby=\"inputGroupPrepend\" required mdxType=\"CFormControl\" />\n            <CFormFeedback tooltip invalid mdxType=\"CFormFeedback\">\n            Please choose a username.\n            </CFormFeedback>\n          </CInputGroup>\n        </CCol>\n        <CCol md=\"6\" className=\"position-relative\" mdxType=\"CCol\">\n          <CFormLabel htmlFor=\"validationTooltip03\" mdxType=\"CFormLabel\">City</CFormLabel>\n          <CFormControl type=\"text\" id=\"validationTooltip03\" required mdxType=\"CFormControl\" />\n          <CFormFeedback tooltip invalid mdxType=\"CFormFeedback\">\n            Please provide a valid city.\n          </CFormFeedback>\n        </CCol>\n        <CCol md=\"3\" className=\"position-relative\" mdxType=\"CCol\">\n          <CFormLabel htmlFor=\"validationTooltip04\" mdxType=\"CFormLabel\">City</CFormLabel>\n          <CFormSelect id=\"validationTooltip04\" required mdxType=\"CFormSelect\">\n            <option selected disabled value=\"\">Choose...</option>\n            <option>...</option>\n          </CFormSelect>\n          <CFormFeedback tooltip invalid mdxType=\"CFormFeedback\">\n            Please provide a valid city.\n          </CFormFeedback>\n        </CCol>\n        <CCol md=\"3\" className=\"position-relative\" mdxType=\"CCol\">\n          <CFormLabel htmlFor=\"validationTooltip05\" mdxType=\"CFormLabel\">City</CFormLabel>\n          <CFormControl type=\"text\" id=\"validationTooltip05\" required mdxType=\"CFormControl\" />\n          <CFormFeedback tooltip invalid mdxType=\"CFormFeedback\">\n            Please provide a valid zip.\n          </CFormFeedback>\n        </CCol>\n        <CCol xs=\"12\" className=\"position-relative\" mdxType=\"CCol\">\n          <CButton color=\"primary\" type=\"submit\" mdxType=\"CButton\">Submit form</CButton>\n        </CCol>\n      </CForm>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}