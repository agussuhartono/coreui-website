{"version":3,"sources":["webpack:///../docs/layout/containers.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","className","scope","__position","__code","__scope","Playground","Props","CCol","CContainer","CRow","sm","md","lg","xl","xxl","fluid","of","isMDXComponent"],"mappings":"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","file":"component---docs-layout-containers-mdx-9585b804ec5734331357.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukaszholeczek/CoreUI/@coreui/react/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { CCol } from '../../src/components/grid/CCol.tsx';\nimport { CContainer } from '../../src/components/grid/CContainer.tsx';\nimport { CRow } from '../../src/components/grid/CRow.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h2 {...{\n      \"id\": \"how-they-work\"\n    }}>{`How they work`}</h2>\n    <p>{`Containers are the most basic layout element in CoreUI for React.js and are `}<strong parentName=\"p\">{`required when using our default grid system`}</strong>{`. Containers are used to contain, pad, and (sometimes) center the content within them. While containers `}<em parentName=\"p\">{`can`}</em>{` be nested, most layouts do not require a nested container.`}</p>\n    <p>{`CoreUI for React.js comes with three different containers:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<CContainer>`}</inlineCode>{`, which sets a `}<inlineCode parentName=\"li\">{`max-width`}</inlineCode>{` at each responsive breakpoint`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<CContainer fluid>`}</inlineCode>{`, which is `}<inlineCode parentName=\"li\">{`width: 100%`}</inlineCode>{` at all breakpoints`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<CContainer {sm|md|lg|xl|xxl}>`}</inlineCode>{`, which is `}<inlineCode parentName=\"li\">{`width: 100%`}</inlineCode>{` until the specified breakpoint`}</li>\n    </ul>\n    <p>{`The table below illustrates how each container's `}<inlineCode parentName=\"p\">{`max-width`}</inlineCode>{` compares to the original `}<inlineCode parentName=\"p\">{`<CContainer>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<CContainer fluid>`}</inlineCode>{` across each breakpoint.`}</p>\n    <table className=\"table\">\n  <thead>\n    <tr>\n      <td className=\"border-dark\"></td>\n      <th scope=\"col\">\n        Extra small<br />\n        <span className=\"fw-normal\">&lt;576px</span>\n      </th>\n      <th scope=\"col\">\n        Small<br />\n        <span className=\"fw-normal\">&ge;576px</span>\n      </th>\n      <th scope=\"col\">\n        Medium<br />\n        <span className=\"fw-normal\">&ge;768px</span>\n      </th>\n      <th scope=\"col\">\n        Large<br />\n        <span className=\"fw-normal\">&ge;992px</span>\n      </th>\n      <th scope=\"col\">\n        X-Large<br />\n        <span className=\"fw-normal\">&ge;1200px</span>\n      </th>\n      <th scope=\"col\">\n        XX-Large<br />\n        <span className=\"fw-normal\">&ge;1400px</span>\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th scope=\"row\" className=\"fw-normal\"><code>&lt;CContainer&gt;</code></th>\n      <td className=\"text-muted\">100%</td>\n      <td>540px</td>\n      <td>720px</td>\n      <td>960px</td>\n      <td>1140px</td>\n      <td>1320px</td>\n    </tr>\n    <tr>\n      <th scope=\"row\" className=\"fw-normal\"><code>&lt;CContainer sm&gt;</code></th>\n      <td className=\"text-muted\">100%</td>\n      <td>540px</td>\n      <td>720px</td>\n      <td>960px</td>\n      <td>1140px</td>\n      <td>1320px</td>\n    </tr>\n    <tr>\n      <th scope=\"row\" className=\"fw-normal\"><code>&lt;CContainer md&gt;</code></th>\n      <td className=\"text-muted\">100%</td>\n      <td className=\"text-muted\">100%</td>\n      <td>720px</td>\n      <td>960px</td>\n      <td>1140px</td>\n      <td>1320px</td>\n    </tr>\n    <tr>\n      <th scope=\"row\" className=\"fw-normal\"><code>&lt;CContainer lg&gt;</code></th>\n      <td className=\"text-muted\">100%</td>\n      <td className=\"text-muted\">100%</td>\n      <td className=\"text-muted\">100%</td>\n      <td>960px</td>\n      <td>1140px</td>\n      <td>1320px</td>\n    </tr>\n    <tr>\n      <th scope=\"row\" className=\"fw-normal\"><code>&lt;CContainer xl&gt;</code></th>\n      <td className=\"text-muted\">100%</td>\n      <td className=\"text-muted\">100%</td>\n      <td className=\"text-muted\">100%</td>\n      <td className=\"text-muted\">100%</td>\n      <td>1140px</td>\n      <td>1320px</td>\n    </tr>\n    <tr>\n      <th scope=\"row\" className=\"fw-normal\"><code>&lt;CContainer xxl&gt;</code></th>\n      <td className=\"text-muted\">100%</td>\n      <td className=\"text-muted\">100%</td>\n      <td className=\"text-muted\">100%</td>\n      <td className=\"text-muted\">100%</td>\n      <td className=\"text-muted\">100%</td>\n      <td>1320px</td>\n    </tr>\n    <tr>\n      <th scope=\"row\" className=\"fw-normal\"><code>&lt;CContainer fluid&gt;</code></th>\n      <td className=\"text-muted\">100%</td>\n      <td className=\"text-muted\">100%</td>\n      <td className=\"text-muted\">100%</td>\n      <td className=\"text-muted\">100%</td>\n      <td className=\"text-muted\">100%</td>\n      <td className=\"text-muted\">100%</td>\n    </tr>\n  </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"default-container\"\n    }}>{`Default container`}</h2>\n    <p>{`Our default `}<inlineCode parentName=\"p\">{`<CContainer>`}</inlineCode>{` class is a responsive, fixed-width container, meaning its `}<inlineCode parentName=\"p\">{`max-width`}</inlineCode>{` changes at each breakpoint.`}</p>\n    <Playground __position={1} __code={'<CContainer>Content here</CContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCol,\n      CContainer,\n      CRow,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CContainer mdxType=\"CContainer\">\n    Content here\n  </CContainer>\n    </Playground>\n    <h2 {...{\n      \"id\": \"responsive-containers\"\n    }}>{`Responsive containers`}</h2>\n    <p>{`Responsive containers allow you to specify a class that is 100% wide until the specified breakpoint is reached, after which we apply `}<inlineCode parentName=\"p\">{`max-width`}</inlineCode>{`s for each of the higher breakpoints. For example, `}<inlineCode parentName=\"p\">{`<CContainer sm>`}</inlineCode>{` is 100% wide to start until the `}<inlineCode parentName=\"p\">{`sm`}</inlineCode>{` breakpoint is reached, where it will scale up with `}<inlineCode parentName=\"p\">{`md`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`lg`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`xl`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`xxl`}</inlineCode>{`.`}</p>\n    <Playground __position={2} __code={'<CContainer sm>100% wide until small breakpoint</CContainer>\\n<CContainer md>100% wide until medium breakpoint</CContainer>\\n<CContainer lg>100% wide until large breakpoint</CContainer>\\n<CContainer xl>100% wide until extra large breakpoint</CContainer>\\n<CContainer xxl>100% wide until extra extra large breakpoint</CContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCol,\n      CContainer,\n      CRow,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CContainer sm mdxType=\"CContainer\">100% wide until small breakpoint</CContainer>\n  <CContainer md mdxType=\"CContainer\">100% wide until medium breakpoint</CContainer>\n  <CContainer lg mdxType=\"CContainer\">100% wide until large breakpoint</CContainer>\n  <CContainer xl mdxType=\"CContainer\">100% wide until extra large breakpoint</CContainer>\n  <CContainer xxl mdxType=\"CContainer\">100% wide until extra extra large breakpoint</CContainer>\n    </Playground>\n    <h2 {...{\n      \"id\": \"fluid-containers\"\n    }}>{`Fluid containers`}</h2>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`<CContainer fluid>`}</inlineCode>{` for a full width container, spanning the entire width of the viewport.`}</p>\n    <Playground __position={3} __code={'<CContainer fluid>Content here</CContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCol,\n      CContainer,\n      CRow,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CContainer fluid mdxType=\"CContainer\">\n    Content here\n  </CContainer>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <h3 {...{\n      \"id\": \"ccontainer\"\n    }}>{`CContainer`}</h3>\n    <Props of={CContainer} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}