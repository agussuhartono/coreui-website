(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{"0WOu":function(e,o,t){"use strict";t.r(o),t.d(o,"_frontmatter",(function(){return u})),t.d(o,"default",(function(){return f}));var a=t("Fcif"),n=t("+I+c"),l=(t("mXGw"),t("/FXl")),r=t("BIGe"),m=t("ZFoC"),i=t("758a"),p=t("J7hk"),b=t("nOSA"),c=t("9N4/"),C=t("iV8I"),d=t("5ZcB"),s=t("CEMk"),F=t("13Mt"),u=(t("aD51"),{});void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/form/CFormFloating.mdx"}});var g={_frontmatter:u},O=r.a;function f(e){var o,t,f,h,y,j,x=e.components,T=Object(n.a)(e,["components"]);return Object(l.b)(O,Object(a.a)({},g,T,{components:x,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"example"},"Example"),Object(l.b)("p",null,"Wrap a pair of ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormControl>")," and ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormLabel>")," elements in ",Object(l.b)("inlineCode",{parentName:"p"},"CFormFloating")," to enable floating labels with textual form fields. A ",Object(l.b)("inlineCode",{parentName:"p"},"placeholder")," is required on each ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormControl>")," as our method of CSS-only floating labels uses the ",Object(l.b)("inlineCode",{parentName:"p"},":placeholder-shown")," pseudo-element. Also note that the ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormControl>")," must come first so we can utilize a sibling selector (e.g., ",Object(l.b)("inlineCode",{parentName:"p"},"~"),")."),Object(l.b)(m.c,{__position:0,__code:'<CFormFloating className="mb-3">\n  <CFormControl\n    type="email"\n    id="floatingInput"\n    placeholder="name@example.com"\n  />\n  <CFormLabel htmlFor="floatingInput">Email address</CFormLabel>\n</CFormFloating>\n<CFormFloating>\n  <CFormControl\n    type="password"\n    id="floatingPassword"\n    placeholder="Password"\n  />\n  <CFormLabel htmlFor="exampleFormControlTextarea1">Password</CFormLabel>\n</CFormFloating>',__scope:(o={props:T,DefaultLayout:r.a,Playground:m.c,Props:m.d,CButton:i.a,CForm:p.a,CFormControl:b.a,CFormFloating:c.a,CFormLabel:C.a,CFormSelect:d.a,CCol:s.a,CRow:F.a},o.DefaultLayout=r.a,o._frontmatter=u,o),mdxType:"Playground"},Object(l.b)(c.a,{className:"mb-3",mdxType:"CFormFloating"},Object(l.b)(b.a,{type:"email",id:"floatingInput",placeholder:"name@example.com",mdxType:"CFormControl"}),Object(l.b)(C.a,{htmlFor:"floatingInput",mdxType:"CFormLabel"},"Email address")),Object(l.b)(c.a,{mdxType:"CFormFloating"},Object(l.b)(b.a,{type:"password",id:"floatingPassword",placeholder:"Password",mdxType:"CFormControl"}),Object(l.b)(C.a,{htmlFor:"exampleFormControlTextarea1",mdxType:"CFormLabel"},"Password"))),Object(l.b)("p",null,"When there's a ",Object(l.b)("inlineCode",{parentName:"p"},"value")," already defined, ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormLabel>"),"s will automatically adjust to their floated position."),Object(l.b)(m.c,{__position:1,__code:'<CFormFloating>\n  <CFormControl\n    type="email"\n    id="floatingInputValue"\n    placeholder="name@example.com"\n    value="test@example.com"\n  />\n  <CFormLabel htmlFor="floatingInputValue">Input with value</CFormLabel>\n</CFormFloating>',__scope:(t={props:T,DefaultLayout:r.a,Playground:m.c,Props:m.d,CButton:i.a,CForm:p.a,CFormControl:b.a,CFormFloating:c.a,CFormLabel:C.a,CFormSelect:d.a,CCol:s.a,CRow:F.a},t.DefaultLayout=r.a,t._frontmatter=u,t),mdxType:"Playground"},Object(l.b)(c.a,{mdxType:"CFormFloating"},Object(l.b)(b.a,{type:"email",id:"floatingInputValue",placeholder:"name@example.com",value:"test@example.com",mdxType:"CFormControl"}),Object(l.b)(C.a,{htmlFor:"floatingInputValue",mdxType:"CFormLabel"},"Input with value"))),Object(l.b)("h2",{id:"textareas"},"Textareas"),Object(l.b)("p",null,"By default, ",Object(l.b)("inlineCode",{parentName:"p"},'<CFormControl component="textarea">'),"s will be the same height as ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormControl>"),"s."),Object(l.b)(m.c,{__position:2,__code:'<CFormFloating>\n  <CFormControl\n    component="textarea"\n    id="floatingTextarea"\n    placeholder="Leave a comment here"\n  ></CFormControl>\n  <CFormLabel for="floatingTextarea">Comments</CFormLabel>\n</CFormFloating>',__scope:(f={props:T,DefaultLayout:r.a,Playground:m.c,Props:m.d,CButton:i.a,CForm:p.a,CFormControl:b.a,CFormFloating:c.a,CFormLabel:C.a,CFormSelect:d.a,CCol:s.a,CRow:F.a},f.DefaultLayout=r.a,f._frontmatter=u,f),mdxType:"Playground"},Object(l.b)(c.a,{mdxType:"CFormFloating"},Object(l.b)(b.a,{component:"textarea",id:"floatingTextarea",placeholder:"Leave a comment here",mdxType:"CFormControl"}),Object(l.b)(C.a,{htmlFor:"floatingTextarea",mdxType:"CFormLabel"},"Comments"))),Object(l.b)("p",null,"To set a custom height on your ",Object(l.b)("inlineCode",{parentName:"p"},'<CFormControl component="textarea">'),", do not use the ",Object(l.b)("inlineCode",{parentName:"p"},"rows")," attribute. Instead, set an explicit ",Object(l.b)("inlineCode",{parentName:"p"},"height")," (either inline or via custom CSS)."),Object(l.b)(m.c,{__position:3,__code:'<CFormFloating>\n  <CFormControl\n    component="textarea"\n    placeholder="Leave a comment here"\n    id="floatingTextarea2"\n    style={{ height: \'100px\' }}\n  ></CFormControl>\n  <CFormLabel for="floatingTextarea2">Comments</CFormLabel>\n</CFormFloating>',__scope:(h={props:T,DefaultLayout:r.a,Playground:m.c,Props:m.d,CButton:i.a,CForm:p.a,CFormControl:b.a,CFormFloating:c.a,CFormLabel:C.a,CFormSelect:d.a,CCol:s.a,CRow:F.a},h.DefaultLayout=r.a,h._frontmatter=u,h),mdxType:"Playground"},Object(l.b)(c.a,{mdxType:"CFormFloating"},Object(l.b)(b.a,{component:"textarea",placeholder:"Leave a comment here",id:"floatingTextarea2",style:{height:"100px"},mdxType:"CFormControl"}),Object(l.b)(C.a,{htmlFor:"floatingTextarea2",mdxType:"CFormLabel"},"Comments"))),Object(l.b)("h2",{id:"selects"},"Selects"),Object(l.b)("p",null,"Other than ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormControl>"),", floating labels are only available on ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormSelect>"),"s. They work in the same way, but unlike ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormControl>"),"s, they'll always show the ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormLabel>")," in its floated state. ",Object(l.b)("strong",{parentName:"p"},"Selects with ",Object(l.b)("inlineCode",{parentName:"strong"},"size")," and ",Object(l.b)("inlineCode",{parentName:"strong"},"multiple")," are not supported.")),Object(l.b)(m.c,{__position:4,__code:'<CFormFloating>\n  <CFormSelect id="floatingSelect" aria-label="Floating label select example">\n    <option selected>Open this select menu</option>\n    <option value="1">One</option>\n    <option value="2">Two</option>\n    <option value="3">Three</option>\n  </CFormSelect>\n  <CFormLabel for="floatingSelect">Works with selects</CFormLabel>\n</CFormFloating>',__scope:(y={props:T,DefaultLayout:r.a,Playground:m.c,Props:m.d,CButton:i.a,CForm:p.a,CFormControl:b.a,CFormFloating:c.a,CFormLabel:C.a,CFormSelect:d.a,CCol:s.a,CRow:F.a},y.DefaultLayout=r.a,y._frontmatter=u,y),mdxType:"Playground"},Object(l.b)(c.a,{mdxType:"CFormFloating"},Object(l.b)(d.a,{id:"floatingSelect","aria-label":"Floating label select example",mdxType:"CFormSelect"},Object(l.b)("option",{selected:!0},"Open this select menu"),Object(l.b)("option",{value:"1"},"One"),Object(l.b)("option",{value:"2"},"Two"),Object(l.b)("option",{value:"3"},"Three")),Object(l.b)(C.a,{htmlFor:"floatingSelect",mdxType:"CFormLabel"},"Works with selects"))),Object(l.b)("h2",{id:"layout"},"Layout"),Object(l.b)("p",null,"When working with the CoreUI for Bootstrap grid system, be sure to place form elements within column classes."),Object(l.b)(m.c,{__position:5,__code:'<CRow xs={{ gutter: 2 }}>\n  <CCol md>\n    <CFormFloating>\n      <CFormControl\n        type="email"\n        id="floatingInputGrid"\n        placeholder="name@example.com"\n        value="email@example.com"\n      />\n      <CFormLabel for="floatingInputGrid">Email address</CFormLabel>\n    </CFormFloating>\n  </CCol>\n  <CCol md>\n    <CFormFloating>\n      <CFormSelect\n        id="floatingSelectGrid"\n        aria-label="Floating label select example"\n      >\n        <option selected>Open this select menu</option>\n        <option value="1">One</option>\n        <option value="2">Two</option>\n        <option value="3">Three</option>\n      </CFormSelect>\n      <CFormLabel for="floatingSelectGrid">Works with selects</CFormLabel>\n    </CFormFloating>\n  </CCol>\n</CRow>',__scope:(j={props:T,DefaultLayout:r.a,Playground:m.c,Props:m.d,CButton:i.a,CForm:p.a,CFormControl:b.a,CFormFloating:c.a,CFormLabel:C.a,CFormSelect:d.a,CCol:s.a,CRow:F.a},j.DefaultLayout=r.a,j._frontmatter=u,j),mdxType:"Playground"},Object(l.b)(F.a,{xs:{gutter:2},mdxType:"CRow"},Object(l.b)(s.a,{md:!0,mdxType:"CCol"},Object(l.b)(c.a,{mdxType:"CFormFloating"},Object(l.b)(b.a,{type:"email",id:"floatingInputGrid",placeholder:"name@example.com",value:"email@example.com",mdxType:"CFormControl"}),Object(l.b)(C.a,{htmlFor:"floatingInputGrid",mdxType:"CFormLabel"},"Email address"))),Object(l.b)(s.a,{md:!0,mdxType:"CCol"},Object(l.b)(c.a,{mdxType:"CFormFloating"},Object(l.b)(d.a,{id:"floatingSelectGrid","aria-label":"Floating label select example",mdxType:"CFormSelect"},Object(l.b)("option",{selected:!0},"Open this select menu"),Object(l.b)("option",{value:"1"},"One"),Object(l.b)("option",{value:"2"},"Two"),Object(l.b)("option",{value:"3"},"Three")),Object(l.b)(C.a,{htmlFor:"floatingSelectGrid",mdxType:"CFormLabel"},"Works with selects"))))),Object(l.b)("h2",{id:"api"},"API"),Object(l.b)("h3",{id:"cformfloating"},"CFormFloating"),Object(l.b)(m.d,{of:c.a,mdxType:"Props"}))}void 0!==f&&f&&f===Object(f)&&Object.isExtensible(f)&&!f.hasOwnProperty("__filemeta")&&Object.defineProperty(f,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/form/CFormFloating.mdx"}}),f.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-form-c-form-floating-mdx-e4e8ee38aa28ba672005.js.map