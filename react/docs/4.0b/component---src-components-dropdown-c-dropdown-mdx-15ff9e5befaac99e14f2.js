(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{uht1:function(o,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return I})),n.d(e,"default",(function(){return x}));var r=n("Fcif"),t=n("+I+c"),d=n("mXGw"),a=n("/FXl"),p=n("BIGe"),m=n("ZFoC"),C=n("/12F"),i=n("758a"),b=n("UULX"),l=n("N9pd"),c=n("GxEI"),D=n("vXFi"),w=n("CnsJ"),u=n("VFdZ"),s=n("61AP"),h=n("kVip"),y=n("J7hk"),g=n("4SRt"),O=n("nOSA"),j=n("iV8I"),I=(n("aD51"),{});void 0!==I&&I&&I===Object(I)&&Object.isExtensible(I)&&!I.hasOwnProperty("__filemeta")&&Object.defineProperty(I,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/dropdown/CDropdown.mdx"}});var f={_frontmatter:I},T=p.a;function x(o){var e,n,x,v,_,F,P,k,A,S,M,N,L,B,H,G,z,R,E,X,J,q,U=o.components,V=Object(t.a)(o,["components"]);return Object(a.b)(T,Object(r.a)({},f,V,{components:U,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"overview"},"Overview"),Object(a.b)("p",null,"Dropdowns are toggleable, contextual overlays for displaying lists of links and more."),Object(a.b)("p",null,"Dropdowns are built on a third party library, ",Object(a.b)("a",{parentName:"p",href:"https://popper.js.org/"},"Popper.js"),", which provides dynamic positioning and viewport detection. Popper.js isn't used to position dropdowns in navbars though as dynamic positioning isn't required."),Object(a.b)("h2",{id:"examples"},"Examples"),Object(a.b)("p",null,"Bind the dropdown's toggle and the dropdown menu inside ",Object(a.b)("inlineCode",{parentName:"p"},"<CDropdown>"),", or different element that declares ",Object(a.b)("inlineCode",{parentName:"p"},"position: relative;"),". Dropdowns can be triggered from ",Object(a.b)("inlineCode",{parentName:"p"},"<a>")," or ",Object(a.b)("inlineCode",{parentName:"p"},"<button>")," elements to better fit your possible requirements."),Object(a.b)("h3",{id:"single-button"},"Single button"),Object(a.b)("p",null,"Here's how you can put them to work with either ",Object(a.b)("inlineCode",{parentName:"p"},"<button>")," elements:"),Object(a.b)(m.c,{__position:0,__code:'<CDropdown>\n  <CDropdownToggle color="secondary">Dropdown button</CDropdownToggle>\n  <CDropdownMenu>\n    <CDropdownItem href="#">Action</CDropdownItem>\n    <CDropdownItem href="#">Another action</CDropdownItem>\n    <CDropdownItem href="#">Something else here</CDropdownItem>\n  </CDropdownMenu>\n</CDropdown>',__scope:(e={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},e.DefaultLayout=p.a,e._frontmatter=I,e),mdxType:"Playground"},Object(a.b)(l.a,{mdxType:"CDropdown"},Object(a.b)(h.a,{color:"secondary",mdxType:"CDropdownToggle"},"Dropdown button"),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here")))),Object(a.b)("p",null,"And with ",Object(a.b)("inlineCode",{parentName:"p"},"<a>")," elements:"),Object(a.b)(m.c,{__position:1,__code:'<CDropdown>\n  <CDropdownToggle href="#" color="secondary">\n    Dropdown button\n  </CDropdownToggle>\n  <CDropdownMenu>\n    <CDropdownItem href="#">Action</CDropdownItem>\n    <CDropdownItem href="#">Another action</CDropdownItem>\n    <CDropdownItem href="#">Something else here</CDropdownItem>\n  </CDropdownMenu>\n</CDropdown>',__scope:(n={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},n.DefaultLayout=p.a,n._frontmatter=I,n),mdxType:"Playground"},Object(a.b)(l.a,{mdxType:"CDropdown"},Object(a.b)(h.a,{href:"#",color:"secondary",mdxType:"CDropdownToggle"},"Dropdown button"),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here")))),Object(a.b)("p",null,"The best part is you can do this with any button variant, too:"),Object(a.b)(m.c,{__position:2,__code:"<>\n  {['primary', 'secondary', 'success', 'info', 'warning', 'danger'].map(\n    (color, index) => (\n      <CDropdown variant=\"btn-group\" key={index}>\n        <CDropdownToggle color={color}>{color}</CDropdownToggle>\n        <CDropdownMenu>\n          <CDropdownItem href=\"#\">Action</CDropdownItem>\n          <CDropdownItem href=\"#\">Another action</CDropdownItem>\n          <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n          <CDropdownDivider />\n          <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n        </CDropdownMenu>\n      </CDropdown>\n    ),\n  )}\n</>",__scope:(x={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},x.DefaultLayout=p.a,x._frontmatter=I,x),mdxType:"Playground"},Object(a.b)(d.Fragment,null,["primary","secondary","success","info","warning","danger"].map((function(o,e){return Object(a.b)(l.a,{variant:"btn-group",key:e,mdxType:"CDropdown"},Object(a.b)(h.a,{color:o,mdxType:"CDropdownToggle"},o),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Separated link")))})))),Object(a.b)("h3",{id:"split-button"},"Split button"),Object(a.b)("p",null,"Similarly, create split button dropdowns with virtually the same markup as single button dropdowns, but with the addition of boolean prop ",Object(a.b)("inlineCode",{parentName:"p"},"split")," for proper spacing around the dropdown caret."),Object(a.b)("p",null,"We use this extra class to reduce the horizontal ",Object(a.b)("inlineCode",{parentName:"p"},"padding")," on either side of the caret by 25% and remove the ",Object(a.b)("inlineCode",{parentName:"p"},"margin-left")," that's attached for normal button dropdowns. Those additional changes hold the caret centered in the split button and implement a more properly sized hit area next to the main button."),Object(a.b)(m.c,{__position:3,__code:"<>\n  {['primary', 'secondary', 'success', 'info', 'warning', 'danger'].map(\n    (color, index) => (\n      <CDropdown variant=\"btn-group\" key={index}>\n        <CButton color={color}>{color}</CButton>\n        <CDropdownToggle color={color} split />\n        <CDropdownMenu>\n          <CDropdownItem href=\"#\">Action</CDropdownItem>\n          <CDropdownItem href=\"#\">Another action</CDropdownItem>\n          <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n          <CDropdownDivider />\n          <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n        </CDropdownMenu>\n      </CDropdown>\n    ),\n  )}\n</>",__scope:(v={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},v.DefaultLayout=p.a,v._frontmatter=I,v),mdxType:"Playground"},Object(a.b)(d.Fragment,null,["primary","secondary","success","info","warning","danger"].map((function(o,e){return Object(a.b)(l.a,{variant:"btn-group",key:e,mdxType:"CDropdown"},Object(a.b)(i.a,{color:o,mdxType:"CButton"},o),Object(a.b)(h.a,{color:o,split:!0,mdxType:"CDropdownToggle"}),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Separated link")))})))),Object(a.b)("h2",{id:"sizing"},"Sizing"),Object(a.b)("p",null,"Button dropdowns work with buttons of all sizes, including default and split dropdown buttons."),Object(a.b)(m.c,{__position:4,__code:'<CDropdown variant="btn-group">\n  <CDropdownToggle color="secondary" size="lg">\n    Large button\n  </CDropdownToggle>\n  <CDropdownMenu>\n    <CDropdownItem href="#">Action</CDropdownItem>\n    <CDropdownItem href="#">Another action</CDropdownItem>\n    <CDropdownItem href="#">Something else here</CDropdownItem>\n    <CDropdownDivider />\n    <CDropdownItem href="#">Separated link</CDropdownItem>\n  </CDropdownMenu>\n</CDropdown>\n<CDropdown variant="btn-group">\n  <CButton color="secondary" size="lg">\n    Large split button\n  </CButton>\n  <CDropdownToggle color="secondary" size="lg" split />\n  <CDropdownMenu>\n    <CDropdownItem href="#">Action</CDropdownItem>\n    <CDropdownItem href="#">Another action</CDropdownItem>\n    <CDropdownItem href="#">Something else here</CDropdownItem>\n    <CDropdownDivider />\n    <CDropdownItem href="#">Separated link</CDropdownItem>\n  </CDropdownMenu>\n</CDropdown>',__scope:(_={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},_.DefaultLayout=p.a,_._frontmatter=I,_),mdxType:"Playground"},Object(a.b)(l.a,{variant:"btn-group",mdxType:"CDropdown"},Object(a.b)(h.a,{color:"secondary",size:"lg",mdxType:"CDropdownToggle"},"Large button"),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Separated link"))),Object(a.b)(l.a,{variant:"btn-group",mdxType:"CDropdown"},Object(a.b)(i.a,{color:"secondary",size:"lg",mdxType:"CButton"},"Large split button"),Object(a.b)(h.a,{color:"secondary",size:"lg",split:!0,mdxType:"CDropdownToggle"}),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Separated link")))),Object(a.b)(m.c,{__position:5,__code:'<CDropdown variant="btn-group">\n  <CDropdownToggle color="secondary" size="sm">\n    Small button\n  </CDropdownToggle>\n  <CDropdownMenu>\n    <CDropdownItem href="#">Action</CDropdownItem>\n    <CDropdownItem href="#">Another action</CDropdownItem>\n    <CDropdownItem href="#">Something else here</CDropdownItem>\n    <CDropdownDivider />\n    <CDropdownItem href="#">Separated link</CDropdownItem>\n  </CDropdownMenu>\n</CDropdown>\n<CDropdown variant="btn-group">\n  <CButton color="secondary" size="sm">\n    Small split button\n  </CButton>\n  <CDropdownToggle color="secondary" size="sm" split />\n  <CDropdownMenu>\n    <CDropdownItem href="#">Action</CDropdownItem>\n    <CDropdownItem href="#">Another action</CDropdownItem>\n    <CDropdownItem href="#">Something else here</CDropdownItem>\n    <CDropdownDivider />\n    <CDropdownItem href="#">Separated link</CDropdownItem>\n  </CDropdownMenu>\n</CDropdown>',__scope:(F={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},F.DefaultLayout=p.a,F._frontmatter=I,F),mdxType:"Playground"},Object(a.b)(l.a,{variant:"btn-group",mdxType:"CDropdown"},Object(a.b)(h.a,{color:"secondary",size:"sm",mdxType:"CDropdownToggle"},"Small button"),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Separated link"))),Object(a.b)(l.a,{variant:"btn-group",mdxType:"CDropdown"},Object(a.b)(i.a,{color:"secondary",size:"sm",mdxType:"CButton"},"Small split button"),Object(a.b)(h.a,{color:"secondary",size:"sm",split:!0,mdxType:"CDropdownToggle"}),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Separated link")))),Object(a.b)("h2",{id:"dark-dropdowns"},"Dark dropdowns"),Object(a.b)("p",null,"Opt into darker dropdowns to match a dark navbar or custom style by set ",Object(a.b)("inlineCode",{parentName:"p"},"dark")," property. No changes are required to the dropdown items."),Object(a.b)(m.c,{__position:6,__code:'<CDropdown dark>\n  <CDropdownToggle color="secondary">Dropdown button</CDropdownToggle>\n  <CDropdownMenu>\n    <CDropdownItem href="#">Action</CDropdownItem>\n    <CDropdownItem href="#">Another action</CDropdownItem>\n    <CDropdownItem href="#">Something else here</CDropdownItem>\n    <CDropdownDivider />\n    <CDropdownItem href="#">Separated link</CDropdownItem>\n  </CDropdownMenu>\n</CDropdown>',__scope:(P={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},P.DefaultLayout=p.a,P._frontmatter=I,P),mdxType:"Playground"},Object(a.b)(l.a,{dark:!0,mdxType:"CDropdown"},Object(a.b)(h.a,{color:"secondary",mdxType:"CDropdownToggle"},"Dropdown button"),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Separated link")))),Object(a.b)("p",null,"And putting it to use in a navbar:"),Object(a.b)(m.c,{__position:7,__code:'<nav className="navbar navbar-expand-lg navbar-dark bg-dark">\n  <div className="container-fluid">\n    <a className="navbar-brand" href="#">\n      Navbar\n    </a>\n    <button\n      className="navbar-toggler"\n      type="button"\n      data-coreui-toggle="collapse"\n      data-coreui-target="#navbarNavDarkDropdown"\n      aria-controls="navbarNavDarkDropdown"\n      aria-expanded="false"\n      aria-label="Toggle navigation"\n    >\n      <span className="navbar-toggler-icon"></span>\n    </button>\n    <div className="collapse navbar-collapse" id="navbarNavDarkDropdown">\n      <ul className="navbar-nav">\n        <CDropdown dark component="li" variant="nav-item">\n          <CDropdownToggle>Dropdown</CDropdownToggle>\n          <CDropdownMenu>\n            <CDropdownItem href="#">Action</CDropdownItem>\n            <CDropdownItem href="#">Another action</CDropdownItem>\n            <CDropdownItem href="#">Something else here</CDropdownItem>\n            <CDropdownDivider />\n            <CDropdownItem href="#">Separated link</CDropdownItem>\n          </CDropdownMenu>\n        </CDropdown>\n      </ul>\n    </div>\n  </div>\n</nav>',__scope:(k={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},k.DefaultLayout=p.a,k._frontmatter=I,k),mdxType:"Playground"},Object(a.b)("nav",{className:"navbar navbar-expand-lg navbar-dark bg-dark"},Object(a.b)("div",{className:"container-fluid"},Object(a.b)("a",{className:"navbar-brand",href:"#"},"Navbar"),Object(a.b)("button",{className:"navbar-toggler",type:"button","data-coreui-toggle":"collapse","data-coreui-target":"#navbarNavDarkDropdown","aria-controls":"navbarNavDarkDropdown","aria-expanded":"false","aria-label":"Toggle navigation"},Object(a.b)("span",{className:"navbar-toggler-icon"})),Object(a.b)("div",{className:"collapse navbar-collapse",id:"navbarNavDarkDropdown"},Object(a.b)("ul",{className:"navbar-nav"},Object(a.b)(l.a,{dark:!0,component:"li",variant:"nav-item",mdxType:"CDropdown"},Object(a.b)(h.a,{mdxType:"CDropdownToggle"},"Dropdown"),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Separated link")))))))),Object(a.b)("h2",{id:"directions"},"Directions"),Object(a.b)(C.a,{color:"info",mdxType:"CCallout"},Object(a.b)("h4",null,"RTL"),Object(a.b)("p",null,"Directions are mirrored when using CoreUI in RTL, meaning `.dropstart` will appear on the right side.")),Object(a.b)("h3",{id:"dropup"},"Dropup"),Object(a.b)("p",null,"Trigger dropdown menus above elements by adding ",Object(a.b)("inlineCode",{parentName:"p"},'direction="dropup"')," to the ",Object(a.b)("inlineCode",{parentName:"p"},"<CDropdown>")," component."),Object(a.b)(m.c,{__position:9,__code:'<CDropdown variant="btn-group" direction="dropup">\n  <CDropdownToggle color="secondary">Dropdown</CDropdownToggle>\n  <CDropdownMenu>\n    <CDropdownItem href="#">Action</CDropdownItem>\n    <CDropdownItem href="#">Another action</CDropdownItem>\n    <CDropdownItem href="#">Something else here</CDropdownItem>\n    <CDropdownDivider />\n    <CDropdownItem href="#">Separated link</CDropdownItem>\n  </CDropdownMenu>\n</CDropdown>\n<CDropdown variant="btn-group" direction="dropup">\n  <CButton color="secondary">Small split button</CButton>\n  <CDropdownToggle color="secondary" split />\n  <CDropdownMenu>\n    <CDropdownItem href="#">Action</CDropdownItem>\n    <CDropdownItem href="#">Another action</CDropdownItem>\n    <CDropdownItem href="#">Something else here</CDropdownItem>\n    <CDropdownDivider />\n    <CDropdownItem href="#">Separated link</CDropdownItem>\n  </CDropdownMenu>\n</CDropdown>',__scope:(A={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},A.DefaultLayout=p.a,A._frontmatter=I,A),mdxType:"Playground"},Object(a.b)(l.a,{variant:"btn-group",direction:"dropup",mdxType:"CDropdown"},Object(a.b)(h.a,{color:"secondary",mdxType:"CDropdownToggle"},"Dropdown"),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Separated link"))),Object(a.b)(l.a,{variant:"btn-group",direction:"dropup",mdxType:"CDropdown"},Object(a.b)(i.a,{color:"secondary",mdxType:"CButton"},"Small split button"),Object(a.b)(h.a,{color:"secondary",split:!0,mdxType:"CDropdownToggle"}),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Separated link")))),Object(a.b)("h3",{id:"dropright"},"Dropright"),Object(a.b)("p",null,"Trigger dropdown menus at the right of the elements by adding ",Object(a.b)("inlineCode",{parentName:"p"},'direction="dropend"')," to the ",Object(a.b)("inlineCode",{parentName:"p"},"<CDropdown>")," component."),Object(a.b)(m.c,{__position:10,__code:'<CDropdown variant="btn-group" direction="dropend">\n  <CDropdownToggle color="secondary">Dropdown</CDropdownToggle>\n  <CDropdownMenu>\n    <CDropdownItem href="#">Action</CDropdownItem>\n    <CDropdownItem href="#">Another action</CDropdownItem>\n    <CDropdownItem href="#">Something else here</CDropdownItem>\n    <CDropdownDivider />\n    <CDropdownItem href="#">Separated link</CDropdownItem>\n  </CDropdownMenu>\n</CDropdown>\n<CDropdown variant="btn-group" direction="dropend">\n  <CButton color="secondary">Small split button</CButton>\n  <CDropdownToggle color="secondary" split />\n  <CDropdownMenu>\n    <CDropdownItem href="#">Action</CDropdownItem>\n    <CDropdownItem href="#">Another action</CDropdownItem>\n    <CDropdownItem href="#">Something else here</CDropdownItem>\n    <CDropdownDivider />\n    <CDropdownItem href="#">Separated link</CDropdownItem>\n  </CDropdownMenu>\n</CDropdown>',__scope:(S={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},S.DefaultLayout=p.a,S._frontmatter=I,S),mdxType:"Playground"},Object(a.b)(l.a,{variant:"btn-group",direction:"dropend",mdxType:"CDropdown"},Object(a.b)(h.a,{color:"secondary",mdxType:"CDropdownToggle"},"Dropdown"),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Separated link"))),Object(a.b)(l.a,{variant:"btn-group",direction:"dropend",mdxType:"CDropdown"},Object(a.b)(i.a,{color:"secondary",mdxType:"CButton"},"Small split button"),Object(a.b)(h.a,{color:"secondary",split:!0,mdxType:"CDropdownToggle"}),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Separated link")))),Object(a.b)("h3",{id:"dropleft"},"Dropleft"),Object(a.b)("p",null,"Trigger dropdown menus at the left of the elements by adding ",Object(a.b)("inlineCode",{parentName:"p"},'direction="dropstart"')," to the ",Object(a.b)("inlineCode",{parentName:"p"},"<CDropdown>")," component."),Object(a.b)(m.c,{__position:11,__code:'<CDropdown variant="btn-group" direction="dropstart">\n  <CDropdownToggle color="secondary">Dropdown</CDropdownToggle>\n  <CDropdownMenu>\n    <CDropdownItem href="#">Action</CDropdownItem>\n    <CDropdownItem href="#">Another action</CDropdownItem>\n    <CDropdownItem href="#">Something else here</CDropdownItem>\n    <CDropdownDivider />\n    <CDropdownItem href="#">Separated link</CDropdownItem>\n  </CDropdownMenu>\n</CDropdown>\n<CButtonGroup>\n  <CDropdown variant="btn-group" direction="dropstart">\n    <CDropdownToggle color="secondary" split />\n    <CDropdownMenu>\n      <CDropdownItem href="#">Action</CDropdownItem>\n      <CDropdownItem href="#">Another action</CDropdownItem>\n      <CDropdownItem href="#">Something else here</CDropdownItem>\n      <CDropdownDivider />\n      <CDropdownItem href="#">Separated link</CDropdownItem>\n    </CDropdownMenu>\n  </CDropdown>\n  <CButton color="secondary">Small split button</CButton>\n</CButtonGroup>',__scope:(M={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},M.DefaultLayout=p.a,M._frontmatter=I,M),mdxType:"Playground"},Object(a.b)(l.a,{variant:"btn-group",direction:"dropstart",mdxType:"CDropdown"},Object(a.b)(h.a,{color:"secondary",mdxType:"CDropdownToggle"},"Dropdown"),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Separated link"))),Object(a.b)(b.a,{mdxType:"CButtonGroup"},Object(a.b)(l.a,{variant:"btn-group",direction:"dropstart",mdxType:"CDropdown"},Object(a.b)(h.a,{color:"secondary",split:!0,mdxType:"CDropdownToggle"}),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Separated link"))),Object(a.b)(i.a,{color:"secondary",mdxType:"CButton"},"Small split button"))),Object(a.b)("h2",{id:"menu-items"},"Menu items"),Object(a.b)("p",null,"Historically dropdown menu contents ",Object(a.b)("em",{parentName:"p"},"had")," to be links, but that's no longer the case with v4. Now you can optionally use ",Object(a.b)("inlineCode",{parentName:"p"},"<button>")," elements in your dropdowns instead of just ",Object(a.b)("inlineCode",{parentName:"p"},"<a>"),"s."),Object(a.b)(m.c,{__position:12,__code:'<CDropdown>\n  <CDropdownToggle color="secondary">Dropdown</CDropdownToggle>\n  <CDropdownMenu>\n    <CDropdownItem component="button">Action</CDropdownItem>\n    <CDropdownItem component="button">Another action</CDropdownItem>\n    <CDropdownItem component="button">Something else here</CDropdownItem>\n    <CDropdownDivider />\n    <CDropdownItem component="button">Separated link</CDropdownItem>\n  </CDropdownMenu>\n</CDropdown>',__scope:(N={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},N.DefaultLayout=p.a,N._frontmatter=I,N),mdxType:"Playground"},Object(a.b)(l.a,{mdxType:"CDropdown"},Object(a.b)(h.a,{color:"secondary",mdxType:"CDropdownToggle"},"Dropdown"),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{component:"button",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{component:"button",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{component:"button",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{component:"button",mdxType:"CDropdownItem"},"Separated link")))),Object(a.b)("p",null,"You can also create non-interactive dropdown items with ",Object(a.b)("inlineCode",{parentName:"p"},"<CDropdownItemPlain>"),"."),Object(a.b)(m.c,{__position:13,__code:'<div className="border rounded py-2">\n  <CDropdownItemPlain>Dropdown item text</CDropdownItemPlain>\n  <CDropdownItem href="#">Action</CDropdownItem>\n  <CDropdownItem href="#">Another action</CDropdownItem>\n  <CDropdownItem href="#">Something else here</CDropdownItem>\n</div>',__scope:(L={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},L.DefaultLayout=p.a,L._frontmatter=I,L),mdxType:"Playground"},Object(a.b)("div",{className:"border rounded py-2"},Object(a.b)(u.a,{mdxType:"CDropdownItemPlain"},"Dropdown item text"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"))),Object(a.b)("h3",{id:"active"},"Active"),Object(a.b)("p",null,"Set boolean property ",Object(a.b)("inlineCode",{parentName:"p"},"active")," to ",Object(a.b)("strong",{parentName:"p"},"style item as active"),"."),Object(a.b)("p",null,"In the following example we use ",Object(a.b)("inlineCode",{parentName:"p"},"div")," instead of ",Object(a.b)("inlineCode",{parentName:"p"},"<CDropdownMenu>")," to show ",Object(a.b)("inlineCode",{parentName:"p"},"<CDropdownMenu>")," content."),Object(a.b)(m.c,{__position:14,__code:'<div className="border rounded py-2">\n  <CDropdownItem href="#">Regular link</CDropdownItem>\n  <CDropdownItem href="#" active>\n    Active link\n  </CDropdownItem>\n  <CDropdownItem href="#">Another link</CDropdownItem>\n</div>',__scope:(B={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},B.DefaultLayout=p.a,B._frontmatter=I,B),mdxType:"Playground"},Object(a.b)("div",{className:"border rounded py-2"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Regular link"),Object(a.b)(w.a,{href:"#",active:!0,mdxType:"CDropdownItem"},"Active link"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another link"))),Object(a.b)("h3",{id:"disabled"},"Disabled"),Object(a.b)("p",null,"Add ",Object(a.b)("inlineCode",{parentName:"p"},"disabled")," boolean property to items in the dropdown to ",Object(a.b)("strong",{parentName:"p"},"style them as disabled"),"."),Object(a.b)("p",null,"In the following example we use ",Object(a.b)("inlineCode",{parentName:"p"},"div")," instead of ",Object(a.b)("inlineCode",{parentName:"p"},"<CDropdownMenu>")," to show ",Object(a.b)("inlineCode",{parentName:"p"},"<CDropdownMenu>")," content."),Object(a.b)(m.c,{__position:15,__code:'<div className="border rounded py-2">\n  <CDropdownItem href="#">Regular link</CDropdownItem>\n  <CDropdownItem href="#" disabled>\n    Disabled link\n  </CDropdownItem>\n  <CDropdownItem href="#">Another link</CDropdownItem>\n</div>',__scope:(H={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},H.DefaultLayout=p.a,H._frontmatter=I,H),mdxType:"Playground"},Object(a.b)("div",{className:"border rounded py-2"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Regular link"),Object(a.b)(w.a,{href:"#",disabled:!0,mdxType:"CDropdownItem"},"Disabled link"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another link"))),Object(a.b)("h2",{id:"menu-alignment"},"Menu alignment"),Object(a.b)("p",null,"By default, a dropdown menu is automatically positioned 100% from the top and along the left side of its parent. Add ",Object(a.b)("inlineCode",{parentName:"p"},'aligment="end"')," to right align the dropdown menu."),Object(a.b)(C.a,{color:"info",mdxType:"CCallout"},Object(a.b)("strong",null,"Heads up!")," Dropdowns are positioned thanks to Popper."),Object(a.b)(m.c,{__position:17,__code:'<CDropdown alignment="end">\n  <CDropdownToggle color="secondary">\n    Right-aligned menu example\n  </CDropdownToggle>\n  <CDropdownMenu>\n    <CDropdownItem href="#">Action</CDropdownItem>\n    <CDropdownItem href="#">Another action</CDropdownItem>\n    <CDropdownItem href="#">Something else here</CDropdownItem>\n    <CDropdownDivider />\n    <CDropdownItem href="#">Separated link</CDropdownItem>\n  </CDropdownMenu>\n</CDropdown>',__scope:(G={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},G.DefaultLayout=p.a,G._frontmatter=I,G),mdxType:"Playground"},Object(a.b)(l.a,{alignment:"end",mdxType:"CDropdown"},Object(a.b)(h.a,{color:"secondary",mdxType:"CDropdownToggle"},"Right-aligned menu example"),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Separated link")))),Object(a.b)("h3",{id:"responsive-alignment"},"Responsive alignment"),Object(a.b)("p",null,"If you use responsive alignment, dynamic positioning is disabled."),Object(a.b)("p",null,"To align ",Object(a.b)("strong",{parentName:"p"},"right")," the dropdown menu with the given breakpoint or larger, add ",Object(a.b)("inlineCode",{parentName:"p"},'aligment="xs|sm|md|lg|xl|xxl: end"'),"."),Object(a.b)(m.c,{__position:18,__code:'<CDropdown alignment={{ lg: \'end\' }}>\n  <CDropdownToggle color="secondary">\n    Left-aligned but right aligned when large screen\n  </CDropdownToggle>\n  <CDropdownMenu>\n    <CDropdownItem href="#">Action</CDropdownItem>\n    <CDropdownItem href="#">Another action</CDropdownItem>\n    <CDropdownItem href="#">Something else here</CDropdownItem>\n    <CDropdownDivider />\n    <CDropdownItem href="#">Separated link</CDropdownItem>\n  </CDropdownMenu>\n</CDropdown>',__scope:(z={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},z.DefaultLayout=p.a,z._frontmatter=I,z),mdxType:"Playground"},Object(a.b)(l.a,{alignment:{lg:"end"},mdxType:"CDropdown"},Object(a.b)(h.a,{color:"secondary",mdxType:"CDropdownToggle"},"Left-aligned but right aligned when large screen"),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Separated link")))),Object(a.b)("p",null,"To align ",Object(a.b)("strong",{parentName:"p"},"left")," the dropdown menu with the given breakpoint or larger, add ",Object(a.b)("inlineCode",{parentName:"p"},'aligment="xs|sm|md|lg|xl|xxl: start"'),"."),Object(a.b)(m.c,{__position:19,__code:'<CDropdown alignment={{ xs: \'end\', lg: \'start\' }}>\n  <CDropdownToggle color="secondary">\n    Right-aligned but left aligned when large screen\n  </CDropdownToggle>\n  <CDropdownMenu>\n    <CDropdownItem href="#">Action</CDropdownItem>\n    <CDropdownItem href="#">Another action</CDropdownItem>\n    <CDropdownItem href="#">Something else here</CDropdownItem>\n    <CDropdownDivider />\n    <CDropdownItem href="#">Separated link</CDropdownItem>\n  </CDropdownMenu>\n</CDropdown>',__scope:(R={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},R.DefaultLayout=p.a,R._frontmatter=I,R),mdxType:"Playground"},Object(a.b)(l.a,{alignment:{xs:"end",lg:"start"},mdxType:"CDropdown"},Object(a.b)(h.a,{color:"secondary",mdxType:"CDropdownToggle"},"Right-aligned but left aligned when large screen"),Object(a.b)(s.a,{mdxType:"CDropdownMenu"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Separated link")))),Object(a.b)("h2",{id:"menu-content"},"Menu content"),Object(a.b)("h3",{id:"headers"},"Headers"),Object(a.b)("p",null,"Add a header to label sections of actions in any dropdown menu."),Object(a.b)("p",null,"In the following example we use ",Object(a.b)("inlineCode",{parentName:"p"},"div")," instead of ",Object(a.b)("inlineCode",{parentName:"p"},"<CDropdownMenu>")," to show ",Object(a.b)("inlineCode",{parentName:"p"},"<CDropdownMenu>")," content."),Object(a.b)(m.c,{__position:20,__code:'<div className="border rounded py-2">\n  <CDropdownHeader>Dropdown header</CDropdownHeader>\n  <CDropdownItem href="#">Action</CDropdownItem>\n  <CDropdownItem href="#">Another action</CDropdownItem>\n</div>',__scope:(E={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},E.DefaultLayout=p.a,E._frontmatter=I,E),mdxType:"Playground"},Object(a.b)("div",{className:"border rounded py-2"},Object(a.b)(D.a,{mdxType:"CDropdownHeader"},"Dropdown header"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"))),Object(a.b)("h3",{id:"dividers"},"Dividers"),Object(a.b)("p",null,"Separate groups of related menu items with a divider."),Object(a.b)("p",null,"In the following example we use ",Object(a.b)("inlineCode",{parentName:"p"},"div")," instead of ",Object(a.b)("inlineCode",{parentName:"p"},"<CDropdownMenu>")," to show ",Object(a.b)("inlineCode",{parentName:"p"},"<CDropdownMenu>")," content."),Object(a.b)(m.c,{__position:21,__code:'<div className="border rounded py-2">\n  <CDropdownItem href="#">Action</CDropdownItem>\n  <CDropdownItem href="#">Another action</CDropdownItem>\n  <CDropdownItem href="#">Something else here</CDropdownItem>\n  <CDropdownDivider />\n  <CDropdownItem href="#">Separated link</CDropdownItem>\n</div>',__scope:(X={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},X.DefaultLayout=p.a,X._frontmatter=I,X),mdxType:"Playground"},Object(a.b)("div",{className:"border rounded py-2"},Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Another action"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Something else here"),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Separated link"))),Object(a.b)("h3",{id:"text"},"Text"),Object(a.b)("p",null,"Place any freeform text within a dropdown menu with text. Note that you'll likely need additional sizing styles to constrain the menu width."),Object(a.b)(m.c,{__position:22,__code:'<div className="border rounded p-4 text-muted" style={{ maxWidth: \'200px\' }}>\n  <p>Some example text that\'s free-flowing within the dropdown menu.</p>\n  <p className="mb-0">And this is more example text.</p>\n</div>',__scope:(J={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},J.DefaultLayout=p.a,J._frontmatter=I,J),mdxType:"Playground"},Object(a.b)("div",{className:"border rounded p-4 text-muted",style:{maxWidth:"200px"}},Object(a.b)("p",null,"Some example text that's free-flowing within the dropdown menu."),Object(a.b)("p",{className:"mb-0"},"And this is more example text."))),Object(a.b)("h3",{id:"forms"},"Forms"),Object(a.b)("p",null,"Put a form within a dropdown menu, or make it into a dropdown menu."),Object(a.b)(m.c,{__position:23,__code:'<div className="border rounded py-2">\n  <CForm className="px-4 py-4">\n    <div class="mb-3">\n      <CFormLabel htmlFor="exampleDropdownFormEmail1">\n        Email address\n      </CFormLabel>\n      <CFormControl\n        type="email"\n        id="exampleDropdownFormEmail1"\n        placeholder="email@example.com"\n      />\n    </div>\n    <div class="mb-3">\n      <CFormLabel htmlFor="exampleDropdownFormPassword1">Password</CFormLabel>\n      <CFormControl\n        type="password"\n        id="exampleDropdownFormPassword1"\n        placeholder="Password"\n      />\n    </div>\n    <div class="mb-3">\n      <CFormCheck id="dropdownCheck" label="Remember me" />\n    </div>\n    <CButton type="submit">Sign in</CButton>\n  </CForm>\n  <CDropdownDivider />\n  <CDropdownItem href="#">New around here? Sign up</CDropdownItem>\n  <CDropdownItem href="#">Forgot password?</CDropdownItem>\n</div>',__scope:(q={props:V,DefaultLayout:p.a,Playground:m.c,Props:m.d,CCallout:C.a,CButton:i.a,CButtonGroup:b.a,CDropdown:l.a,CDropdownDivider:c.a,CDropdownHeader:D.a,CDropdownItem:w.a,CDropdownItemPlain:u.a,CDropdownMenu:s.a,CDropdownToggle:h.a,CForm:y.a,CFormCheck:g.a,CFormControl:O.a,CFormLabel:j.a},q.DefaultLayout=p.a,q._frontmatter=I,q),mdxType:"Playground"},Object(a.b)("div",{className:"border rounded py-2"},Object(a.b)(y.a,{className:"px-4 py-4",mdxType:"CForm"},Object(a.b)("div",{className:"mb-3"},Object(a.b)(j.a,{htmlFor:"exampleDropdownFormEmail1",mdxType:"CFormLabel"},"Email address"),Object(a.b)(O.a,{type:"email",id:"exampleDropdownFormEmail1",placeholder:"email@example.com",mdxType:"CFormControl"})),Object(a.b)("div",{className:"mb-3"},Object(a.b)(j.a,{htmlFor:"exampleDropdownFormPassword1",mdxType:"CFormLabel"},"Password"),Object(a.b)(O.a,{type:"password",id:"exampleDropdownFormPassword1",placeholder:"Password",mdxType:"CFormControl"})),Object(a.b)("div",{className:"mb-3"},Object(a.b)(g.a,{id:"dropdownCheck",label:"Remember me",mdxType:"CFormCheck"})),Object(a.b)(i.a,{type:"submit",mdxType:"CButton"},"Sign in")),Object(a.b)(c.a,{mdxType:"CDropdownDivider"}),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"New around here? Sign up"),Object(a.b)(w.a,{href:"#",mdxType:"CDropdownItem"},"Forgot password?"))),Object(a.b)("h2",{id:"api"},"API"),Object(a.b)("h3",{id:"cdropdown"},"CDropdown"),Object(a.b)(m.d,{of:l.a,mdxType:"Props"}),Object(a.b)("h3",{id:"cdropdowndivider"},"CDropdownDivider"),Object(a.b)(m.d,{of:c.a,mdxType:"Props"}),Object(a.b)("h3",{id:"cdropdownheader"},"CDropdownHeader"),Object(a.b)(m.d,{of:D.a,mdxType:"Props"}),Object(a.b)("h3",{id:"cdropdownitem"},"CDropdownItem"),Object(a.b)(m.d,{of:w.a,mdxType:"Props"}),Object(a.b)("h3",{id:"cdropdownitemplain"},"CDropdownItemPlain"),Object(a.b)(m.d,{of:u.a,mdxType:"Props"}),Object(a.b)("h3",{id:"cdropdownmenu"},"CDropdownMenu"),Object(a.b)(m.d,{of:s.a,mdxType:"Props"}),Object(a.b)("h3",{id:"cdropdowntoggle"},"CDropdownToggle"),Object(a.b)(m.d,{of:h.a,mdxType:"Props"}))}void 0!==x&&x&&x===Object(x)&&Object.isExtensible(x)&&!x.hasOwnProperty("__filemeta")&&Object.defineProperty(x,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/dropdown/CDropdown.mdx"}}),x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-dropdown-c-dropdown-mdx-15ff9e5befaac99e14f2.js.map