(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{SeQF:function(e,o,a){"use strict";a.r(o),a.d(o,"_frontmatter",(function(){return p})),a.d(o,"default",(function(){return k}));var t=a("Fcif"),n=a("+I+c"),l=(a("IFzZ"),a("/FXl")),i=a("BIGe"),d=a("ZFoC"),c=a("758a"),b=a("J7hk"),r=a("4SRt"),C=a("nOSA"),m=a("iV8I"),u=a("OEF7"),p=(a("aD51"),{});void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/form/CFormCheck.mdx"}});var h={_frontmatter:p},s=i.a;function k(e){var o,a,k,f,y,F,x,_,O,j,D,g,T,w,L,P,v=e.components,R=Object(n.a)(e,["components"]);return Object(l.b)(s,Object(t.a)({},h,R,{components:v,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"approach"},"Approach"),Object(l.b)("p",null,"Browser default checkboxes and radios are replaced with the help of ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormCheck>"),". Checkboxes are for selecting one or several options in a list, while radios are for selecting one option from many."),Object(l.b)("h2",{id:"checks"},"Checks"),Object(l.b)(d.c,{__position:0,__code:'<CFormCheck id="flexCheckDefault" label="Default checkbox" />\n<CFormCheck id="flexCheckChecked" label="Checked checkbox" defaultChecked />',__scope:(o={props:R,DefaultLayout:i.a,Playground:d.c,Props:d.d,CButton:c.a,CForm:b.a,CFormCheck:r.a,CFormControl:C.a,CFormLabel:m.a,CFormText:u.a},o.DefaultLayout=i.a,o._frontmatter=p,o),mdxType:"Playground"},Object(l.b)(r.a,{id:"flexCheckDefault",label:"Default checkbox",mdxType:"CFormCheck"}),Object(l.b)(r.a,{id:"flexCheckChecked",label:"Checked checkbox",defaultChecked:!0,mdxType:"CFormCheck"})),Object(l.b)("h3",{id:"disabled"},"Disabled"),Object(l.b)("p",null,"Add the ",Object(l.b)("inlineCode",{parentName:"p"},"disabled")," attribute and the associated ",Object(l.b)("inlineCode",{parentName:"p"},"<label>"),"s are automatically styled to match with a lighter color to help indicate the input's state."),Object(l.b)(d.c,{__position:1,__code:'<CFormCheck label="Disabled checkbox" disabled />\n<CFormCheck label="Disabled checked checkbox" defaultChecked disabled />',__scope:(a={props:R,DefaultLayout:i.a,Playground:d.c,Props:d.d,CButton:c.a,CForm:b.a,CFormCheck:r.a,CFormControl:C.a,CFormLabel:m.a,CFormText:u.a},a.DefaultLayout=i.a,a._frontmatter=p,a),mdxType:"Playground"},Object(l.b)(r.a,{label:"Disabled checkbox",disabled:!0,mdxType:"CFormCheck"}),Object(l.b)(r.a,{label:"Disabled checked checkbox",defaultChecked:!0,disabled:!0,mdxType:"CFormCheck"})),Object(l.b)("h2",{id:"radios"},"Radios"),Object(l.b)("p",null,"Add the ",Object(l.b)("inlineCode",{parentName:"p"},"disabled")," attribute and the associated ",Object(l.b)("inlineCode",{parentName:"p"},"<label>"),"s are automatically styled to match with a lighter color to help indicate the input's state."),Object(l.b)(d.c,{__position:2,__code:'<CFormCheck\n  type="radio"\n  name="flexRadioDefault"\n  id="flexRadioDefault1"\n  label="Default radio"\n/>\n<CFormCheck\n  type="radio"\n  name="flexRadioDefault"\n  id="flexRadioDefault2"\n  label="Checked radio"\n  defaultChecked\n/>',__scope:(k={props:R,DefaultLayout:i.a,Playground:d.c,Props:d.d,CButton:c.a,CForm:b.a,CFormCheck:r.a,CFormControl:C.a,CFormLabel:m.a,CFormText:u.a},k.DefaultLayout=i.a,k._frontmatter=p,k),mdxType:"Playground"},Object(l.b)(r.a,{type:"radio",name:"flexRadioDefault",id:"flexRadioDefault1",label:"Default radio",mdxType:"CFormCheck"}),Object(l.b)(r.a,{type:"radio",name:"flexRadioDefault",id:"flexRadioDefault2",label:"Checked radio",defaultChecked:!0,mdxType:"CFormCheck"})),Object(l.b)("h3",{id:"disabled-1"},"Disabled"),Object(l.b)(d.c,{__position:3,__code:'<CFormCheck\n  type="radio"\n  name="flexRadioDisabled"\n  id="flexRadioDisabled"\n  label="Disabled radio"\n  disabled\n/>\n<CFormCheck\n  type="radio"\n  name="flexRadioDisabled"\n  id="flexRadioCheckedDisabled"\n  label="Disabled checked radio"\n  defaultChecked\n  disabled\n/>',__scope:(f={props:R,DefaultLayout:i.a,Playground:d.c,Props:d.d,CButton:c.a,CForm:b.a,CFormCheck:r.a,CFormControl:C.a,CFormLabel:m.a,CFormText:u.a},f.DefaultLayout=i.a,f._frontmatter=p,f),mdxType:"Playground"},Object(l.b)(r.a,{type:"radio",name:"flexRadioDisabled",id:"flexRadioDisabled",label:"Disabled radio",disabled:!0,mdxType:"CFormCheck"}),Object(l.b)(r.a,{type:"radio",name:"flexRadioDisabled",id:"flexRadioCheckedDisabled",label:"Disabled checked radio",defaultChecked:!0,disabled:!0,mdxType:"CFormCheck"})),Object(l.b)("h2",{id:"switches"},"Switches"),Object(l.b)("p",null,"A switch has the markup of a custom checkbox but uses the ",Object(l.b)("inlineCode",{parentName:"p"},"switch")," boolean properly to render a toggle switch. Switches also support the ",Object(l.b)("inlineCode",{parentName:"p"},"disabled")," attribute."),Object(l.b)(d.c,{__position:4,__code:'<CFormCheck\n  switch\n  label="Default switch checkbox input"\n  id="formSwitchCheckDefault"\n/>\n<CFormCheck\n  switch\n  label="Checked switch checkbox input"\n  id="formSwitchCheckChecked"\n  defaultChecked\n/>\n<CFormCheck\n  switch\n  label="Disabled switch checkbox input"\n  id="formSwitchCheckDisabled"\n  disabled\n/>\n<CFormCheck\n  switch\n  label="Disabled checked switch checkbox input"\n  id="formSwitchCheckCheckedDisabled"\n  defaultChecked\n  disabled\n/>',__scope:(y={props:R,DefaultLayout:i.a,Playground:d.c,Props:d.d,CButton:c.a,CForm:b.a,CFormCheck:r.a,CFormControl:C.a,CFormLabel:m.a,CFormText:u.a},y.DefaultLayout=i.a,y._frontmatter=p,y),mdxType:"Playground"},Object(l.b)(r.a,{switch:!0,label:"Default switch checkbox input",id:"formSwitchCheckDefault",mdxType:"CFormCheck"}),Object(l.b)(r.a,{switch:!0,label:"Checked switch checkbox input",id:"formSwitchCheckChecked",defaultChecked:!0,mdxType:"CFormCheck"}),Object(l.b)(r.a,{switch:!0,label:"Disabled switch checkbox input",id:"formSwitchCheckDisabled",disabled:!0,mdxType:"CFormCheck"}),Object(l.b)(r.a,{switch:!0,label:"Disabled checked switch checkbox input",id:"formSwitchCheckCheckedDisabled",defaultChecked:!0,disabled:!0,mdxType:"CFormCheck"})),Object(l.b)("h3",{id:"sizes"},"Sizes"),Object(l.b)(d.c,{__position:5,__code:'<CFormCheck\n  switch\n  label="Default switch checkbox input"\n  id="formSwitchCheckDefault"\n/>\n<CFormCheck\n  switch\n  size="lg"\n  label="Large switch checkbox input"\n  id="formSwitchCheckDefaultLg"\n/>\n<CFormCheck\n  switch\n  size="xl"\n  label="Extra large switch checkbox input"\n  id="formSwitchCheckDefaultXL"\n/>',__scope:(F={props:R,DefaultLayout:i.a,Playground:d.c,Props:d.d,CButton:c.a,CForm:b.a,CFormCheck:r.a,CFormControl:C.a,CFormLabel:m.a,CFormText:u.a},F.DefaultLayout=i.a,F._frontmatter=p,F),mdxType:"Playground"},Object(l.b)(r.a,{switch:!0,label:"Default switch checkbox input",id:"formSwitchCheckDefault",mdxType:"CFormCheck"}),Object(l.b)(r.a,{switch:!0,size:"lg",label:"Large switch checkbox input",id:"formSwitchCheckDefaultLg",mdxType:"CFormCheck"}),Object(l.b)(r.a,{switch:!0,size:"xl",label:"Extra large switch checkbox input",id:"formSwitchCheckDefaultXL",mdxType:"CFormCheck"})),Object(l.b)("h2",{id:"default-stacked"},"Default (stacked)"),Object(l.b)("p",null,"By default, any number of checkboxes and radios that are immediate sibling will be vertically stacked and appropriately spaced."),Object(l.b)(d.c,{__position:6,__code:'<CFormCheck id="defaultCheck1" label="Default checkbox" />\n<CFormCheck id="defaultCheck2" label="Disabled checkbox" disabled />',__scope:(x={props:R,DefaultLayout:i.a,Playground:d.c,Props:d.d,CButton:c.a,CForm:b.a,CFormCheck:r.a,CFormControl:C.a,CFormLabel:m.a,CFormText:u.a},x.DefaultLayout=i.a,x._frontmatter=p,x),mdxType:"Playground"},Object(l.b)(r.a,{id:"defaultCheck1",label:"Default checkbox",mdxType:"CFormCheck"}),Object(l.b)(r.a,{id:"defaultCheck2",label:"Disabled checkbox",disabled:!0,mdxType:"CFormCheck"})),Object(l.b)(d.c,{__position:7,__code:'<CFormCheck\n  type="radio"\n  name="exampleRadios"\n  id="exampleRadios1"\n  value="option1"\n  label="Default radio"\n  defaultChecked\n/>\n<CFormCheck\n  type="radio"\n  name="exampleRadios"\n  id="exampleRadios2"\n  value="option2"\n  label="Second default radio"\n/>\n<CFormCheck\n  type="radio"\n  name="exampleRadios"\n  id="exampleRadios3"\n  value="option3"\n  label="Disabled radio"\n  disabled\n/>',__scope:(_={props:R,DefaultLayout:i.a,Playground:d.c,Props:d.d,CButton:c.a,CForm:b.a,CFormCheck:r.a,CFormControl:C.a,CFormLabel:m.a,CFormText:u.a},_.DefaultLayout=i.a,_._frontmatter=p,_),mdxType:"Playground"},Object(l.b)(r.a,{type:"radio",name:"exampleRadios",id:"exampleRadios1",value:"option1",label:"Default radio",defaultChecked:!0,mdxType:"CFormCheck"}),Object(l.b)(r.a,{type:"radio",name:"exampleRadios",id:"exampleRadios2",value:"option2",label:"Second default radio",mdxType:"CFormCheck"}),Object(l.b)(r.a,{type:"radio",name:"exampleRadios",id:"exampleRadios3",value:"option3",label:"Disabled radio",disabled:!0,mdxType:"CFormCheck"})),Object(l.b)("h2",{id:"inline"},"Inline"),Object(l.b)("p",null,"Group checkboxes or radios on the same horizontal row by adding ",Object(l.b)("inlineCode",{parentName:"p"},"inline")," boolean property to any ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormCheck>"),"."),Object(l.b)(d.c,{__position:8,__code:'<CFormCheck inline id="inlineCheckbox1" value="option1" label="1" />\n<CFormCheck inline id="inlineCheckbox2" value="option2" label="2" />\n<CFormCheck\n  inline\n  id="inlineCheckbox3"\n  value="option3"\n  label="3 (disabled)"\n  disabled\n/>',__scope:(O={props:R,DefaultLayout:i.a,Playground:d.c,Props:d.d,CButton:c.a,CForm:b.a,CFormCheck:r.a,CFormControl:C.a,CFormLabel:m.a,CFormText:u.a},O.DefaultLayout=i.a,O._frontmatter=p,O),mdxType:"Playground"},Object(l.b)(r.a,{inline:!0,id:"inlineCheckbox1",value:"option1",label:"1",mdxType:"CFormCheck"}),Object(l.b)(r.a,{inline:!0,id:"inlineCheckbox2",value:"option2",label:"2",mdxType:"CFormCheck"}),Object(l.b)(r.a,{inline:!0,id:"inlineCheckbox3",value:"option3",label:"3 (disabled)",disabled:!0,mdxType:"CFormCheck"})),Object(l.b)(d.c,{__position:9,__code:'<CFormCheck\n  inline\n  type="radio"\n  name="inlineRadioOptions"\n  id="inlineCheckbox1"\n  value="option1"\n  label="1"\n/>\n<CFormCheck\n  inline\n  type="radio"\n  name="inlineRadioOptions"\n  id="inlineCheckbox2"\n  value="option2"\n  label="2"\n/>\n<CFormCheck\n  inline\n  type="radio"\n  name="inlineRadioOptions"\n  id="inlineCheckbox3"\n  value="option3"\n  label="3 (disabled)"\n  disabled\n/>',__scope:(j={props:R,DefaultLayout:i.a,Playground:d.c,Props:d.d,CButton:c.a,CForm:b.a,CFormCheck:r.a,CFormControl:C.a,CFormLabel:m.a,CFormText:u.a},j.DefaultLayout=i.a,j._frontmatter=p,j),mdxType:"Playground"},Object(l.b)(r.a,{inline:!0,type:"radio",name:"inlineRadioOptions",id:"inlineCheckbox1",value:"option1",label:"1",mdxType:"CFormCheck"}),Object(l.b)(r.a,{inline:!0,type:"radio",name:"inlineRadioOptions",id:"inlineCheckbox2",value:"option2",label:"2",mdxType:"CFormCheck"}),Object(l.b)(r.a,{inline:!0,type:"radio",name:"inlineRadioOptions",id:"inlineCheckbox3",value:"option3",label:"3 (disabled)",disabled:!0,mdxType:"CFormCheck"})),Object(l.b)("h2",{id:"without-labels"},"Without labels"),Object(l.b)("p",null,"Remember to still provide some form of accessible name for assistive technologies (for instance, using ",Object(l.b)("inlineCode",{parentName:"p"},"aria-label"),")."),Object(l.b)(d.c,{__position:10,__code:'<div>\n  <CFormCheck id="checkboxNoLabel" value="" aria-label="..." />\n</div>\n<div>\n  <CFormCheck\n    type="radio"\n    name="radioNoLabel"\n    id="radioNoLabel"\n    value=""\n    aria-label="..."\n  />\n</div>',__scope:(D={props:R,DefaultLayout:i.a,Playground:d.c,Props:d.d,CButton:c.a,CForm:b.a,CFormCheck:r.a,CFormControl:C.a,CFormLabel:m.a,CFormText:u.a},D.DefaultLayout=i.a,D._frontmatter=p,D),mdxType:"Playground"},Object(l.b)("div",null,Object(l.b)(r.a,{id:"checkboxNoLabel",value:"","aria-label":"...",mdxType:"CFormCheck"})),Object(l.b)("div",null,Object(l.b)(r.a,{type:"radio",name:"radioNoLabel",id:"radioNoLabel",value:"","aria-label":"...",mdxType:"CFormCheck"}))),Object(l.b)("h2",{id:"toggle-buttons"},"Toggle buttons"),Object(l.b)("p",null,"Create button-like checkboxes and radio buttons by using ",Object(l.b)("inlineCode",{parentName:"p"},"button")," boolean property on the ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormCheck>")," component. These toggle buttons can further be grouped in a button group if needed."),Object(l.b)("h3",{id:"checkbox-toggle-buttons"},"Checkbox toggle buttons"),Object(l.b)(d.c,{__position:11,__code:'<CFormCheck button id="btn-check" autoComplete="off" label="Single toggle" />',__scope:(g={props:R,DefaultLayout:i.a,Playground:d.c,Props:d.d,CButton:c.a,CForm:b.a,CFormCheck:r.a,CFormControl:C.a,CFormLabel:m.a,CFormText:u.a},g.DefaultLayout=i.a,g._frontmatter=p,g),mdxType:"Playground"},Object(l.b)(r.a,{button:!0,id:"btn-check",autoComplete:"off",label:"Single toggle",mdxType:"CFormCheck"})),Object(l.b)(d.c,{__position:12,__code:'<CFormCheck\n  button\n  id="btn-check-2"\n  autoComplete="off"\n  label="Checked"\n  defaultChecked\n/>',__scope:(T={props:R,DefaultLayout:i.a,Playground:d.c,Props:d.d,CButton:c.a,CForm:b.a,CFormCheck:r.a,CFormControl:C.a,CFormLabel:m.a,CFormText:u.a},T.DefaultLayout=i.a,T._frontmatter=p,T),mdxType:"Playground"},Object(l.b)(r.a,{button:!0,id:"btn-check-2",autoComplete:"off",label:"Checked",defaultChecked:!0,mdxType:"CFormCheck"})),Object(l.b)(d.c,{__position:13,__code:'<CFormCheck\n  button\n  id="btn-check-3"\n  autoComplete="off"\n  label="Disabled"\n  disabled\n/>',__scope:(w={props:R,DefaultLayout:i.a,Playground:d.c,Props:d.d,CButton:c.a,CForm:b.a,CFormCheck:r.a,CFormControl:C.a,CFormLabel:m.a,CFormText:u.a},w.DefaultLayout=i.a,w._frontmatter=p,w),mdxType:"Playground"},Object(l.b)(r.a,{button:!0,id:"btn-check-3",autoComplete:"off",label:"Disabled",disabled:!0,mdxType:"CFormCheck"})),Object(l.b)("h3",{id:"radio-toggle-buttons"},"Radio toggle buttons"),Object(l.b)(d.c,{__position:14,__code:'<CFormCheck\n  button\n  buttonColor="secondary"\n  type="radio"\n  name="options"\n  id="option1"\n  autoComplete="off"\n  label="Checked"\n  defaultChecked\n/>\n<CFormCheck\n  button\n  buttonColor="secondary"\n  type="radio"\n  name="options"\n  id="option2"\n  autoComplete="off"\n  label="Radio"\n/>\n<CFormCheck\n  button\n  buttonColor="secondary"\n  type="radio"\n  name="options"\n  id="option3"\n  autoComplete="off"\n  label="Radio"\n  disabled\n/>\n<CFormCheck\n  button\n  buttonColor="secondary"\n  type="radio"\n  name="options"\n  id="option4"\n  autoComplete="off"\n  label="Radio"\n/>',__scope:(L={props:R,DefaultLayout:i.a,Playground:d.c,Props:d.d,CButton:c.a,CForm:b.a,CFormCheck:r.a,CFormControl:C.a,CFormLabel:m.a,CFormText:u.a},L.DefaultLayout=i.a,L._frontmatter=p,L),mdxType:"Playground"},Object(l.b)(r.a,{button:!0,buttonColor:"secondary",type:"radio",name:"options",id:"option1",autoComplete:"off",label:"Checked",defaultChecked:!0,mdxType:"CFormCheck"}),Object(l.b)(r.a,{button:!0,buttonColor:"secondary",type:"radio",name:"options",id:"option2",autoComplete:"off",label:"Radio",mdxType:"CFormCheck"}),Object(l.b)(r.a,{button:!0,buttonColor:"secondary",type:"radio",name:"options",id:"option3",autoComplete:"off",label:"Radio",disabled:!0,mdxType:"CFormCheck"}),Object(l.b)(r.a,{button:!0,buttonColor:"secondary",type:"radio",name:"options",id:"option4",autoComplete:"off",label:"Radio",mdxType:"CFormCheck"})),Object(l.b)("h3",{id:"outlined-styles"},"Outlined styles"),Object(l.b)("p",null,"Different variants of button, such at the various outlined styles, are supported."),Object(l.b)(d.c,{__position:15,__code:'<div>\n  <CFormCheck\n    button\n    buttonColor="primary"\n    buttonVariant="outline"\n    id="btn-check-outlined"\n    autoComplete="off"\n    label="Single toggle"\n  />\n</div>\n<div>\n  <CFormCheck\n    button\n    buttonColor="secondary"\n    buttonVariant="outline"\n    id="btn-check-2-outlined"\n    autoComplete="off"\n    label="Checked"\n    defaultChecked\n  />\n</div>\n<div>\n  <CFormCheck\n    button\n    buttonColor="success"\n    buttonVariant="outline"\n    type="radio"\n    name="options-outlined"\n    id="success-outlined"\n    autoComplete="off"\n    label="Radio"\n    defaultChecked\n  />\n  <CFormCheck\n    button\n    buttonColor="danger"\n    buttonVariant="outline"\n    type="radio"\n    name="options-outlined"\n    id="danger-outlined"\n    autoComplete="off"\n    label="Radio"\n  />\n</div>',__scope:(P={props:R,DefaultLayout:i.a,Playground:d.c,Props:d.d,CButton:c.a,CForm:b.a,CFormCheck:r.a,CFormControl:C.a,CFormLabel:m.a,CFormText:u.a},P.DefaultLayout=i.a,P._frontmatter=p,P),mdxType:"Playground"},Object(l.b)("div",null,Object(l.b)(r.a,{button:!0,buttonColor:"primary",buttonVariant:"outline",id:"btn-check-outlined",autoComplete:"off",label:"Single toggle",mdxType:"CFormCheck"})),Object(l.b)("div",null,Object(l.b)(r.a,{button:!0,buttonColor:"secondary",buttonVariant:"outline",id:"btn-check-2-outlined",autoComplete:"off",label:"Checked",defaultChecked:!0,mdxType:"CFormCheck"})),Object(l.b)("div",null,Object(l.b)(r.a,{button:!0,buttonColor:"success",buttonVariant:"outline",type:"radio",name:"options-outlined",id:"success-outlined",autoComplete:"off",label:"Radio",defaultChecked:!0,mdxType:"CFormCheck"}),Object(l.b)(r.a,{button:!0,buttonColor:"danger",buttonVariant:"outline",type:"radio",name:"options-outlined",id:"danger-outlined",autoComplete:"off",label:"Radio",mdxType:"CFormCheck"}))))}void 0!==k&&k&&k===Object(k)&&Object.isExtensible(k)&&!k.hasOwnProperty("__filemeta")&&Object.defineProperty(k,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/form/CFormCheck.mdx"}}),k.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-form-c-form-check-mdx-30466cd58f63181f87b2.js.map