(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{ZO8y:function(e,t,o){"use strict";o.r(t),o.d(t,"_frontmatter",(function(){return c})),o.d(t,"default",(function(){return p}));var n=o("Fcif"),a=o("+I+c"),i=(o("mXGw"),o("/FXl")),b=o("BIGe"),l=o("ZFoC"),s=o("iw6P"),c=(o("aD51"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/button/CButtonClose.mdx"}});var r={_frontmatter:c},d=b.a;function p(e){var t,o,p,u=e.components,m=Object(a.a)(e,["components"]);return Object(i.b)(d,Object(n.a)({},r,m,{components:u,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"example"},"Example"),Object(i.b)("p",null,"Provide an option to dismiss or close a component with ",Object(i.b)("inlineCode",{parentName:"p"},"<CButtonClose>"),". Default styling is limited, but highly customizable. Modify the Sass variables to replace the default ",Object(i.b)("inlineCode",{parentName:"p"},"background-image"),"."),Object(i.b)(l.c,{__position:0,__code:"<CButtonClose />",__scope:(t={props:m,DefaultLayout:b.a,Playground:l.c,Props:l.d,CButtonClose:s.a},t.DefaultLayout=b.a,t._frontmatter=c,t),mdxType:"Playground"},Object(i.b)(s.a,{mdxType:"CButtonClose"})),Object(i.b)("h2",{id:"disabled-state"},"Disabled state"),Object(i.b)("p",null,"Disabled close buttons change their ",Object(i.b)("inlineCode",{parentName:"p"},"opacity"),". We've also applied ",Object(i.b)("inlineCode",{parentName:"p"},"pointer-events: none")," and ",Object(i.b)("inlineCode",{parentName:"p"},"user-select: none")," to preventing hover and active states from triggering."),Object(i.b)(l.c,{__position:1,__code:"<CButtonClose disabled />",__scope:(o={props:m,DefaultLayout:b.a,Playground:l.c,Props:l.d,CButtonClose:s.a},o.DefaultLayout=b.a,o._frontmatter=c,o),mdxType:"Playground"},Object(i.b)(s.a,{disabled:!0,mdxType:"CButtonClose"})),Object(i.b)("h2",{id:"white-variant"},"White variant"),Object(i.b)("p",null,"Change the default ",Object(i.b)("inlineCode",{parentName:"p"},"<CButtonClose>")," to be white with the ",Object(i.b)("inlineCode",{parentName:"p"},"white")," boolean property."),Object(i.b)(l.c,{__position:2,__code:'<div className="bg-dark">\n  <CButtonClose white />\n  <CButtonClose white disabled />\n</div>',__scope:(p={props:m,DefaultLayout:b.a,Playground:l.c,Props:l.d,CButtonClose:s.a},p.DefaultLayout=b.a,p._frontmatter=c,p),mdxType:"Playground"},Object(i.b)("div",{className:"bg-dark"},Object(i.b)(s.a,{white:!0,mdxType:"CButtonClose"}),Object(i.b)(s.a,{white:!0,disabled:!0,mdxType:"CButtonClose"}))),Object(i.b)("h2",{id:"api"},"API"),Object(i.b)("h3",{id:"cbuttonclose"},"CButtonClose"),Object(i.b)(l.d,{of:s.a,mdxType:"Props"}))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/button/CButtonClose.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-button-c-button-close-mdx-0db1a52e459d48ed953c.js.map