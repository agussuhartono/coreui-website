(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"/QiG":function(e,o,n){"use strict";n.r(o),n.d(o,"_frontmatter",(function(){return d})),n.d(o,"default",(function(){return p}));var t=n("Fcif"),a=n("+I+c"),l=(n("IFzZ"),n("/FXl")),s=n("BIGe"),c=n("ZFoC"),C=n("CEMk"),m=n("soAG"),r=n("13Mt"),d=(n("aD51"),{});void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/layout/columns.mdx"}});var i={_frontmatter:d},b=s.a;function p(e){var o,n,p,u,f,O,x,y,j,w,h,g,T=e.components,N=Object(a.a)(e,["components"]);return Object(l.b)(b,Object(t.a)({},i,N,{components:T,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"how-they-work"},"How they work"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Columns build on the grid's flexbox architecture.")," Flexbox means we have options for changing individual columns and ",Object(l.b)("a",{parentName:"p",href:"./../grid#row-columns"},"modifying groups of columns at the row level"),". You choose how columns grow, shrink, or otherwise change.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"When building grid layouts, all content goes in columns.")," The hierarchy of CoreUI's grid goes from ",Object(l.b)("a",{parentName:"p",href:"./../containers"},"container")," to row to column to your content. On rare occasions, you may combine content and column, but be aware there can be unintended consequences.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"CoreUI for React.js includes predefined components for creating fast, responsive layouts.")," With ",Object(l.b)("a",{parentName:"p",href:"./../breakpoints"},"six breakpoints")," and a dozen columns at each grid tier, we have dozens of components already built for you to create your desired layouts. This can be disabled via Sass if you wish."))),Object(l.b)("h2",{id:"alignment"},"Alignment"),Object(l.b)("p",null,"Use flexbox alignment utilities to vertically and horizontally align columns."),Object(l.b)("h3",{id:"vertical-alignment"},"Vertical alignment"),Object(l.b)(c.c,{__position:0,__code:'<div className="docs-example-row docs-example-row-flex-cols">\n  <CContainer>\n    <CRow className="align-items-start">\n      <CCol>One of three columns</CCol>\n      <CCol>One of three columns</CCol>\n      <CCol>One of three columns</CCol>\n    </CRow>\n    <CRow className="align-items-center">\n      <CCol>One of three columns</CCol>\n      <CCol>One of three columns</CCol>\n      <CCol>One of three columns</CCol>\n    </CRow>\n    <CRow className="align-items-end">\n      <CCol>One of three columns</CCol>\n      <CCol>One of three columns</CCol>\n      <CCol>One of three columns</CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(o={props:N,DefaultLayout:s.a,Playground:c.c,Props:c.d,CCol:C.a,CContainer:m.a,CRow:r.a},o.DefaultLayout=s.a,o._frontmatter=d,o),mdxType:"Playground"},Object(l.b)("div",{className:"docs-example-row docs-example-row-flex-cols"},Object(l.b)(m.a,{mdxType:"CContainer"},Object(l.b)(r.a,{className:"align-items-start",mdxType:"CRow"},Object(l.b)(C.a,{mdxType:"CCol"},"One of three columns"),Object(l.b)(C.a,{mdxType:"CCol"},"One of three columns"),Object(l.b)(C.a,{mdxType:"CCol"},"One of three columns")),Object(l.b)(r.a,{className:"align-items-center",mdxType:"CRow"},Object(l.b)(C.a,{mdxType:"CCol"},"One of three columns"),Object(l.b)(C.a,{mdxType:"CCol"},"One of three columns"),Object(l.b)(C.a,{mdxType:"CCol"},"One of three columns")),Object(l.b)(r.a,{className:"align-items-end",mdxType:"CRow"},Object(l.b)(C.a,{mdxType:"CCol"},"One of three columns"),Object(l.b)(C.a,{mdxType:"CCol"},"One of three columns"),Object(l.b)(C.a,{mdxType:"CCol"},"One of three columns"))))),Object(l.b)(c.c,{__position:1,__code:'<div className="docs-example-row docs-example-row-flex-cols">\n  <CContainer>\n    <CRow>\n      <CCol className="align-self-start">One of three columns</CCol>\n      <CCol className="align-self-center">One of three columns</CCol>\n      <CCol className="align-self-end">One of three columns</CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(n={props:N,DefaultLayout:s.a,Playground:c.c,Props:c.d,CCol:C.a,CContainer:m.a,CRow:r.a},n.DefaultLayout=s.a,n._frontmatter=d,n),mdxType:"Playground"},Object(l.b)("div",{className:"docs-example-row docs-example-row-flex-cols"},Object(l.b)(m.a,{mdxType:"CContainer"},Object(l.b)(r.a,{mdxType:"CRow"},Object(l.b)(C.a,{className:"align-self-start",mdxType:"CCol"},"One of three columns"),Object(l.b)(C.a,{className:"align-self-center",mdxType:"CCol"},"One of three columns"),Object(l.b)(C.a,{className:"align-self-end",mdxType:"CCol"},"One of three columns"))))),Object(l.b)("h3",{id:"horizontal-alignment"},"Horizontal alignment"),Object(l.b)(c.c,{__position:2,__code:'<div className="docs-example-row">\n  <CContainer>\n    <CRow className="justify-content-start">\n      <CCol xs={4}>One of two columns</CCol>\n      <CCol xs={4}>One of two columns</CCol>\n    </CRow>\n    <CRow className="justify-content-center">\n      <CCol xs={4}>One of two columns</CCol>\n      <CCol xs={4}>One of two columns</CCol>\n    </CRow>\n    <CRow className="justify-content-end">\n      <CCol xs={4}>One of two columns</CCol>\n      <CCol xs={4}>One of two columns</CCol>\n    </CRow>\n    <CRow className="justify-content-around">\n      <CCol xs={4}>One of two columns</CCol>\n      <CCol xs={4}>One of two columns</CCol>\n    </CRow>\n    <CRow className="justify-content-between">\n      <CCol xs={4}>One of two columns</CCol>\n      <CCol xs={4}>One of two columns</CCol>\n    </CRow>\n    <CRow className="justify-content-evenly">\n      <CCol xs={4}>One of two columns</CCol>\n      <CCol xs={4}>One of two columns</CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(p={props:N,DefaultLayout:s.a,Playground:c.c,Props:c.d,CCol:C.a,CContainer:m.a,CRow:r.a},p.DefaultLayout=s.a,p._frontmatter=d,p),mdxType:"Playground"},Object(l.b)("div",{className:"docs-example-row"},Object(l.b)(m.a,{mdxType:"CContainer"},Object(l.b)(r.a,{className:"justify-content-start",mdxType:"CRow"},Object(l.b)(C.a,{xs:4,mdxType:"CCol"},"One of two columns"),Object(l.b)(C.a,{xs:4,mdxType:"CCol"},"One of two columns")),Object(l.b)(r.a,{className:"justify-content-center",mdxType:"CRow"},Object(l.b)(C.a,{xs:4,mdxType:"CCol"},"One of two columns"),Object(l.b)(C.a,{xs:4,mdxType:"CCol"},"One of two columns")),Object(l.b)(r.a,{className:"justify-content-end",mdxType:"CRow"},Object(l.b)(C.a,{xs:4,mdxType:"CCol"},"One of two columns"),Object(l.b)(C.a,{xs:4,mdxType:"CCol"},"One of two columns")),Object(l.b)(r.a,{className:"justify-content-around",mdxType:"CRow"},Object(l.b)(C.a,{xs:4,mdxType:"CCol"},"One of two columns"),Object(l.b)(C.a,{xs:4,mdxType:"CCol"},"One of two columns")),Object(l.b)(r.a,{className:"justify-content-between",mdxType:"CRow"},Object(l.b)(C.a,{xs:4,mdxType:"CCol"},"One of two columns"),Object(l.b)(C.a,{xs:4,mdxType:"CCol"},"One of two columns")),Object(l.b)(r.a,{className:"justify-content-evenly",mdxType:"CRow"},Object(l.b)(C.a,{xs:4,mdxType:"CCol"},"One of two columns"),Object(l.b)(C.a,{xs:4,mdxType:"CCol"},"One of two columns"))))),Object(l.b)("h3",{id:"column-wrapping"},"Column wrapping"),Object(l.b)("p",null,"If more than 12 columns are placed within a single row, each group of extra columns will, as one unit, wrap onto a new line."),Object(l.b)(c.c,{__position:3,__code:'<div className="docs-example-row">\n  <CContainer>\n    <CRow>\n      <CCol xs={9}>.col-9</CCol>\n      <CCol xs={4}>\n        .col-4\n        <br />\n        Since 9 + 4 = 13 &gt; 12, this 4-column-wide div gets wrapped onto a\n        new line as one contiguous unit.\n      </CCol>\n      <CCol xs={6}>\n        .col-6\n        <br />\n        Subsequent columns continue along the new line.\n      </CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(u={props:N,DefaultLayout:s.a,Playground:c.c,Props:c.d,CCol:C.a,CContainer:m.a,CRow:r.a},u.DefaultLayout=s.a,u._frontmatter=d,u),mdxType:"Playground"},Object(l.b)("div",{className:"docs-example-row"},Object(l.b)(m.a,{mdxType:"CContainer"},Object(l.b)(r.a,{mdxType:"CRow"},Object(l.b)(C.a,{xs:9,mdxType:"CCol"},".col-9"),Object(l.b)(C.a,{xs:4,mdxType:"CCol"},".col-4",Object(l.b)("br",null),"Since 9 + 4 = 13 > 12, this 4-column-wide div gets wrapped onto a new line as one contiguous unit."),Object(l.b)(C.a,{xs:6,mdxType:"CCol"},".col-6",Object(l.b)("br",null),"Subsequent columns continue along the new line."))))),Object(l.b)("h3",{id:"column-breaks"},"Column breaks"),Object(l.b)("p",null,"Breaking columns to a new line in flexbox requires a small hack: add an element with ",Object(l.b)("inlineCode",{parentName:"p"},"width: 100%")," wherever you want to wrap your columns to a new line. Normally this is accomplished with multiple ",Object(l.b)("inlineCode",{parentName:"p"},"<CRow>"),"s, but not every implementation method can account for this."),Object(l.b)(c.c,{__position:4,__code:'<div className="docs-example-row">\n  <CContainer>\n    <CRow>\n      <CCol xs={6} sm={3}>\n        .col-6 .col-sm-3\n      </CCol>\n      <CCol xs={6} sm={3}>\n        .col-6 .col-sm-3\n      </CCol>\n      <div className="w-100"></div>\n      <CCol xs={6} sm={3}>\n        .col-6 .col-sm-3\n      </CCol>\n      <CCol xs={6} sm={3}>\n        .col-6 .col-sm-3\n      </CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(f={props:N,DefaultLayout:s.a,Playground:c.c,Props:c.d,CCol:C.a,CContainer:m.a,CRow:r.a},f.DefaultLayout=s.a,f._frontmatter=d,f),mdxType:"Playground"},Object(l.b)("div",{className:"docs-example-row"},Object(l.b)(m.a,{mdxType:"CContainer"},Object(l.b)(r.a,{mdxType:"CRow"},Object(l.b)(C.a,{xs:6,sm:3,mdxType:"CCol"},".col-6 .col-sm-3"),Object(l.b)(C.a,{xs:6,sm:3,mdxType:"CCol"},".col-6 .col-sm-3"),Object(l.b)("div",{className:"w-100"}),Object(l.b)(C.a,{xs:6,sm:3,mdxType:"CCol"},".col-6 .col-sm-3"),Object(l.b)(C.a,{xs:6,sm:3,mdxType:"CCol"},".col-6 .col-sm-3"))))),Object(l.b)("p",null,"You may also apply this break at specific breakpoints with our ",Object(l.b)("a",{parentName:"p",href:"https://coreui.io/docs/utilities/display"},"responsive display utilities"),"."),Object(l.b)(c.c,{__position:5,__code:'<div className="docs-example-row">\n  <CContainer>\n    <CRow>\n      <CCol xs={6} sm={4}>\n        .col-6 .col-sm-4\n      </CCol>\n      <CCol xs={6} sm={4}>\n        .col-6 .col-sm-4\n      </CCol>\n      <div className="w-100 d-none d-md-block"></div>\n      <CCol xs={6} sm={4}>\n        .col-6 .col-sm-4\n      </CCol>\n      <CCol xs={6} sm={4}>\n        .col-6 .col-sm-4\n      </CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(O={props:N,DefaultLayout:s.a,Playground:c.c,Props:c.d,CCol:C.a,CContainer:m.a,CRow:r.a},O.DefaultLayout=s.a,O._frontmatter=d,O),mdxType:"Playground"},Object(l.b)("div",{className:"docs-example-row"},Object(l.b)(m.a,{mdxType:"CContainer"},Object(l.b)(r.a,{mdxType:"CRow"},Object(l.b)(C.a,{xs:6,sm:4,mdxType:"CCol"},".col-6 .col-sm-4"),Object(l.b)(C.a,{xs:6,sm:4,mdxType:"CCol"},".col-6 .col-sm-4"),Object(l.b)("div",{className:"w-100 d-none d-md-block"}),Object(l.b)(C.a,{xs:6,sm:4,mdxType:"CCol"},".col-6 .col-sm-4"),Object(l.b)(C.a,{xs:6,sm:4,mdxType:"CCol"},".col-6 .col-sm-4"))))),Object(l.b)("h2",{id:"reordering"},"Reordering"),Object(l.b)("h3",{id:"order-props"},"Order props"),Object(l.b)("p",null,"Use ",Object(l.b)("inlineCode",{parentName:"p"},"xs|sm|md|lg|xl|xxl={{ order: 1-5 }}")," props for controlling the ",Object(l.b)("strong",{parentName:"p"},"visual order")," of your content. These props are responsive, so you can set the ",Object(l.b)("inlineCode",{parentName:"p"},"order")," by breakpoint (e.g., ",Object(l.b)("inlineCode",{parentName:"p"},"xs={{ order: 1}} md={{ order: 2}}"),"). Includes support for ",Object(l.b)("inlineCode",{parentName:"p"},"1")," through ",Object(l.b)("inlineCode",{parentName:"p"},"5")," across all six grid tiers."),Object(l.b)(c.c,{__position:6,__code:'<div className="docs-example-row">\n  <CContainer>\n    <CRow>\n      <CCol>First in DOM, no order applied</CCol>\n      <CCol xs={{ span: true, order: 5 }}>\n        Second in DOM, with a larger order\n      </CCol>\n      <CCol xs={{ span: true, order: 1 }}>\n        Third in DOM, with an order of 1\n      </CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(x={props:N,DefaultLayout:s.a,Playground:c.c,Props:c.d,CCol:C.a,CContainer:m.a,CRow:r.a},x.DefaultLayout=s.a,x._frontmatter=d,x),mdxType:"Playground"},Object(l.b)("div",{className:"docs-example-row"},Object(l.b)(m.a,{mdxType:"CContainer"},Object(l.b)(r.a,{mdxType:"CRow"},Object(l.b)(C.a,{mdxType:"CCol"},"First in DOM, no order applied"),Object(l.b)(C.a,{xs:{span:!0,order:5},mdxType:"CCol"},"Second in DOM, with a larger order"),Object(l.b)(C.a,{xs:{span:!0,order:1},mdxType:"CCol"},"Third in DOM, with an order of 1"))))),Object(l.b)("p",null,"There are also responsive ",Object(l.b)("inlineCode",{parentName:"p"},"xs|sm|md|lg|xl|xxl={{ order: 'first' }}")," and ",Object(l.b)("inlineCode",{parentName:"p"},"xs|sm|md|lg|xl|xxl={{ order: 'last' }}")," props that change the ",Object(l.b)("inlineCode",{parentName:"p"},"order")," of an element by applying ",Object(l.b)("inlineCode",{parentName:"p"},"order: -1")," and ",Object(l.b)("inlineCode",{parentName:"p"},"order: 6"),", respectively. These values can also be intermixed with the numbered ",Object(l.b)("inlineCode",{parentName:"p"},"xs|sm|md|lg|xl|xxl={{ order: 1-5 }}")," values as needed."),Object(l.b)(c.c,{__position:7,__code:"<div className=\"docs-example-row\">\n  <CContainer>\n    <CRow>\n      <CCol xs={{ span: true, order: 'last' }}>\n        First in DOM, ordered last\n      </CCol>\n      <CCol>Second in DOM, unordered</CCol>\n      <CCol xs={{ span: true, order: 'first' }}>\n        Third in DOM, ordered first\n      </CCol>\n    </CRow>\n  </CContainer>\n</div>",__scope:(y={props:N,DefaultLayout:s.a,Playground:c.c,Props:c.d,CCol:C.a,CContainer:m.a,CRow:r.a},y.DefaultLayout=s.a,y._frontmatter=d,y),mdxType:"Playground"},Object(l.b)("div",{className:"docs-example-row"},Object(l.b)(m.a,{mdxType:"CContainer"},Object(l.b)(r.a,{mdxType:"CRow"},Object(l.b)(C.a,{xs:{span:!0,order:"last"},mdxType:"CCol"},"First in DOM, ordered last"),Object(l.b)(C.a,{mdxType:"CCol"},"Second in DOM, unordered"),Object(l.b)(C.a,{xs:{span:!0,order:"first"},mdxType:"CCol"},"Third in DOM, ordered first"))))),Object(l.b)("h3",{id:"offsetting-columns"},"Offsetting columns"),Object(l.b)("p",null,"You can offset grid columns in two ways: our responsive ",Object(l.b)("inlineCode",{parentName:"p"},"xs|sm|md|lg|xl|xxl={{ offset: 0-12 }}")," grid props and our ",Object(l.b)("a",{parentName:"p",href:"https://coreui.io/docs/utilities/spacing"},"margin utilities"),". Grid props are sized to match columns while margins are more useful for quick layouts where the width of the offset is variable."),Object(l.b)("h4",{id:"offset-prop"},"Offset prop"),Object(l.b)("p",null,"Move columns to the right using ",Object(l.b)("inlineCode",{parentName:"p"},"md={{ offset: * }}")," props. These props increase the left margin of a column by ",Object(l.b)("inlineCode",{parentName:"p"},"*")," columns. For example, ",Object(l.b)("inlineCode",{parentName:"p"},"md={{ offset: 4 }}")," moves ",Object(l.b)("inlineCode",{parentName:"p"},".col-md-4")," over four columns."),Object(l.b)(c.c,{__position:8,__code:'<div className="docs-example-row">\n  <CContainer>\n    <CRow>\n      <CCol md={4}>.col-md-4</CCol>\n      <CCol md={{ span: 4, offset: 4 }}>.col-md-4 .offset-md-4</CCol>\n    </CRow>\n    <CRow>\n      <CCol md={{ span: 3, offset: 3 }}>.col-md-3 .offset-md-3</CCol>\n      <CCol md={{ span: 3, offset: 3 }}>.col-md-3 .offset-md-3</CCol>\n    </CRow>\n    <CRow>\n      <CCol md={{ span: 6, offset: 3 }}>.col-md-6 .offset-md-3</CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(j={props:N,DefaultLayout:s.a,Playground:c.c,Props:c.d,CCol:C.a,CContainer:m.a,CRow:r.a},j.DefaultLayout=s.a,j._frontmatter=d,j),mdxType:"Playground"},Object(l.b)("div",{className:"docs-example-row"},Object(l.b)(m.a,{mdxType:"CContainer"},Object(l.b)(r.a,{mdxType:"CRow"},Object(l.b)(C.a,{md:4,mdxType:"CCol"},".col-md-4"),Object(l.b)(C.a,{md:{span:4,offset:4},mdxType:"CCol"},".col-md-4 .offset-md-4")),Object(l.b)(r.a,{mdxType:"CRow"},Object(l.b)(C.a,{md:{span:3,offset:3},mdxType:"CCol"},".col-md-3 .offset-md-3"),Object(l.b)(C.a,{md:{span:3,offset:3},mdxType:"CCol"},".col-md-3 .offset-md-3")),Object(l.b)(r.a,{mdxType:"CRow"},Object(l.b)(C.a,{md:{span:6,offset:3},mdxType:"CCol"},".col-md-6 .offset-md-3"))))),Object(l.b)(c.c,{__position:9,__code:'<div className="docs-example-row">\n  <CContainer>\n    <CRow>\n      <CCol sm={5} md={6}>\n        .col-sm-5 .col-md-6\n      </CCol>\n      <CCol sm={{ span: 5, offset: 2 }} md={{ span: 6, offset: 0 }}>\n        .col-sm-5 .offset-sm-2 .col-md-6 .offset-md-0\n      </CCol>\n    </CRow>\n    <CRow>\n      <CCol sm={6} md={5} lg={6}>\n        .col-sm-6 .col-md-5 .col-lg-6\n      </CCol>\n      <CCol sm={6} md={{ span: 5, offset: 2 }} lg={{ span: 6, offset: 0 }}>\n        .col-sm-6 .col-md-5 .offset-md-2 .col-lg-6 .offset-lg-0\n      </CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(w={props:N,DefaultLayout:s.a,Playground:c.c,Props:c.d,CCol:C.a,CContainer:m.a,CRow:r.a},w.DefaultLayout=s.a,w._frontmatter=d,w),mdxType:"Playground"},Object(l.b)("div",{className:"docs-example-row"},Object(l.b)(m.a,{mdxType:"CContainer"},Object(l.b)(r.a,{mdxType:"CRow"},Object(l.b)(C.a,{sm:5,md:6,mdxType:"CCol"},".col-sm-5 .col-md-6"),Object(l.b)(C.a,{sm:{span:5,offset:2},md:{span:6,offset:0},mdxType:"CCol"},".col-sm-5 .offset-sm-2 .col-md-6 .offset-md-0")),Object(l.b)(r.a,{mdxType:"CRow"},Object(l.b)(C.a,{sm:6,md:5,lg:6,mdxType:"CCol"},".col-sm-6 .col-md-5 .col-lg-6"),Object(l.b)(C.a,{sm:6,md:{span:5,offset:2},lg:{span:6,offset:0},mdxType:"CCol"},".col-sm-6 .col-md-5 .offset-md-2 .col-lg-6 .offset-lg-0"))))),Object(l.b)("h4",{id:"margin-utilities"},"Margin utilities"),Object(l.b)("p",null,"You can use margin utilities like ",Object(l.b)("inlineCode",{parentName:"p"},".me-auto")," to force sibling columns away from one another."),Object(l.b)(c.c,{__position:10,__code:'<div className="docs-example-row">\n  <CContainer>\n    <CRow>\n      <CCol md={4}>.col-md-4</CCol>\n      <CCol md={4} className="ms-auto">\n        .col-md-4 .ms-auto\n      </CCol>\n    </CRow>\n    <CRow>\n      <CCol md={3} className="ms-md-auto">\n        .col-md-3 .ms-md-auto\n      </CCol>\n      <CCol md={3} className="ms-md-auto">\n        .col-md-3 .ms-md-auto\n      </CCol>\n    </CRow>\n    <CRow>\n      <CCol xs="auto" className="me-auto">\n        .col-auto .me-auto\n      </CCol>\n      <CCol xs="auto">.col-auto</CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(h={props:N,DefaultLayout:s.a,Playground:c.c,Props:c.d,CCol:C.a,CContainer:m.a,CRow:r.a},h.DefaultLayout=s.a,h._frontmatter=d,h),mdxType:"Playground"},Object(l.b)("div",{className:"docs-example-row"},Object(l.b)(m.a,{mdxType:"CContainer"},Object(l.b)(r.a,{mdxType:"CRow"},Object(l.b)(C.a,{md:4,mdxType:"CCol"},".col-md-4"),Object(l.b)(C.a,{md:4,className:"ms-auto",mdxType:"CCol"},".col-md-4 .ms-auto")),Object(l.b)(r.a,{mdxType:"CRow"},Object(l.b)(C.a,{md:3,className:"ms-md-auto",mdxType:"CCol"},".col-md-3 .ms-md-auto"),Object(l.b)(C.a,{md:3,className:"ms-md-auto",mdxType:"CCol"},".col-md-3 .ms-md-auto")),Object(l.b)(r.a,{mdxType:"CRow"},Object(l.b)(C.a,{xs:"auto",className:"me-auto",mdxType:"CCol"},".col-auto .me-auto"),Object(l.b)(C.a,{xs:"auto",mdxType:"CCol"},".col-auto"))))),Object(l.b)("h2",{id:"standalone-column-component"},"Standalone column component"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"<CCol>")," component can also be used outside a ",Object(l.b)("inlineCode",{parentName:"p"},"<CRow>")," to give an element a specific width. Whenever column component are used as non direct children of a row, the paddings are omitted."),Object(l.b)(c.c,{__position:11,__code:'<CCol xs={3} className="bg-light p-3 border">\n  .col-3: width of 25%\n</CCol>\n<CCol sm={9} className="bg-light p-3 border">\n  .col-sm-9: width of 75% above sm breakpoint\n</CCol>',__scope:(g={props:N,DefaultLayout:s.a,Playground:c.c,Props:c.d,CCol:C.a,CContainer:m.a,CRow:r.a},g.DefaultLayout=s.a,g._frontmatter=d,g),mdxType:"Playground"},Object(l.b)(C.a,{xs:3,className:"bg-light p-3 border",mdxType:"CCol"},".col-3: width of 25%"),Object(l.b)(C.a,{sm:9,className:"bg-light p-3 border",mdxType:"CCol"},".col-sm-9: width of 75% above sm breakpoint")),Object(l.b)("h2",{id:"api"},"API"),Object(l.b)("h3",{id:"ccol"},"CCol"),Object(l.b)(c.d,{of:C.a,mdxType:"Props"}))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/layout/columns.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-layout-columns-mdx-7025775335597376707e.js.map