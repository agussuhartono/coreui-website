{"version":3,"sources":["webpack:///../docs/layout/gutters.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","CCol","CContainer","CRow","className","xs","gutterX","gutterY","span","gutter","cols","lg","sm","md","of","isMDXComponent"],"mappings":"0SAYaA,G,UAAe,S,yMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,gBAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,kBACE,GAAM,iBADR,iBAGA,sBACE,kBAAIC,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,sEAA8F,0BAAYA,WAAW,UAAvB,WAA9F,KAAnB,WAAmM,0BAAYA,WAAW,KAAvB,iBAAnM,QAAqQ,0BAAYA,WAAW,KAAvB,gBAArQ,qCAAmW,0BAAYA,WAAW,KAAvB,UAAnW,uEAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,oBAA4C,0BAAYA,WAAW,UAAvB,UAA5C,KAAyG,0BAAYA,WAAW,UAAvB,QAAzG,WAAnB,4CAAkP,iBAAGA,WAAW,IAC5P,KAAQ,4CADsO,8BAAlP,YAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,yCAAnB,4GAGJ,kBACE,GAAM,sBADR,sBAGA,qBAAG,0BAAYA,WAAW,KAAvB,iCAAH,mEAAgJ,0BAAYA,WAAW,KAAvB,gBAAhJ,OAAgN,0BAAYA,WAAW,KAAvB,sBAAhN,uMAAsd,0BAAYA,WAAW,KAAvB,SAAtd,KACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,0RAAiSC,SAAO,GACzUL,QACAH,kBACAS,eACAC,UACAC,SACAC,eACAC,UAPyU,gBAQzUb,IARyU,EASzUH,eATyU,GAUxUO,QAAQ,cACb,YAAC,IAAD,CAAYU,UAAU,OAAOV,QAAQ,cACnC,YAAC,IAAD,CAAMW,GAAI,CACJC,QAAS,GACRZ,QAAQ,QACb,YAAC,IAAD,CAAMA,QAAQ,QACZ,mBAAKU,UAAU,uBAAf,0BAEF,YAAC,IAAD,CAAMV,QAAQ,QACZ,mBAAKU,UAAU,uBAAf,6BAKJ,+EAA8D,0BAAYT,WAAW,KAAvB,UAA9D,aAA8H,0BAAYA,WAAW,KAAvB,oBAA9H,WACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,qSAA4SC,SAAO,GACpVL,QACAH,kBACAS,eACAC,UACAC,SACAC,eACAC,UAPoV,gBAQpVb,IARoV,EASpVH,eAToV,GAUnVO,QAAQ,cACb,YAAC,IAAD,CAAYU,UAAU,kBAAkBV,QAAQ,cAC9C,YAAC,IAAD,CAAMW,GAAI,CACJC,QAAS,GACRZ,QAAQ,QACb,YAAC,IAAD,CAAMA,QAAQ,QACZ,mBAAKU,UAAU,uBAAf,0BAEF,YAAC,IAAD,CAAMV,QAAQ,QACZ,mBAAKU,UAAU,uBAAf,6BAKJ,kBACE,GAAM,oBADR,oBAGA,qBAAG,0BAAYT,WAAW,KAAvB,iCAAH,iJAA8N,0BAAYA,WAAW,KAAvB,UAA9N,mEAAoV,0BAAYA,WAAW,KAAvB,UAApV,aAAoZ,0BAAYA,WAAW,KAAvB,oBAApZ,WACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,2iBAAsjBC,SAAO,GAC9lBL,QACAH,kBACAS,eACAC,UACAC,SACAC,eACAC,UAP8lB,gBAQ9lBb,IAR8lB,EAS9lBH,eAT8lB,GAU7lBO,QAAQ,cACb,YAAC,IAAD,CAAYU,UAAU,kBAAkBV,QAAQ,cAC9C,YAAC,IAAD,CAAMW,GAAI,CACJE,QAAS,GACRb,QAAQ,QACb,YAAC,IAAD,CAAMW,GAAI,CACJG,KAAM,GACLd,QAAQ,QACb,mBAAKU,UAAU,uBAAf,0BAEF,YAAC,IAAD,CAAMC,GAAI,CACJG,KAAM,GACLd,QAAQ,QACb,mBAAKU,UAAU,uBAAf,0BAEF,YAAC,IAAD,CAAMC,GAAI,CACJG,KAAM,GACLd,QAAQ,QACb,mBAAKU,UAAU,uBAAf,0BAEF,YAAC,IAAD,CAAMC,GAAI,CACJG,KAAM,GACLd,QAAQ,QACb,mBAAKU,UAAU,uBAAf,6BAKJ,kBACE,GAAM,gCADR,iCAGA,qBAAG,0BAAYT,WAAW,KAAvB,gCAAH,4JAAwO,0BAAYA,WAAW,KAAvB,oBAAxO,mBACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,8gBAAuhBC,SAAO,GAC/jBL,QACAH,kBACAS,eACAC,UACAC,SACAC,eACAC,UAP+jB,gBAQ/jBb,IAR+jB,EAS/jBH,eAT+jB,GAU9jBO,QAAQ,cACb,YAAC,IAAD,CAAYA,QAAQ,cAClB,YAAC,IAAD,CAAMW,GAAI,CACJI,OAAQ,GACPf,QAAQ,QACb,YAAC,IAAD,CAAMW,GAAI,CACJG,KAAM,GACLd,QAAQ,QACb,mBAAKU,UAAU,uBAAf,0BAEF,YAAC,IAAD,CAAMC,GAAI,CACJG,KAAM,GACLd,QAAQ,QACb,mBAAKU,UAAU,uBAAf,0BAEF,YAAC,IAAD,CAAMC,GAAI,CACJG,KAAM,GACLd,QAAQ,QACb,mBAAKU,UAAU,uBAAf,0BAEF,YAAC,IAAD,CAAMC,GAAI,CACJG,KAAM,GACLd,QAAQ,QACb,mBAAKU,UAAU,uBAAf,6BAKJ,kBACE,GAAM,uBADR,uBAGA,0DAAyC,iBAAGT,WAAW,IACnD,KAAQ,8BAD6B,eAAzC,0FAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,u8BAA49BC,SAAO,GACpgCL,QACAH,kBACAS,eACAC,UACAC,SACAC,eACAC,UAPogC,gBAQpgCb,IARogC,EASpgCH,eATogC,GAUngCO,QAAQ,cACb,YAAC,IAAD,CAAYA,QAAQ,cAClB,YAAC,IAAD,CAAMW,GAAI,CACJK,KAAM,EACND,OAAQ,GACPE,GAAI,CACLD,KAAM,EACND,OAAQ,GACPf,QAAQ,QACb,YAAC,IAAD,CAAMA,QAAQ,QACZ,mBAAKU,UAAU,uBAAf,eAEF,YAAC,IAAD,CAAMV,QAAQ,QACZ,mBAAKU,UAAU,uBAAf,eAEF,YAAC,IAAD,CAAMV,QAAQ,QACZ,mBAAKU,UAAU,uBAAf,eAEF,YAAC,IAAD,CAAMV,QAAQ,QACZ,mBAAKU,UAAU,uBAAf,eAEF,YAAC,IAAD,CAAMV,QAAQ,QACZ,mBAAKU,UAAU,uBAAf,eAEF,YAAC,IAAD,CAAMV,QAAQ,QACZ,mBAAKU,UAAU,uBAAf,eAEF,YAAC,IAAD,CAAMV,QAAQ,QACZ,mBAAKU,UAAU,uBAAf,eAEF,YAAC,IAAD,CAAMV,QAAQ,QACZ,mBAAKU,UAAU,uBAAf,eAEF,YAAC,IAAD,CAAMV,QAAQ,QACZ,mBAAKU,UAAU,uBAAf,eAEF,YAAC,IAAD,CAAMV,QAAQ,QACZ,mBAAKU,UAAU,uBAAf,kBAKJ,kBACE,GAAM,cADR,cAGA,qGAAoF,0BAAYT,WAAW,KAAvB,gCAApF,+BAA4L,0BAAYA,WAAW,KAAvB,UAA5L,UAAyP,0BAAYA,WAAW,KAAvB,UAAzP,uBAAmU,0BAAYA,WAAW,KAAvB,WAAnU,yCACA,qBAAG,sBAAQA,WAAW,KAAnB,gCAAH,oBAAwF,0BAAYA,WAAW,KAAvB,gBAAxF,OAAwJ,0BAAYA,WAAW,KAAvB,sBAAxJ,KACA,kMACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,sNAAyNC,SAAO,GACjQL,QACAH,kBACAS,eACAC,UACAC,SACAC,eACAC,UAPiQ,gBAQjQb,IARiQ,EASjQH,eATiQ,GAUhQO,QAAQ,cACb,mBAAKU,UAAU,oBACb,YAAC,IAAD,CAAMC,GAAI,CACJI,OAAQ,GACPf,QAAQ,QACb,YAAC,IAAD,CAAMkB,GAAI,EAAGC,GAAI,EAAGnB,QAAQ,QAA5B,uBACA,YAAC,IAAD,CAAMW,GAAI,EAAGQ,GAAI,EAAGnB,QAAQ,QAA5B,uBAIF,kBACE,GAAM,OADR,OAGA,kBACE,GAAM,cADR,cAGA,YAAC,IAAD,CAAOoB,GAAIZ,IAAYR,QAAQ,UAC/B,kBACE,GAAM,QADR,QAGA,YAAC,IAAD,CAAOoB,GAAIX,IAAMT,QAAQ,UACzB,kBACE,GAAM,QADR,QAGA,YAAC,IAAD,CAAOoB,GAAIb,IAAMP,QAAQ,gB,uMAK7BH,EAAWwB,gBAAiB","file":"component---docs-layout-gutters-mdx-5e81056f58abebf9640b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukaszholeczek/CoreUI/@coreui/react/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { CCol } from '../../src/components/grid/CCol.tsx';\nimport { CContainer } from '../../src/components/grid/CContainer.tsx';\nimport { CRow } from '../../src/components/grid/CRow.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h2 {...{\n      \"id\": \"how-they-work\"\n    }}>{`How they work`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Gutters are the gaps between column content, created by horizontal `}<inlineCode parentName=\"strong\">{`padding`}</inlineCode>{`.`}</strong>{` We set `}<inlineCode parentName=\"p\">{`padding-right`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`padding-left`}</inlineCode>{` on each column, and use negative `}<inlineCode parentName=\"p\">{`margin`}</inlineCode>{` to offset that at the start and end of each row to align content.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Gutters start at `}<inlineCode parentName=\"strong\">{`1.5rem`}</inlineCode>{` (`}<inlineCode parentName=\"strong\">{`24px`}</inlineCode>{`) wide.`}</strong>{` This allows us to match our grid to the `}<a parentName=\"p\" {...{\n            \"href\": \"https://coreui.io/docs/utilities/spacing\"\n          }}>{`padding and margin spacers`}</a>{` scale.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Gutters can be responsively adjusted.`}</strong>{` Use breakpoint-specific gutter props to modify horizontal gutters, vertical gutters, and all gutters.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"horizontal-gutters\"\n    }}>{`Horizontal gutters`}</h2>\n    <p><inlineCode parentName=\"p\">{`{breakpoint}={{ gutterX: * }}`}</inlineCode>{` props can be used to control the horizontal gutter widths. The `}<inlineCode parentName=\"p\">{`<CContainer>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`<CContainer fluid>`}</inlineCode>{` parent may need to be adjusted if larger gutters are used too to avoid unwanted overflow, using a matching padding utility. For example, in the following example we've increased the padding with `}<inlineCode parentName=\"p\">{`.px-4`}</inlineCode>{`:`}</p>\n    <Playground __position={0} __code={'<CContainer className=\\\"px-4\\\">\\n  <CRow xs={{ gutterX: 5 }}>\\n    <CCol>\\n      <div className=\\\"p-3 border bg-light\\\">Custom column padding</div>\\n    </CCol>\\n    <CCol>\\n      <div className=\\\"p-3 border bg-light\\\">Custom column padding</div>\\n    </CCol>\\n  </CRow>\\n</CContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCol,\n      CContainer,\n      CRow,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CContainer className=\"px-4\" mdxType=\"CContainer\">\n    <CRow xs={{\n          gutterX: 5\n        }} mdxType=\"CRow\">\n      <CCol mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Custom column padding</div>\n      </CCol>\n      <CCol mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Custom column padding</div>\n      </CCol>\n    </CRow>\n  </CContainer>\n    </Playground>\n    <p>{`An alternative solution is to add a wrapper around the `}<inlineCode parentName=\"p\">{`<CRow>`}</inlineCode>{` with the `}<inlineCode parentName=\"p\">{`.overflow-hidden`}</inlineCode>{` class:`}</p>\n    <Playground __position={1} __code={'<CContainer className=\\\"overflow-hidden\\\">\\n  <CRow xs={{ gutterX: 5 }}>\\n    <CCol>\\n      <div className=\\\"p-3 border bg-light\\\">Custom column padding</div>\\n    </CCol>\\n    <CCol>\\n      <div className=\\\"p-3 border bg-light\\\">Custom column padding</div>\\n    </CCol>\\n  </CRow>\\n</CContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCol,\n      CContainer,\n      CRow,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CContainer className=\"overflow-hidden\" mdxType=\"CContainer\">\n    <CRow xs={{\n          gutterX: 5\n        }} mdxType=\"CRow\">\n      <CCol mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Custom column padding</div>\n      </CCol>\n      <CCol mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Custom column padding</div>\n      </CCol>\n    </CRow>\n  </CContainer>\n    </Playground>\n    <h2 {...{\n      \"id\": \"vertical-gutters\"\n    }}>{`Vertical gutters`}</h2>\n    <p><inlineCode parentName=\"p\">{`{breakpoint}={{ gutterY: * }}`}</inlineCode>{` props can be used to control the vertical gutter widths. Like the horizontal gutters, the vertical gutters can cause some overflow below the `}<inlineCode parentName=\"p\">{`<CRow>`}</inlineCode>{` at the end of a page. If this occurs, you add a wrapper around `}<inlineCode parentName=\"p\">{`<CRow>`}</inlineCode>{` with the `}<inlineCode parentName=\"p\">{`.overflow-hidden`}</inlineCode>{` class:`}</p>\n    <Playground __position={2} __code={'<CContainer className=\\\"overflow-hidden\\\">\\n  <CRow xs={{ gutterY: 5 }}>\\n    <CCol xs={{ span: 6 }}>\\n      <div className=\\\"p-3 border bg-light\\\">Custom column padding</div>\\n    </CCol>\\n    <CCol xs={{ span: 6 }}>\\n      <div className=\\\"p-3 border bg-light\\\">Custom column padding</div>\\n    </CCol>\\n    <CCol xs={{ span: 6 }}>\\n      <div className=\\\"p-3 border bg-light\\\">Custom column padding</div>\\n    </CCol>\\n    <CCol xs={{ span: 6 }}>\\n      <div className=\\\"p-3 border bg-light\\\">Custom column padding</div>\\n    </CCol>\\n  </CRow>\\n</CContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCol,\n      CContainer,\n      CRow,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CContainer className=\"overflow-hidden\" mdxType=\"CContainer\">\n    <CRow xs={{\n          gutterY: 5\n        }} mdxType=\"CRow\">\n      <CCol xs={{\n            span: 6\n          }} mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Custom column padding</div>\n      </CCol>\n      <CCol xs={{\n            span: 6\n          }} mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Custom column padding</div>\n      </CCol>\n      <CCol xs={{\n            span: 6\n          }} mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Custom column padding</div>\n      </CCol>\n      <CCol xs={{\n            span: 6\n          }} mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Custom column padding</div>\n      </CCol>\n    </CRow>\n  </CContainer>\n    </Playground>\n    <h2 {...{\n      \"id\": \"horizontal--vertical-gutters\"\n    }}>{`Horizontal & vertical gutters`}</h2>\n    <p><inlineCode parentName=\"p\">{`{breakpoint}={{ gutter: * }}`}</inlineCode>{` props can be used to control the horizontal gutter widths, for the following example we use a smaller gutter width, so there won't be a need to add the `}<inlineCode parentName=\"p\">{`.overflow-hidden`}</inlineCode>{` wrapper class.`}</p>\n    <Playground __position={3} __code={'<CContainer>\\n  <CRow xs={{ gutter: 2 }}>\\n    <CCol xs={{ span: 6 }}>\\n      <div className=\\\"p-3 border bg-light\\\">Custom column padding</div>\\n    </CCol>\\n    <CCol xs={{ span: 6 }}>\\n      <div className=\\\"p-3 border bg-light\\\">Custom column padding</div>\\n    </CCol>\\n    <CCol xs={{ span: 6 }}>\\n      <div className=\\\"p-3 border bg-light\\\">Custom column padding</div>\\n    </CCol>\\n    <CCol xs={{ span: 6 }}>\\n      <div className=\\\"p-3 border bg-light\\\">Custom column padding</div>\\n    </CCol>\\n  </CRow>\\n</CContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCol,\n      CContainer,\n      CRow,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CContainer mdxType=\"CContainer\">\n    <CRow xs={{\n          gutter: 2\n        }} mdxType=\"CRow\">\n      <CCol xs={{\n            span: 6\n          }} mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Custom column padding</div>\n      </CCol>\n      <CCol xs={{\n            span: 6\n          }} mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Custom column padding</div>\n      </CCol>\n      <CCol xs={{\n            span: 6\n          }} mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Custom column padding</div>\n      </CCol>\n      <CCol xs={{\n            span: 6\n          }} mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Custom column padding</div>\n      </CCol>\n    </CRow>\n  </CContainer>\n    </Playground>\n    <h2 {...{\n      \"id\": \"row-columns-gutters\"\n    }}>{`Row columns gutters`}</h2>\n    <p>{`Gutter props can also be added to `}<a parentName=\"p\" {...{\n        \"href\": \"../layout/grid#row-columns\"\n      }}>{`row columns`}</a>{`. In the following example, we use responsive row columns and responsive gutter props.`}</p>\n    <Playground __position={4} __code={'<CContainer>\\n  <CRow xs={{ cols: 2, gutter: 2 }} lg={{ cols: 5, gutter: 3 }}>\\n    <CCol>\\n      <div className=\\\"p-3 border bg-light\\\">Row column</div>\\n    </CCol>\\n    <CCol>\\n      <div className=\\\"p-3 border bg-light\\\">Row column</div>\\n    </CCol>\\n    <CCol>\\n      <div className=\\\"p-3 border bg-light\\\">Row column</div>\\n    </CCol>\\n    <CCol>\\n      <div className=\\\"p-3 border bg-light\\\">Row column</div>\\n    </CCol>\\n    <CCol>\\n      <div className=\\\"p-3 border bg-light\\\">Row column</div>\\n    </CCol>\\n    <CCol>\\n      <div className=\\\"p-3 border bg-light\\\">Row column</div>\\n    </CCol>\\n    <CCol>\\n      <div className=\\\"p-3 border bg-light\\\">Row column</div>\\n    </CCol>\\n    <CCol>\\n      <div className=\\\"p-3 border bg-light\\\">Row column</div>\\n    </CCol>\\n    <CCol>\\n      <div className=\\\"p-3 border bg-light\\\">Row column</div>\\n    </CCol>\\n    <CCol>\\n      <div className=\\\"p-3 border bg-light\\\">Row column</div>\\n    </CCol>\\n  </CRow>\\n</CContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCol,\n      CContainer,\n      CRow,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CContainer mdxType=\"CContainer\">\n    <CRow xs={{\n          cols: 2,\n          gutter: 2\n        }} lg={{\n          cols: 5,\n          gutter: 3\n        }} mdxType=\"CRow\">\n      <CCol mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Row column</div>\n      </CCol>\n      <CCol mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Row column</div>\n      </CCol>\n      <CCol mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Row column</div>\n      </CCol>\n      <CCol mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Row column</div>\n      </CCol>\n      <CCol mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Row column</div>\n      </CCol>\n      <CCol mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Row column</div>\n      </CCol>\n      <CCol mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Row column</div>\n      </CCol>\n      <CCol mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Row column</div>\n      </CCol>\n      <CCol mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Row column</div>\n      </CCol>\n      <CCol mdxType=\"CCol\">\n        <div className=\"p-3 border bg-light\">Row column</div>\n      </CCol>\n    </CRow>\n  </CContainer>\n    </Playground>\n    <h2 {...{\n      \"id\": \"no-gutters\"\n    }}>{`No gutters`}</h2>\n    <p>{`The gutters between columns in our predefined grid props can be removed with `}<inlineCode parentName=\"p\">{`{breakpoint}={{ gutter: 0 }}`}</inlineCode>{`. This removes the negative `}<inlineCode parentName=\"p\">{`margin`}</inlineCode>{`s from `}<inlineCode parentName=\"p\">{`<CRow>`}</inlineCode>{` and the horizontal `}<inlineCode parentName=\"p\">{`padding`}</inlineCode>{` from all immediate children columns.`}</p>\n    <p><strong parentName=\"p\">{`Need an edge-to-edge design?`}</strong>{` Drop the parent `}<inlineCode parentName=\"p\">{`<CContainer>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`<CContainer fluid>`}</inlineCode>{`.`}</p>\n    <p>{`In practice, here's how it looks. Note you can continue to use this with all other predefined grid props (including column widths, responsive tiers, reorders, and more).`}</p>\n    <Playground __position={5} __code={'<div className=\\\"docs-example-row\\\">\\n  <CRow xs={{ gutter: 0 }}>\\n    <CCol sm={6} md={8}>\\n      .col-sm-6 .col-md-8\\n    </CCol>\\n    <CCol xs={6} md={4}>\\n      .col-6 .col-md-4\\n    </CCol>\\n  </CRow>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCol,\n      CContainer,\n      CRow,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div className=\"docs-example-row\">\n    <CRow xs={{\n          gutter: 0\n        }} mdxType=\"CRow\">\n      <CCol sm={6} md={8} mdxType=\"CCol\">.col-sm-6 .col-md-8</CCol>\n      <CCol xs={6} md={4} mdxType=\"CCol\">.col-6 .col-md-4</CCol>\n    </CRow>\n  </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <h3 {...{\n      \"id\": \"ccontainer\"\n    }}>{`CContainer`}</h3>\n    <Props of={CContainer} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"crow\"\n    }}>{`CRow`}</h3>\n    <Props of={CRow} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"ccol\"\n    }}>{`CCol`}</h3>\n    <Props of={CCol} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}