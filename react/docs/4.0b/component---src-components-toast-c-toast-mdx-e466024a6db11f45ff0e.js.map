{"version":3,"sources":["webpack:///../src/components/toast/CToast.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","useState","useRef","Playground","Props","CButton","CButtonClose","CToast","CToastBody","CToastClose","CToastHeader","CToaster","title","autohide","close","className","width","height","xmlns","preserveAspectRatio","focusable","role","fill","toast","addToast","toaster","exampleToast","onClick","ref","push","placement","type","color","size","component","white","of","isMDXComponent"],"mappings":"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","file":"component---src-components-toast-c-toast-mdx-e466024a6db11f45ff0e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukaszholeczek/CoreUI/@coreui/react/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState, useRef } from 'react';\nimport { Playground, Props } from 'docz';\nimport { CButton } from '../button/CButton.tsx';\nimport { CButtonClose } from '../button/CButtonClose.tsx';\nimport { CToast } from './CToast.tsx';\nimport { CToastBody } from './CToastBody.tsx';\nimport { CToastClose } from './CToastClose.tsx';\nimport { CToastHeader } from './CToastHeader.tsx';\nimport { CToaster } from './CToaster.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`React toasts are lightweight notifications designed to mimic the push notifications that have been popularized by mobile and desktop operating systems. They’re built with flexbox, so they’re easy to align and position.`}</p>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Things to know when using the toast plugin:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Toasts are opt-in for performance reasons, so `}<strong parentName=\"li\">{`you must initialize them yourself`}</strong>{`.`}</li>\n      <li parentName=\"ul\">{`Toasts will automatically hide if you do not specify `}<inlineCode parentName=\"li\">{`autohide: false`}</inlineCode>{`.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"basic\"\n    }}>{`Basic`}</h3>\n    <p>{`To encourage extensible and predictable toasts, we recommend a header and body. Toast headers use `}<inlineCode parentName=\"p\">{`display: flex`}</inlineCode>{`, allowing easy alignment of content thanks to our margin and flexbox utilities.`}</p>\n    <p>{`Toasts are as flexible as you need and have very little required markup. At a minimum, we require a single element to contain your \"toasted\" content and strongly encourage a dismiss button.`}</p>\n    <Playground __position={0} __code={'<CToast title=\\\"CoreUI for React.js\\\" autohide={false}>\\n  <CToastHeader close>\\n    <svg\\n      className=\\\"rounded me-2\\\"\\n      width=\\\"20\\\"\\n      height=\\\"20\\\"\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      preserveAspectRatio=\\\"xMidYMid slice\\\"\\n      focusable=\\\"false\\\"\\n      role=\\\"img\\\"\\n    >\\n      <rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"#007aff\\\"></rect>\\n    </svg>\\n    <strong className=\\\"me-auto\\\">CoreUI for React.js</strong>\\n    <small>7 min ago</small>\\n  </CToastHeader>\\n  <CToastBody>Hello, world! This is a toast message.</CToastBody>\\n</CToast>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CButtonClose,\n      CToast,\n      CToastBody,\n      CToastClose,\n      CToastHeader,\n      CToaster,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CToast title=\"CoreUI for React.js\" autohide={false} mdxType=\"CToast\">\n    <CToastHeader close mdxType=\"CToastHeader\">\n      <svg className=\"rounded me-2\" width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\n        <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n      </svg>\n      <strong className=\"me-auto\">CoreUI for React.js</strong>\n      <small>7 min ago</small>\n    </CToastHeader>\n    <CToastBody mdxType=\"CToastBody\">Hello, world! This is a toast message.</CToastBody>\n  </CToast>\n    </Playground>\n    <Playground __position={1} __code={'() => {\\n  const [toast, addToast] = useState(0)\\n  const toaster = useRef()\\n  const exampleToast = (\\n    <CToast title=\\\"CoreUI for React.js\\\">\\n      <CToastHeader close>\\n        <svg\\n          className=\\\"rounded me-2\\\"\\n          width=\\\"20\\\"\\n          height=\\\"20\\\"\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n          preserveAspectRatio=\\\"xMidYMid slice\\\"\\n          focusable=\\\"false\\\"\\n          role=\\\"img\\\"\\n        >\\n          <rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"#007aff\\\"></rect>\\n        </svg>\\n        <strong className=\\\"me-auto\\\">CoreUI for React.js</strong>\\n        <small>7 min ago</small>\\n      </CToastHeader>\\n      <CToastBody>Hello, world! This is a toast message.</CToastBody>\\n    </CToast>\\n  )\\n  return (\\n    <>\\n      <CButton onClick={() => addToast(exampleToast)}>Send a toast</CButton>\\n      <CToaster ref={toaster} push={toast} placement=\\\"top-end\\\" />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CButtonClose,\n      CToast,\n      CToastBody,\n      CToastClose,\n      CToastHeader,\n      CToaster,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [toast, addToast] = useState(0);\n        const toaster = useRef();\n        const exampleToast = <CToast title=\"CoreUI for React.js\" mdxType=\"CToast\">\n        <CToastHeader close mdxType=\"CToastHeader\">\n          <svg className=\"rounded me-2\" width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\n            <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n          </svg>\n          <strong className=\"me-auto\">CoreUI for React.js</strong>\n          <small>7 min ago</small>\n        </CToastHeader>\n        <CToastBody mdxType=\"CToastBody\">Hello, world! This is a toast message.</CToastBody>\n      </CToast>;\n        return <>\n        <CButton onClick={() => addToast(exampleToast)} mdxType=\"CButton\">Send a toast</CButton>\n        <CToaster ref={toaster} push={toast} placement=\"top-end\" mdxType=\"CToaster\" />\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"translucent\"\n    }}>{`Translucent`}</h3>\n    <p>{`Toasts are slightly translucent to blend in with what's below them.`}</p>\n    <Playground __position={2} __code={'<div className=\\\"bg-dark p-3\\\">\\n  <CToast title=\\\"CoreUI for React.js\\\" autohide={false}>\\n    <CToastHeader close>\\n      <svg\\n        className=\\\"rounded me-2\\\"\\n        width=\\\"20\\\"\\n        height=\\\"20\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n        preserveAspectRatio=\\\"xMidYMid slice\\\"\\n        focusable=\\\"false\\\"\\n        role=\\\"img\\\"\\n      >\\n        <rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"#007aff\\\"></rect>\\n      </svg>\\n      <strong className=\\\"me-auto\\\">CoreUI for React.js</strong>\\n      <small>7 min ago</small>\\n    </CToastHeader>\\n    <CToastBody>Hello, world! This is a toast message.</CToastBody>\\n  </CToast>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CButtonClose,\n      CToast,\n      CToastBody,\n      CToastClose,\n      CToastHeader,\n      CToaster,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div className=\"bg-dark p-3\">\n    <CToast title=\"CoreUI for React.js\" autohide={false} mdxType=\"CToast\">\n      <CToastHeader close mdxType=\"CToastHeader\">\n        <svg className=\"rounded me-2\" width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\n          <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n        </svg>\n        <strong className=\"me-auto\">CoreUI for React.js</strong>\n        <small>7 min ago</small>\n      </CToastHeader>\n      <CToastBody mdxType=\"CToastBody\">Hello, world! This is a toast message.</CToastBody>\n    </CToast>\n  </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"stacking\"\n    }}>{`Stacking`}</h3>\n    <p>{`You can stack toasts by wrapping them in a toast container, which will vertically add some spacing.`}</p>\n    <Playground __position={3} __code={'<CToaster>\\n  <CToast title=\\\"CoreUI for React.js\\\" autohide={false}>\\n    <CToastHeader close>\\n      <svg\\n        className=\\\"rounded me-2\\\"\\n        width=\\\"20\\\"\\n        height=\\\"20\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n        preserveAspectRatio=\\\"xMidYMid slice\\\"\\n        focusable=\\\"false\\\"\\n        role=\\\"img\\\"\\n      >\\n        <rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"#007aff\\\"></rect>\\n      </svg>\\n      <strong className=\\\"me-auto\\\">CoreUI for React.js</strong>\\n      <small>7 min ago</small>\\n    </CToastHeader>\\n    <CToastBody>Hello, world! This is a toast message.</CToastBody>\\n  </CToast>\\n  <CToast title=\\\"CoreUI for React.js\\\" autohide={false}>\\n    <CToastHeader close>\\n      <svg\\n        className=\\\"rounded me-2\\\"\\n        width=\\\"20\\\"\\n        height=\\\"20\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n        preserveAspectRatio=\\\"xMidYMid slice\\\"\\n        focusable=\\\"false\\\"\\n        role=\\\"img\\\"\\n      >\\n        <rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"#007aff\\\"></rect>\\n      </svg>\\n      <strong className=\\\"me-auto\\\">CoreUI for React.js</strong>\\n      <small>7 min ago</small>\\n    </CToastHeader>\\n    <CToastBody>Hello, world! This is a toast message.</CToastBody>\\n  </CToast>\\n</CToaster>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CButtonClose,\n      CToast,\n      CToastBody,\n      CToastClose,\n      CToastHeader,\n      CToaster,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CToaster mdxType=\"CToaster\">\n    <CToast title=\"CoreUI for React.js\" autohide={false} mdxType=\"CToast\">\n      <CToastHeader close mdxType=\"CToastHeader\">\n        <svg className=\"rounded me-2\" width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\n          <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n        </svg>\n        <strong className=\"me-auto\">CoreUI for React.js</strong>\n        <small>7 min ago</small>\n      </CToastHeader>\n      <CToastBody mdxType=\"CToastBody\">Hello, world! This is a toast message.</CToastBody>\n    </CToast>\n    <CToast title=\"CoreUI for React.js\" autohide={false} mdxType=\"CToast\">\n      <CToastHeader close mdxType=\"CToastHeader\">\n        <svg className=\"rounded me-2\" width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\n          <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n        </svg>\n        <strong className=\"me-auto\">CoreUI for React.js</strong>\n        <small>7 min ago</small>\n      </CToastHeader>\n      <CToastBody mdxType=\"CToastBody\">Hello, world! This is a toast message.</CToastBody>\n    </CToast>\n  </CToaster>\n    </Playground>\n    <h3 {...{\n      \"id\": \"custom-content\"\n    }}>{`Custom content`}</h3>\n    <p>{`Customize your toasts by removing sub-components, tweaking them with `}<a parentName=\"p\" {...{\n        \"href\": \"https://coreui.io/docs/4.0/utilities/api\"\n      }}>{`utilities`}</a>{`, or by adding your own markup. Here we've created a simpler toast by removing the default `}<inlineCode parentName=\"p\">{`<CToastHeader>`}</inlineCode>{`, adding a custom hide icon from `}<a parentName=\"p\" {...{\n        \"href\": \"https://icons.coreui.io\"\n      }}>{`CoreUI Icons`}</a>{`, and using some `}<a parentName=\"p\" {...{\n        \"href\": \"https://coreui.io/docs/4.0/utilities/flex\"\n      }}>{`flexbox utilities`}</a>{` to adjust the layout.`}</p>\n    <Playground __position={4} __code={'<CToast autohide={false} className=\\\"align-items-center\\\">\\n  <div className=\\\"d-flex\\\">\\n    <CToastBody>Hello, world! This is a toast message.</CToastBody>\\n    <CToastClose className=\\\"me-2 m-auto\\\" />\\n  </div>\\n</CToast>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CButtonClose,\n      CToast,\n      CToastBody,\n      CToastClose,\n      CToastHeader,\n      CToaster,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CToast autohide={false} className=\"align-items-center\" mdxType=\"CToast\">\n    <div className=\"d-flex\">\n      <CToastBody mdxType=\"CToastBody\">Hello, world! This is a toast message.</CToastBody>\n      <CToastClose className=\"me-2 m-auto\" mdxType=\"CToastClose\" />\n    </div>\n  </CToast>\n    </Playground>\n    <p>{`Alternatively, you can also add additional controls and components to toasts.`}</p>\n    <Playground __position={5} __code={'<CToast autohide={false}>\\n  <CToastBody>\\n    Hello, world! This is a toast message.\\n    <div className=\\\"mt-2 pt-2 border-top\\\">\\n      <CButton type=\\\"button\\\" color=\\\"primary\\\" size=\\\"sm\\\">\\n        Take action\\n      </CButton>\\n      <CToastClose\\n        component={CButton}\\n        color=\\\"secondary\\\"\\n        size=\\\"sm\\\"\\n        className=\\\"ms-1\\\"\\n      >\\n        Close\\n      </CToastClose>\\n    </div>\\n  </CToastBody>\\n</CToast>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CButtonClose,\n      CToast,\n      CToastBody,\n      CToastClose,\n      CToastHeader,\n      CToaster,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CToast autohide={false} mdxType=\"CToast\">\n    <CToastBody mdxType=\"CToastBody\">\n      Hello, world! This is a toast message.\n      <div className=\"mt-2 pt-2 border-top\">\n        <CButton type=\"button\" color=\"primary\" size=\"sm\" mdxType=\"CButton\">\n          Take action\n        </CButton>\n        <CToastClose component={CButton} color=\"secondary\" size=\"sm\" className=\"ms-1\" mdxType=\"CToastClose\">Close</CToastClose>\n      </div>\n    </CToastBody>\n  </CToast>\n    </Playground>\n    <h3 {...{\n      \"id\": \"color-schemes\"\n    }}>{`Color schemes`}</h3>\n    <p>{`Building on the above example, you can create different toast color schemes with our `}<a parentName=\"p\" {...{\n        \"href\": \"https://coreui.io/docs/4.0/utilities/colors\"\n      }}>{`color`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://coreui.io/docs/4.0//utilities/background\"\n      }}>{`background`}</a>{` utilities. Here we've set `}<inlineCode parentName=\"p\">{`color=\"primary\"`}</inlineCode>{` and added `}<inlineCode parentName=\"p\">{`.text-white`}</inlineCode>{` class to the `}<inlineCode parentName=\"p\">{`<Ctoast>`}</inlineCode>{`, and then set `}<inlineCode parentName=\"p\">{`white`}</inlineCode>{` property to our close button. For a crisp edge, we remove the default border with `}<inlineCode parentName=\"p\">{`.border-0`}</inlineCode>{`.`}</p>\n    <Playground __position={6} __code={'<CToast\\n  autohide={false}\\n  color=\\\"primary\\\"\\n  className=\\\"text-white align-items-center\\\"\\n>\\n  <div className=\\\"d-flex\\\">\\n    <CToastBody>Hello, world! This is a toast message.</CToastBody>\\n    <CToastClose className=\\\"me-2 m-auto\\\" white />\\n  </div>\\n</CToast>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CButtonClose,\n      CToast,\n      CToastBody,\n      CToastClose,\n      CToastHeader,\n      CToaster,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CToast autohide={false} color=\"primary\" className=\"text-white align-items-center\" mdxType=\"CToast\">\n    <div className=\"d-flex\">\n      <CToastBody mdxType=\"CToastBody\">Hello, world! This is a toast message.</CToastBody>\n      <CToastClose className=\"me-2 m-auto\" white mdxType=\"CToastClose\" />\n    </div>\n  </CToast>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <h3 {...{\n      \"id\": \"ctoast\"\n    }}>{`CToast`}</h3>\n    <Props of={CToast} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"ctoastheader\"\n    }}>{`CToastHeader`}</h3>\n    <Props of={CToastHeader} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"ctoastbody\"\n    }}>{`CToastBody`}</h3>\n    <Props of={CToastBody} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"ctoastclose\"\n    }}>{`CToastClose`}</h3>\n    <Props of={CToastClose} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"ctoaster\"\n    }}>{`CToaster`}</h3>\n    <Props of={CToaster} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}