{"version":3,"sources":["webpack:///../src/components/header/CHeader.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","useState","CContainer","CCollapse","CDropdown","CDropdownDivider","CDropdownHeader","CDropdownItem","CDropdownItemPlain","CDropdownMenu","CDropdownToggle","CNav","CNavItem","CNavLink","CHeader","CHeaderBrand","CHeaderDivider","CHeaderNav","CHeaderText","CHeaderToggler","visible","setVisible","fluid","href","onClick","className","active","variant","color","disabled","of","isMDXComponent"],"mappings":"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","file":"component---src-components-header-c-header-mdx-c0aeefc8e35eb7e78a8c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukaszholeczek/CoreUI/@coreui/react/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { useState } from 'react';\nimport { CContainer } from '../grid/CContainer.tsx';\nimport { CCollapse } from '../collapse/CCollapse.tsx';\nimport { CDropdown } from '../dropdown/CDropdown.tsx';\nimport { CDropdownDivider } from '../dropdown/CDropdownDivider.tsx';\nimport { CDropdownHeader } from '../dropdown/CDropdownHeader.tsx';\nimport { CDropdownItem } from '../dropdown/CDropdownItem.tsx';\nimport { CDropdownItemPlain } from '../dropdown/CDropdownItemPlain.tsx';\nimport { CDropdownMenu } from '../dropdown/CDropdownMenu.tsx';\nimport { CDropdownToggle } from '../dropdown/CDropdownToggle.tsx';\nimport { CNav } from '../nav/CNav.tsx';\nimport { CNavItem } from '../nav/CNavItem.tsx';\nimport { CNavLink } from '../nav/CNavLink.tsx';\nimport { CHeader } from './CHeader.tsx';\nimport { CHeaderBrand } from './CHeaderBrand.tsx';\nimport { CHeaderDivider } from './CHeaderDivider.tsx';\nimport { CHeaderNav } from './CHeaderNav.tsx';\nimport { CHeaderText } from './CHeaderText.tsx';\nimport { CHeaderToggler } from './CHeaderToggler.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`Here's what you need to know before getting started with the header:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Headers require a wrapping `}<inlineCode parentName=\"li\">{`.header`}</inlineCode>{` with `}<inlineCode parentName=\"li\">{`.header-expand{-sm|-md|-lg|-xl|-xxl}`}</inlineCode>{` for responsive collapsing and `}<a parentName=\"li\" {...{\n          \"href\": \"#color-schemes\"\n        }}>{`color scheme`}</a>{` classes.`}</li>\n      <li parentName=\"ul\">{`Headers and their contents are fluid by default. Change the `}<a parentName=\"li\" {...{\n          \"href\": \"#containers\"\n        }}>{`container`}</a>{` to limit their horizontal width in different ways.`}</li>\n      <li parentName=\"ul\">{`Use our `}{`[spacing]`}{`(`}<a parentName=\"li\" {...{\n          \"href\": \"https://coreui.io/docs/utilities/spacing%22\"\n        }}>{`https://coreui.io/docs/utilities/spacing\"`}</a>{` >}}) and `}<a parentName=\"li\" {...{\n          \"href\": \"https://coreui.io/docs/4.0/utilities/flex\"\n        }}>{`flex`}</a>{` utility classes for controlling spacing and alignment within headers.`}</li>\n      <li parentName=\"ul\">{`Headers are responsive by default, but you can easily modify them to change that. Responsive behavior depends on our Collapse JavaScript plugin.`}</li>\n      <li parentName=\"ul\">{`Ensure accessibility by using a `}<inlineCode parentName=\"li\">{`<nav>`}</inlineCode>{` element or, if using a more generic element such as a `}<inlineCode parentName=\"li\">{`<div>`}</inlineCode>{`, add a `}<inlineCode parentName=\"li\">{`role=\"navigation\"`}</inlineCode>{` to every header to explicitly identify it as a landmark region for users of assistive technologies.`}</li>\n      <li parentName=\"ul\">{`Indicate the current item by using `}<inlineCode parentName=\"li\">{`aria-current=\"page\"`}</inlineCode>{` for the current page or `}<inlineCode parentName=\"li\">{`aria-current=\"true\"`}</inlineCode>{` for the current item in a set.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"supported-content\"\n    }}>{`Supported content`}</h2>\n    <p>{`Headers come with built-in support for a handful of sub-components. Choose from the following as needed:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.header-brand`}</inlineCode>{` for your company, product, or project name.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.header-nav`}</inlineCode>{` for a full-height and lightweight navigation (including support for dropdowns).`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.header-toggler`}</inlineCode>{` for use with our collapse plugin and other `}<a parentName=\"li\" {...{\n          \"href\": \"#responsive-behaviors\"\n        }}>{`navigation toggling`}</a>{` behaviors.`}</li>\n      <li parentName=\"ul\">{`Flex and spacing utilities for any form controls and actions.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.header-text`}</inlineCode>{` for adding vertically centered strings of text.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.collapse.header-collapse`}</inlineCode>{` for grouping and hiding header contents by a parent breakpoint.`}</li>\n    </ul>\n    <p>{`Here's an example of all the sub-components included in a responsive light-themed header that automatically collapses at the `}<inlineCode parentName=\"p\">{`lg`}</inlineCode>{` (large) breakpoint.`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [visible, setVisible] = useState(false)\\n  return (\\n    <>\\n      <CHeader>\\n        <CContainer fluid>\\n          <CHeaderBrand href=\\\"#\\\">Header</CHeaderBrand>\\n          <CHeaderToggler onClick={() => setVisible(!visible)} />\\n          <CCollapse className=\\\"header-collapse\\\" visible={visible}>\\n            <CHeaderNav>\\n              <CNavItem>\\n                <CNavLink href=\\\"#\\\" active>\\n                  Home\\n                </CNavLink>\\n              </CNavItem>\\n              <CNavItem>\\n                <CNavLink href=\\\"#\\\">Link</CNavLink>\\n              </CNavItem>\\n              <CDropdown variant=\\\"nav-item\\\">\\n                <CDropdownToggle color=\\\"secondary\\\">\\n                  Dropdown button\\n                </CDropdownToggle>\\n                <CDropdownMenu>\\n                  <CDropdownItem href=\\\"#\\\">Action</CDropdownItem>\\n                  <CDropdownItem href=\\\"#\\\">Another action</CDropdownItem>\\n                  <CDropdownDivider />\\n                  <CDropdownItem href=\\\"#\\\">Something else here</CDropdownItem>\\n                </CDropdownMenu>\\n              </CDropdown>\\n              <CNavItem>\\n                <CNavLink href=\\\"#\\\" disabled>\\n                  Disabled\\n                </CNavLink>\\n              </CNavItem>\\n            </CHeaderNav>\\n            {/* <form className=\\\"d-flex\\\">\\n        <input className=\\\"form-control me-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\">\\n        <button className=\\\"btn btn-outline-success\\\" type=\\\"submit\\\">Search</button>\\n      </form> */}\\n          </CCollapse>\\n        </CContainer>\\n      </CHeader>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CContainer,\n      CCollapse,\n      CDropdown,\n      CDropdownDivider,\n      CDropdownHeader,\n      CDropdownItem,\n      CDropdownItemPlain,\n      CDropdownMenu,\n      CDropdownToggle,\n      CNav,\n      CNavItem,\n      CNavLink,\n      CHeader,\n      CHeaderBrand,\n      CHeaderDivider,\n      CHeaderNav,\n      CHeaderText,\n      CHeaderToggler,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = useState(false);\n        return <>\n        <CHeader mdxType=\"CHeader\">\n          <CContainer fluid mdxType=\"CContainer\">\n            <CHeaderBrand href=\"#\" mdxType=\"CHeaderBrand\">Header</CHeaderBrand>\n            <CHeaderToggler onClick={() => setVisible(!visible)} mdxType=\"CHeaderToggler\" />\n            <CCollapse className=\"header-collapse\" visible={visible} mdxType=\"CCollapse\">\n              <CHeaderNav mdxType=\"CHeaderNav\">\n                <CNavItem mdxType=\"CNavItem\">\n                  <CNavLink href=\"#\" active mdxType=\"CNavLink\">\n                    Home\n                  </CNavLink>\n                </CNavItem>\n                <CNavItem mdxType=\"CNavItem\">\n                  <CNavLink href=\"#\" mdxType=\"CNavLink\">Link</CNavLink>\n                </CNavItem>\n                <CDropdown variant=\"nav-item\" mdxType=\"CDropdown\">\n                  <CDropdownToggle color=\"secondary\" mdxType=\"CDropdownToggle\">Dropdown button</CDropdownToggle>\n                  <CDropdownMenu mdxType=\"CDropdownMenu\">\n                    <CDropdownItem href=\"#\" mdxType=\"CDropdownItem\">Action</CDropdownItem>\n                    <CDropdownItem href=\"#\" mdxType=\"CDropdownItem\">Another action</CDropdownItem>\n                    <CDropdownDivider mdxType=\"CDropdownDivider\" />\n                    <CDropdownItem href=\"#\" mdxType=\"CDropdownItem\">Something else here</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CNavItem mdxType=\"CNavItem\">\n                  <CNavLink href=\"#\" disabled mdxType=\"CNavLink\">\n                    Disabled\n                  </CNavLink>\n                </CNavItem>\n              </CHeaderNav>\n              {\n                  /* <form className=\"d-flex\">\n                  <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\">\n                  <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n                  </form> */\n                }\n            </CCollapse>\n          </CContainer>\n        </CHeader>\n      </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <h3 {...{\n      \"id\": \"cheader\"\n    }}>{`CHeader`}</h3>\n    <Props of={CHeader} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"cheaderbrand\"\n    }}>{`CHeaderBrand`}</h3>\n    <Props of={CHeaderBrand} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"cheaderdivider\"\n    }}>{`CHeaderDivider`}</h3>\n    <Props of={CHeaderDivider} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"cheadernav\"\n    }}>{`CHeaderNav`}</h3>\n    <Props of={CHeaderNav} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"cheadertext\"\n    }}>{`CHeaderText`}</h3>\n    <Props of={CHeaderText} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"cheadertoggler\"\n    }}>{`CHeaderToggler`}</h3>\n    <Props of={CHeaderToggler} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}