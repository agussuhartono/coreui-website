{"version":3,"sources":["webpack:///../src/components/form/CFormRange.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","CForm","CFormLabel","CFormRange","htmlFor","id","disabled","min","max","defaultValue","step","of","isMDXComponent"],"mappings":"wSAYaA,G,UAAe,S,oNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,YAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,YADR,YAGA,sCAAqB,0BAAYC,WAAW,KAAvB,wBAArB,kBAAwG,0BAAYA,WAAW,KAAvB,kBAAxG,uRACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,kGAAuGC,SAAO,GAC/IL,QACAH,kBACAS,eACAC,UACAC,UACAC,eACAC,gBAP+I,gBAQ/Ib,IAR+I,EAS/IH,eAT+I,GAU9IO,QAAQ,cACb,YAAC,IAAD,CAAYU,QAAQ,eAAeV,QAAQ,cAA3C,iBACA,YAAC,IAAD,CAAYW,GAAG,eAAeX,QAAQ,gBAEpC,kBACE,GAAM,YADR,YAGA,gCAAe,0BAAYC,WAAW,KAAvB,YAAf,gGACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,8GAAmHC,SAAO,GAC3JL,QACAH,kBACAS,eACAC,UACAC,UACAC,eACAC,gBAP2J,gBAQ3Jb,IAR2J,EAS3JH,eAT2J,GAU1JO,QAAQ,cACb,YAAC,IAAD,CAAYU,QAAQ,gBAAgBV,QAAQ,cAA5C,kBACA,YAAC,IAAD,CAAYW,GAAG,gBAAgBC,UAAQ,EAACZ,QAAQ,gBAE9C,kBACE,GAAM,eADR,eAGA,8DAA6C,0BAAYC,WAAW,KAAvB,OAA7C,QAAqG,0BAAYA,WAAW,KAAvB,OAArG,IAAyJ,0BAAYA,WAAW,KAAvB,KAAzJ,QAA+M,0BAAYA,WAAW,KAAvB,OAA/M,kEAAiU,0BAAYA,WAAW,KAAvB,OAAjU,QAAyX,0BAAYA,WAAW,KAAvB,OAAzX,gBACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,mIAA8IC,SAAO,GACtLL,QACAH,kBACAS,eACAC,UACAC,UACAC,eACAC,gBAPsL,gBAQtLb,IARsL,EAStLH,eATsL,GAUrLO,QAAQ,cACb,YAAC,IAAD,CAAYU,QAAQ,eAAeV,QAAQ,cAA3C,iBACA,YAAC,IAAD,CAAYa,IAAI,IAAIC,IAAI,IAAIC,aAAa,IAAIJ,GAAG,eAAeX,QAAQ,gBAErE,kBACE,GAAM,SADR,SAGA,6GAA4F,0BAAYC,WAAW,KAAvB,QAA5F,wEAAqN,0BAAYA,WAAW,KAAvB,cAArN,KACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,8IAA2JC,SAAO,GACnML,QACAH,kBACAS,eACAC,UACAC,UACAC,eACAC,gBAPmM,gBAQnMb,IARmM,EASnMH,eATmM,GAUlMO,QAAQ,cACb,YAAC,IAAD,CAAYU,QAAQ,eAAeV,QAAQ,cAA3C,iBACA,YAAC,IAAD,CAAYa,IAAI,IAAIC,IAAI,IAAIE,KAAK,MAAMD,aAAa,IAAIJ,GAAG,eAAeX,QAAQ,gBAEhF,kBACE,GAAM,OADR,OAGA,kBACE,GAAM,cADR,cAGA,YAAC,IAAD,CAAOiB,GAAIR,IAAYT,QAAQ,gB,kNAKnCH,EAAWqB,gBAAiB","file":"component---src-components-form-c-form-range-mdx-0c154d06cfade5622766.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukaszholeczek/CoreUI/@coreui/react/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { CForm } from './CForm';\nimport { CFormLabel } from './CFormLabel';\nimport { CFormRange } from './CFormRange';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Create custom `}<inlineCode parentName=\"p\">{`<input type=\"range\">`}</inlineCode>{` controls with `}<inlineCode parentName=\"p\">{`<CFormControl>`}</inlineCode>{`. The track (the background) and thumb (the value) are both styled to appear the same across browsers. As only Edge Legacy and Firefox supports \"filling\" their track from the left or right of the thumb as a means to visually indicate progress, we do not currently support it.`}</p>\n    <Playground __position={0} __code={'<CFormLabel htmlFor=\\\"customRange1\\\">Example range</CFormLabel>\\n<CFormRange id=\\\"customRange1\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CForm,\n      CFormLabel,\n      CFormRange,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CFormLabel htmlFor=\"customRange1\" mdxType=\"CFormLabel\">Example range</CFormLabel>\n  <CFormRange id=\"customRange1\" mdxType=\"CFormRange\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"disabled\"\n    }}>{`Disabled`}</h2>\n    <p>{`Add the `}<inlineCode parentName=\"p\">{`disabled`}</inlineCode>{` boolean attribute on an input to give it a grayed out appearance and remove pointer events.`}</p>\n    <Playground __position={1} __code={'<CFormLabel htmlFor=\\\"disabledRange\\\">Disabled range</CFormLabel>\\n<CFormRange id=\\\"disabledRange\\\" disabled />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CForm,\n      CFormLabel,\n      CFormRange,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CFormLabel htmlFor=\"disabledRange\" mdxType=\"CFormLabel\">Disabled range</CFormLabel>\n  <CFormRange id=\"disabledRange\" disabled mdxType=\"CFormRange\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"min-and-max\"\n    }}>{`Min and max`}</h2>\n    <p>{`Range inputs have implicit values for `}<inlineCode parentName=\"p\">{`min`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`max`}</inlineCode>{`â€”`}<inlineCode parentName=\"p\">{`0`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`100`}</inlineCode>{`, respectively. You may specify new values for those using the `}<inlineCode parentName=\"p\">{`min`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`max`}</inlineCode>{` attributes.`}</p>\n    <Playground __position={2} __code={'<CFormLabel htmlFor=\\\"customRange2\\\">Example range</CFormLabel>\\n<CFormRange min=\\\"0\\\" max=\\\"5\\\" defaultValue=\\\"3\\\" id=\\\"customRange2\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CForm,\n      CFormLabel,\n      CFormRange,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CFormLabel htmlFor=\"customRange2\" mdxType=\"CFormLabel\">Example range</CFormLabel>\n  <CFormRange min=\"0\" max=\"5\" defaultValue=\"3\" id=\"customRange2\" mdxType=\"CFormRange\" /> \n    </Playground>\n    <h2 {...{\n      \"id\": \"steps\"\n    }}>{`Steps`}</h2>\n    <p>{`By default, range inputs \"snap\" to integer values. To change this, you can specify a `}<inlineCode parentName=\"p\">{`step`}</inlineCode>{` value. In the example below, we double the number of steps by using `}<inlineCode parentName=\"p\">{`step=\"0.5\"`}</inlineCode>{`.`}</p>\n    <Playground __position={3} __code={'<CFormLabel htmlFor=\\\"customRange3\\\">Example range</CFormLabel>\\n<CFormRange min=\\\"0\\\" max=\\\"5\\\" step=\\\"0.5\\\" defaultValue=\\\"3\\\" id=\\\"customRange3\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CForm,\n      CFormLabel,\n      CFormRange,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CFormLabel htmlFor=\"customRange3\" mdxType=\"CFormLabel\">Example range</CFormLabel>\n  <CFormRange min=\"0\" max=\"5\" step=\"0.5\" defaultValue=\"3\" id=\"customRange3\" mdxType=\"CFormRange\" /> \n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <h3 {...{\n      \"id\": \"cformrange\"\n    }}>{`CFormRange`}</h3>\n    <Props of={CFormRange} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}