{"version":3,"sources":["webpack:///../src/components/list-group/CListGroup.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","CCallout","CBadge","CFormCheck","CListGroup","CListGroupItem","CLink","parentName","active","disabled","component","href","flush","map","breakpoint","index","className","layout","key","color","shape","label","defaultChecked","of","isMDXComponent"],"mappings":"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","file":"component---src-components-list-group-c-list-group-mdx-85221f861f2be62108be.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukaszholeczek/CoreUI/@coreui/react/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { CCallout } from '../callout/CCallout';\nimport { CBadge } from '../badge/CBadge.tsx';\nimport { CFormCheck } from '../form/CFormCheck.tsx';\nimport { CListGroup } from './CListGroup.tsx';\nimport { CListGroupItem } from './CListGroupItem.tsx';\nimport { CLink } from '../link/CLink.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h2 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic example`}</h2>\n    <p>{`The default list group is an unordered list with items and the proper CSS classes. Build upon it with the options that follow, or with your CSS as required.`}</p>\n    <Playground __position={0} __code={'<CListGroup>\\n  <CListGroupItem>Cras justo odio</CListGroupItem>\\n  <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\\n  <CListGroupItem>Morbi leo risus</CListGroupItem>\\n  <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\\n  <CListGroupItem>Vestibulum at eros</CListGroupItem>\\n</CListGroup>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCallout,\n      CBadge,\n      CFormCheck,\n      CListGroup,\n      CListGroupItem,\n      CLink,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CListGroup mdxType=\"CListGroup\">\n    <CListGroupItem mdxType=\"CListGroupItem\">Cras justo odio</CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\">Dapibus ac facilisis in</CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\">Morbi leo risus</CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\">Porta ac consectetur ac</CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\">Vestibulum at eros</CListGroupItem>\n  </CListGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"active-items\"\n    }}>{`Active items`}</h2>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`active`}</inlineCode>{` boolean property to a `}<inlineCode parentName=\"p\">{`<CListGroupItem>`}</inlineCode>{` to show the current active selection.`}</p>\n    <Playground __position={1} __code={'<CListGroup>\\n  <CListGroupItem active>Cras justo odio</CListGroupItem>\\n  <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\\n  <CListGroupItem>Morbi leo risus</CListGroupItem>\\n  <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\\n  <CListGroupItem>Vestibulum at eros</CListGroupItem>\\n</CListGroup>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCallout,\n      CBadge,\n      CFormCheck,\n      CListGroup,\n      CListGroupItem,\n      CLink,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CListGroup mdxType=\"CListGroup\">\n    <CListGroupItem active mdxType=\"CListGroupItem\">Cras justo odio</CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\">Dapibus ac facilisis in</CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\">Morbi leo risus</CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\">Porta ac consectetur ac</CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\">Vestibulum at eros</CListGroupItem>\n  </CListGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"disabled-items\"\n    }}>{`Disabled items`}</h2>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`disabled`}</inlineCode>{` boolean property to a `}<inlineCode parentName=\"p\">{`<CListGroupItem>`}</inlineCode>{` to make it appear disabled.`}</p>\n    <Playground __position={2} __code={'<CListGroup>\\n  <CListGroupItem disabled>Cras justo odio</CListGroupItem>\\n  <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\\n  <CListGroupItem>Morbi leo risus</CListGroupItem>\\n  <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\\n  <CListGroupItem>Vestibulum at eros</CListGroupItem>\\n</CListGroup>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCallout,\n      CBadge,\n      CFormCheck,\n      CListGroup,\n      CListGroupItem,\n      CLink,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CListGroup mdxType=\"CListGroup\">\n    <CListGroupItem disabled mdxType=\"CListGroupItem\">Cras justo odio</CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\">Dapibus ac facilisis in</CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\">Morbi leo risus</CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\">Porta ac consectetur ac</CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\">Vestibulum at eros</CListGroupItem>\n  </CListGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"links-and-buttons\"\n    }}>{`Links and buttons`}</h2>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`<a>`}</inlineCode>{`s or `}<inlineCode parentName=\"p\">{`<button>`}</inlineCode>{`s to create `}<em parentName=\"p\">{`actionable`}</em>{` list group items with hover, disabled, and active states by adding `}<inlineCode parentName=\"p\">{`component=\"a|button\"`}</inlineCode>{`. We separate these pseudo-classes to ensure list groups made of non-interactive elements (like `}<inlineCode parentName=\"p\">{`<li>`}</inlineCode>{`s or `}<inlineCode parentName=\"p\">{`<div>`}</inlineCode>{`s) don't provide a click or tap affordance.`}</p>\n    <Playground __position={3} __code={'<CListGroup>\\n  <CListGroupItem component=\\\"a\\\" href=\\\"#\\\" active>\\n    Cras justo odio\\n  </CListGroupItem>\\n  <CListGroupItem component=\\\"a\\\" href=\\\"#\\\">\\n    Dapibus ac facilisis in\\n  </CListGroupItem>\\n  <CListGroupItem component=\\\"a\\\" href=\\\"#\\\">\\n    Morbi leo risus\\n  </CListGroupItem>\\n  <CListGroupItem component=\\\"a\\\" href=\\\"#\\\">\\n    Porta ac consectetur ac\\n  </CListGroupItem>\\n  <CListGroupItem component=\\\"a\\\" href=\\\"#\\\" disabled>\\n    Vestibulum at eros\\n  </CListGroupItem>\\n</CListGroup>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCallout,\n      CBadge,\n      CFormCheck,\n      CListGroup,\n      CListGroupItem,\n      CLink,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CListGroup mdxType=\"CListGroup\">\n    <CListGroupItem component=\"a\" href=\"#\" active mdxType=\"CListGroupItem\">Cras justo odio</CListGroupItem>\n    <CListGroupItem component=\"a\" href=\"#\" mdxType=\"CListGroupItem\">Dapibus ac facilisis in</CListGroupItem>\n    <CListGroupItem component=\"a\" href=\"#\" mdxType=\"CListGroupItem\">Morbi leo risus</CListGroupItem>\n    <CListGroupItem component=\"a\" href=\"#\" mdxType=\"CListGroupItem\">Porta ac consectetur ac</CListGroupItem>\n    <CListGroupItem component=\"a\" href=\"#\" disabled mdxType=\"CListGroupItem\">Vestibulum at eros</CListGroupItem>\n  </CListGroup>\n    </Playground>\n    <Playground __position={4} __code={'<CListGroup>\\n  <CListGroupItem component=\\\"button\\\" active>\\n    Cras justo odio\\n  </CListGroupItem>\\n  <CListGroupItem component=\\\"button\\\">Dapibus ac facilisis in</CListGroupItem>\\n  <CListGroupItem component=\\\"button\\\">Morbi leo risus</CListGroupItem>\\n  <CListGroupItem component=\\\"button\\\">Porta ac consectetur ac</CListGroupItem>\\n  <CListGroupItem component=\\\"button\\\" disabled>\\n    Vestibulum at eros\\n  </CListGroupItem>\\n</CListGroup>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCallout,\n      CBadge,\n      CFormCheck,\n      CListGroup,\n      CListGroupItem,\n      CLink,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CListGroup mdxType=\"CListGroup\">\n    <CListGroupItem component=\"button\" active mdxType=\"CListGroupItem\">Cras justo odio</CListGroupItem>\n    <CListGroupItem component=\"button\" mdxType=\"CListGroupItem\">Dapibus ac facilisis in</CListGroupItem>\n    <CListGroupItem component=\"button\" mdxType=\"CListGroupItem\">Morbi leo risus</CListGroupItem>\n    <CListGroupItem component=\"button\" mdxType=\"CListGroupItem\">Porta ac consectetur ac</CListGroupItem>\n    <CListGroupItem component=\"button\" disabled mdxType=\"CListGroupItem\">Vestibulum at eros</CListGroupItem>\n  </CListGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"flush\"\n    }}>{`Flush`}</h2>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`flush`}</inlineCode>{` boolean property to remove some borders and rounded corners to render list group items edge-to-edge in a parent container (e.g., cards).`}</p>\n    <Playground __position={5} __code={'<CListGroup flush>\\n  <CListGroupItem>Cras justo odio</CListGroupItem>\\n  <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\\n  <CListGroupItem>Morbi leo risus</CListGroupItem>\\n  <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\\n  <CListGroupItem>Vestibulum at eros</CListGroupItem>\\n</CListGroup>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCallout,\n      CBadge,\n      CFormCheck,\n      CListGroup,\n      CListGroupItem,\n      CLink,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CListGroup flush mdxType=\"CListGroup\">\n    <CListGroupItem mdxType=\"CListGroupItem\">Cras justo odio</CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\">Dapibus ac facilisis in</CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\">Morbi leo risus</CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\">Porta ac consectetur ac</CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\">Vestibulum at eros</CListGroupItem>\n  </CListGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"horizontal\"\n    }}>{`Horizontal`}</h2>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`layout=\"horizontal\"`}</inlineCode>{` to change the layout of list group items from vertical to horizontal across all breakpoints. Alternatively, choose a responsive variant `}<inlineCode parentName=\"p\">{`.layout=\"horizontal-{sm|md|lg|xl|xxl}\"`}</inlineCode>{` to make a list group horizontal starting at that breakpoint's `}<inlineCode parentName=\"p\">{`min-width`}</inlineCode>{`. Currently `}<strong parentName=\"p\">{`horizontal list groups cannot be combined with flush list groups.`}</strong></p>\n    <Playground __position={6} __code={'<>\\n  {[\\'\\', \\'-sm\\', \\'-md\\', \\'-lg\\', \\'-xl\\', \\'-xxl\\'].map((breakpoint, index) => (\\n    <CListGroup\\n      className=\\\"mb-2\\\"\\n      layout={`horizontal${breakpoint}`}\\n      key={index}\\n    >\\n      <CListGroupItem>Cras justo odio</CListGroupItem>\\n      <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\\n      <CListGroupItem>Morbi leo risus</CListGroupItem>\\n    </CListGroup>\\n  ))}\\n</>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCallout,\n      CBadge,\n      CFormCheck,\n      CListGroup,\n      CListGroupItem,\n      CLink,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <>\n    {['', '-sm', '-md', '-lg', '-xl', '-xxl'].map((breakpoint, index) => <CListGroup className=\"mb-2\" layout={`horizontal${breakpoint}`} key={index} mdxType=\"CListGroup\">\n        <CListGroupItem mdxType=\"CListGroupItem\">Cras justo odio</CListGroupItem>\n        <CListGroupItem mdxType=\"CListGroupItem\">Dapibus ac facilisis in</CListGroupItem>\n        <CListGroupItem mdxType=\"CListGroupItem\">Morbi leo risus</CListGroupItem>\n      </CListGroup>)}\n  </>\n    </Playground>\n    <h2 {...{\n      \"id\": \"contextual-classes\"\n    }}>{`Contextual classes`}</h2>\n    <p>{`Use contextual classes to style list items with a stateful background and color.`}</p>\n    <Playground __position={7} __code={'<CListGroup>\\n  <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\\n  {[\\n    \\'primary\\',\\n    \\'secondary\\',\\n    \\'success\\',\\n    \\'danger\\',\\n    \\'warning\\',\\n    \\'info\\',\\n    \\'light\\',\\n    \\'dark\\',\\n  ].map((color, index) => (\\n    <CListGroupItem color={color} key={index}>\\n      A simple {color} list group item\\n    </CListGroupItem>\\n  ))}\\n</CListGroup>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCallout,\n      CBadge,\n      CFormCheck,\n      CListGroup,\n      CListGroupItem,\n      CLink,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CListGroup mdxType=\"CListGroup\">\n    <CListGroupItem mdxType=\"CListGroupItem\">Dapibus ac facilisis in</CListGroupItem>\n    {['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map((color, index) => <CListGroupItem color={color} key={index} mdxType=\"CListGroupItem\">A simple {color} list group item</CListGroupItem>)}\n  </CListGroup>\n    </Playground>\n    <p>{`Contextual classes also work with `}<inlineCode parentName=\"p\">{`<a>`}</inlineCode>{`s or `}<inlineCode parentName=\"p\">{`<button>`}</inlineCode>{`s. Note the addition of the hover styles here not present in the previous example. Also supported is the `}<inlineCode parentName=\"p\">{`active`}</inlineCode>{` state; apply it to indicate an active selection on a contextual list group item.`}</p>\n    <Playground __position={8} __code={'<CListGroup>\\n  <CListGroupItem component=\\\"a\\\" href=\\\"#\\\">\\n    Dapibus ac facilisis in\\n  </CListGroupItem>\\n  {[\\n    \\'primary\\',\\n    \\'secondary\\',\\n    \\'success\\',\\n    \\'danger\\',\\n    \\'warning\\',\\n    \\'info\\',\\n    \\'light\\',\\n    \\'dark\\',\\n  ].map((color, index) => (\\n    <CListGroupItem component=\\\"a\\\" href=\\\"#\\\" color={color} key={index}>\\n      A simple {color} list group item\\n    </CListGroupItem>\\n  ))}\\n</CListGroup>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCallout,\n      CBadge,\n      CFormCheck,\n      CListGroup,\n      CListGroupItem,\n      CLink,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CListGroup mdxType=\"CListGroup\">\n    <CListGroupItem component=\"a\" href=\"#\" mdxType=\"CListGroupItem\">Dapibus ac facilisis in</CListGroupItem>\n    {['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map((color, index) => <CListGroupItem component=\"a\" href=\"#\" color={color} key={index} mdxType=\"CListGroupItem\">A simple {color} list group item</CListGroupItem>)}\n  </CListGroup>\n    </Playground>\n    <CCallout color=\"info\" mdxType=\"CCallout\">\n  <h5>Conveying meaning to assistive technologies</h5>\n  <p>\n    Using color to add meaning only provides a visual indication, which will not be conveyed to users of assistive technologies – such as screen readers. Ensure that information denoted by the color is either obvious from the content itself (e.g. the visible text), or is included through alternative means, such as additional text hidden with the `.visually-hidden` class.\n  </p>\n    </CCallout>\n    <h2 {...{\n      \"id\": \"with-badges\"\n    }}>{`With badges`}</h2>\n    <p>{`Add badges to any list group item to show unread counts, activity, and more.`}</p>\n    <Playground __position={10} __code={'<CListGroup>\\n  <CListGroupItem className=\\\"d-flex justify-content-between align-items-center\\\">\\n    Cras justo odio\\n    <CBadge color=\\\"primary\\\" shape=\\\"rounded-pill\\\">\\n      14\\n    </CBadge>\\n  </CListGroupItem>\\n  <CListGroupItem className=\\\"d-flex justify-content-between align-items-center\\\">\\n    Dapibus ac facilisis in\\n    <CBadge color=\\\"primary\\\" shape=\\\"rounded-pill\\\">\\n      2\\n    </CBadge>\\n  </CListGroupItem>\\n  <CListGroupItem className=\\\"d-flex justify-content-between align-items-center\\\">\\n    Morbi leo risus\\n    <CBadge color=\\\"primary\\\" shape=\\\"rounded-pill\\\">\\n      1\\n    </CBadge>\\n  </CListGroupItem>\\n</CListGroup>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCallout,\n      CBadge,\n      CFormCheck,\n      CListGroup,\n      CListGroupItem,\n      CLink,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CListGroup mdxType=\"CListGroup\">\n    <CListGroupItem className=\"d-flex justify-content-between align-items-center\" mdxType=\"CListGroupItem\">Cras justo odio<CBadge color=\"primary\" shape=\"rounded-pill\" mdxType=\"CBadge\">14</CBadge></CListGroupItem>\n    <CListGroupItem className=\"d-flex justify-content-between align-items-center\" mdxType=\"CListGroupItem\">Dapibus ac facilisis in<CBadge color=\"primary\" shape=\"rounded-pill\" mdxType=\"CBadge\">2</CBadge></CListGroupItem>\n    <CListGroupItem className=\"d-flex justify-content-between align-items-center\" mdxType=\"CListGroupItem\">Morbi leo risus<CBadge color=\"primary\" shape=\"rounded-pill\" mdxType=\"CBadge\">1</CBadge></CListGroupItem>\n  </CListGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"custom-content\"\n    }}>{`Custom content`}</h2>\n    <p>{`Add nearly any HTML within, even for linked list groups like the one below, with the help of `}<a parentName=\"p\" {...{\n        \"href\": \"https://coreui.io/docs/utilities/flex/\"\n      }}>{`flexbox utilities`}</a>{`.`}</p>\n    <Playground __position={11} __code={'<CListGroup>\\n  <CListGroupItem component=\\\"a\\\" href=\\\"#\\\" active>\\n    <div className=\\\"d-flex w-100 justify-content-between\\\">\\n      <h5 className=\\\"mb-1\\\">List group item heading</h5>\\n      <small>3 days ago</small>\\n    </div>\\n    <p className=\\\"mb-1\\\">\\n      Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget\\n      risus varius blandit.\\n    </p>\\n    <small>Donec id elit non mi porta.</small>\\n  </CListGroupItem>\\n  <CListGroupItem component=\\\"a\\\" href=\\\"#\\\">\\n    <div className=\\\"d-flex w-100 justify-content-between\\\">\\n      <h5 className=\\\"mb-1\\\">List group item heading</h5>\\n      <small className=\\\"text-muted\\\">3 days ago</small>\\n    </div>\\n    <p className=\\\"mb-1\\\">\\n      Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget\\n      risus varius blandit.\\n    </p>\\n    <small className=\\\"text-muted\\\">Donec id elit non mi porta.</small>\\n  </CListGroupItem>\\n  <CListGroupItem component=\\\"a\\\" href=\\\"#\\\">\\n    <div className=\\\"d-flex w-100 justify-content-between\\\">\\n      <h5 className=\\\"mb-1\\\">List group item heading</h5>\\n      <small className=\\\"text-muted\\\">3 days ago</small>\\n    </div>\\n    <p className=\\\"mb-1\\\">\\n      Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget\\n      risus varius blandit.\\n    </p>\\n    <small className=\\\"text-muted\\\">Donec id elit non mi porta.</small>\\n  </CListGroupItem>\\n</CListGroup>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCallout,\n      CBadge,\n      CFormCheck,\n      CListGroup,\n      CListGroupItem,\n      CLink,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CListGroup mdxType=\"CListGroup\">\n    <CListGroupItem component=\"a\" href=\"#\" active mdxType=\"CListGroupItem\">\n      <div className=\"d-flex w-100 justify-content-between\">\n      <h5 className=\"mb-1\">List group item heading</h5>\n        <small>3 days ago</small>\n      </div>\n      <p className=\"mb-1\">Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.</p>\n      <small>Donec id elit non mi porta.</small>\n    </CListGroupItem>\n    <CListGroupItem component=\"a\" href=\"#\" mdxType=\"CListGroupItem\">\n      <div className=\"d-flex w-100 justify-content-between\">\n      <h5 className=\"mb-1\">List group item heading</h5>\n        <small className=\"text-muted\">3 days ago</small>\n      </div>\n      <p className=\"mb-1\">Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.</p>\n      <small className=\"text-muted\">Donec id elit non mi porta.</small>\n    </CListGroupItem>\n    <CListGroupItem component=\"a\" href=\"#\" mdxType=\"CListGroupItem\">\n      <div className=\"d-flex w-100 justify-content-between\">\n      <h5 className=\"mb-1\">List group item heading</h5>\n        <small className=\"text-muted\">3 days ago</small>\n      </div>\n      <p className=\"mb-1\">Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.</p>\n      <small className=\"text-muted\">Donec id elit non mi porta.</small>\n    </CListGroupItem>\n  </CListGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"checkboxes-and-radios\"\n    }}>{`Checkboxes and radios`}</h2>\n    <p>{`Place CoreUI's checkboxes and radios within list group items and customize as needed.`}</p>\n    <Playground __position={12} __code={'<CListGroup>\\n  <CListGroupItem>\\n    <CFormCheck label=\\\"Cras justo odio\\\" />\\n  </CListGroupItem>\\n  <CListGroupItem>\\n    <CFormCheck label=\\\"Dapibus ac facilisis in\\\" defaultChecked />\\n  </CListGroupItem>\\n  <CListGroupItem>\\n    <CFormCheck label=\\\"Morbi leo risus\\\" defaultChecked />\\n  </CListGroupItem>\\n  <CListGroupItem>\\n    <CFormCheck label=\\\"orta ac consectetur ac\\\" />\\n  </CListGroupItem>\\n  <CListGroupItem>\\n    <CFormCheck label=\\\"Vestibulum at eros\\\" />\\n  </CListGroupItem>\\n</CListGroup>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCallout,\n      CBadge,\n      CFormCheck,\n      CListGroup,\n      CListGroupItem,\n      CLink,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CListGroup mdxType=\"CListGroup\">\n    <CListGroupItem mdxType=\"CListGroupItem\"><CFormCheck label=\"Cras justo odio\" mdxType=\"CFormCheck\" /></CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\"><CFormCheck label=\"Dapibus ac facilisis in\" defaultChecked mdxType=\"CFormCheck\" /></CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\"><CFormCheck label=\"Morbi leo risus\" defaultChecked mdxType=\"CFormCheck\" /></CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\"><CFormCheck label=\"orta ac consectetur ac\" mdxType=\"CFormCheck\" /></CListGroupItem>\n    <CListGroupItem mdxType=\"CListGroupItem\"><CFormCheck label=\"Vestibulum at eros\" mdxType=\"CFormCheck\" /></CListGroupItem>\n  </CListGroup>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <h3 {...{\n      \"id\": \"clistgroup\"\n    }}>{`CListGroup`}</h3>\n    <Props of={CListGroup} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"clistgroupitem\"\n    }}>{`CListGroupItem`}</h3>\n    <Props of={CListGroupItem} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}