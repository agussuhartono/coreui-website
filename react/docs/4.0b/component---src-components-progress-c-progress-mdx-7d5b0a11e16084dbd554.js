(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{sTbt:function(e,r,s){"use strict";s.r(r),s.d(r,"_frontmatter",(function(){return g})),s.d(r,"default",(function(){return d}));var a=s("Fcif"),o=s("+I+c"),t=(s("IFzZ"),s("/FXl")),n=s("BIGe"),c=s("ZFoC"),b=s("N3/R"),l=s("5ip9"),m=s("758a"),g=(s("aD51"),{});void 0!==g&&g&&g===Object(g)&&Object.isExtensible(g)&&!g.hasOwnProperty("__filemeta")&&Object.defineProperty(g,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/progress/CProgress.mdx"}});var p={_frontmatter:g},i=n.a;function d(e){var r,s,d,P,C,u,y,O=e.components,j=Object(o.a)(e,["components"]);return Object(t.b)(i,Object(a.a)({},p,j,{components:O,mdxType:"MDXLayout"}),Object(t.b)("h2",{id:"example"},"Example"),Object(t.b)("p",null,"Progress components are built with two HTML elements, some CSS to set the width, and a few attributes. We don't use ",Object(t.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress"},"the HTML5 ",Object(t.b)("inlineCode",{parentName:"a"},"<progress>")," element"),", ensuring you can stack progress bars, animate them, and place text labels over them."),Object(t.b)("h2",{id:"basic-usage"},"Basic usage"),Object(t.b)(c.c,{__position:0,__code:'<CProgress className="mb-3">\n  <CProgressBar value={0} />\n</CProgress>\n<CProgress className="mb-3">\n  <CProgressBar value={25} />\n</CProgress>\n<CProgress className="mb-3">\n  <CProgressBar value={50} />\n</CProgress>\n<CProgress className="mb-3">\n  <CProgressBar value={75} />\n</CProgress>\n<CProgress className="mb-3">\n  <CProgressBar value={100} />\n</CProgress>',__scope:(r={props:j,DefaultLayout:n.a,Playground:c.c,Props:c.d,CProgress:b.a,CProgressBar:l.a,CButton:m.a},r.DefaultLayout=n.a,r._frontmatter=g,r),mdxType:"Playground"},Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{value:0,mdxType:"CProgressBar"})),Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{value:25,mdxType:"CProgressBar"})),Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{value:50,mdxType:"CProgressBar"})),Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{value:75,mdxType:"CProgressBar"})),Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{value:100,mdxType:"CProgressBar"}))),Object(t.b)("h2",{id:"labels"},"Labels"),Object(t.b)("p",null,"Add labels to your progress bars by placing text within the ",Object(t.b)("inlineCode",{parentName:"p"},"<CProgressBar>"),"."),Object(t.b)(c.c,{__position:1,__code:'<CProgress className="mb-3">\n  <CProgressBar value={25}>25%</CProgressBar>\n</CProgress>',__scope:(s={props:j,DefaultLayout:n.a,Playground:c.c,Props:c.d,CProgress:b.a,CProgressBar:l.a,CButton:m.a},s.DefaultLayout=n.a,s._frontmatter=g,s),mdxType:"Playground"},Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{value:25,mdxType:"CProgressBar"},"25%"))),Object(t.b)("h2",{id:"height"},"Height"),Object(t.b)("p",null,"We only set a ",Object(t.b)("inlineCode",{parentName:"p"},"height")," value on the ",Object(t.b)("inlineCode",{parentName:"p"},"<CProgress>"),", so if you change that value the inner ",Object(t.b)("inlineCode",{parentName:"p"},"<CProgressBar>")," will automatically resize accordingly."),Object(t.b)(c.c,{__position:2,__code:'<CProgress height={1} className="mb-3">\n  <CProgressBar value={25}></CProgressBar>\n</CProgress>\n<CProgress height={20} className="mb-3">\n  <CProgressBar value={25}></CProgressBar>\n</CProgress>',__scope:(d={props:j,DefaultLayout:n.a,Playground:c.c,Props:c.d,CProgress:b.a,CProgressBar:l.a,CButton:m.a},d.DefaultLayout=n.a,d._frontmatter=g,d),mdxType:"Playground"},Object(t.b)(b.a,{height:1,className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{value:25,mdxType:"CProgressBar"})),Object(t.b)(b.a,{height:20,className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{value:25,mdxType:"CProgressBar"}))),Object(t.b)("h2",{id:"backgrounds"},"Backgrounds"),Object(t.b)("p",null,"Use ",Object(t.b)("inlineCode",{parentName:"p"},"color")," prop to change the appearance of individual progress bars."),Object(t.b)(c.c,{__position:3,__code:'<CProgress className="mb-3">\n  <CProgressBar color="success" value={25} />\n</CProgress>\n<CProgress className="mb-3">\n  <CProgressBar color="info" value={50} />\n</CProgress>\n<CProgress className="mb-3">\n  <CProgressBar color="warning" value={75} />\n</CProgress>\n<CProgress className="mb-3">\n  <CProgressBar color="danger" value={100} />\n</CProgress>',__scope:(P={props:j,DefaultLayout:n.a,Playground:c.c,Props:c.d,CProgress:b.a,CProgressBar:l.a,CButton:m.a},P.DefaultLayout=n.a,P._frontmatter=g,P),mdxType:"Playground"},Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{color:"success",value:25,mdxType:"CProgressBar"})),Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{color:"info",value:50,mdxType:"CProgressBar"})),Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{color:"warning",value:75,mdxType:"CProgressBar"})),Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{color:"danger",value:100,mdxType:"CProgressBar"}))),Object(t.b)("h2",{id:"multiple-bars"},"Multiple bars"),Object(t.b)("p",null,"Include multiple progress bars in a progress component if you need."),Object(t.b)(c.c,{__position:4,__code:'<CProgress className="mb-3">\n  <CProgressBar value={15} />\n  <CProgressBar color="success" value={30} />\n  <CProgressBar color="info" value={20} />\n</CProgress>',__scope:(C={props:j,DefaultLayout:n.a,Playground:c.c,Props:c.d,CProgress:b.a,CProgressBar:l.a,CButton:m.a},C.DefaultLayout=n.a,C._frontmatter=g,C),mdxType:"Playground"},Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{value:15,mdxType:"CProgressBar"}),Object(t.b)(l.a,{color:"success",value:30,mdxType:"CProgressBar"}),Object(t.b)(l.a,{color:"info",value:20,mdxType:"CProgressBar"}))),Object(t.b)("h2",{id:"striped"},"Striped"),Object(t.b)("p",null,"Add ",Object(t.b)("inlineCode",{parentName:"p"},'variant="striped"')," to any ",Object(t.b)("inlineCode",{parentName:"p"},"<CProgressBar>")," to apply a stripe via CSS gradient over the progress bar's background color."),Object(t.b)(c.c,{__position:5,__code:'<CProgress className="mb-3">\n  <CProgressBar color="success" variant="striped" value={25} />\n</CProgress>\n<CProgress className="mb-3">\n  <CProgressBar color="info" variant="striped" value={50} />\n</CProgress>\n<CProgress className="mb-3">\n  <CProgressBar color="warning" variant="striped" value={75} />\n</CProgress>\n<CProgress className="mb-3">\n  <CProgressBar color="danger" variant="striped" value={100} />\n</CProgress>',__scope:(u={props:j,DefaultLayout:n.a,Playground:c.c,Props:c.d,CProgress:b.a,CProgressBar:l.a,CButton:m.a},u.DefaultLayout=n.a,u._frontmatter=g,u),mdxType:"Playground"},Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{color:"success",variant:"striped",value:25,mdxType:"CProgressBar"})),Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{color:"info",variant:"striped",value:50,mdxType:"CProgressBar"})),Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{color:"warning",variant:"striped",value:75,mdxType:"CProgressBar"})),Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{color:"danger",variant:"striped",value:100,mdxType:"CProgressBar"}))),Object(t.b)("h2",{id:"animated-stripes"},"Animated stripes"),Object(t.b)("p",null,"The striped gradient can also be animated. Add ",Object(t.b)("inlineCode",{parentName:"p"},"animated")," property to ",Object(t.b)("inlineCode",{parentName:"p"},"<CProgressBar>")," to animate the stripes right to left via CSS3 animations."),Object(t.b)(c.c,{__position:6,__code:'<CProgress className="mb-3">\n  <CProgressBar color="success" variant="striped" animated value={25} />\n</CProgress>\n<CProgress className="mb-3">\n  <CProgressBar color="info" variant="striped" animated value={50} />\n</CProgress>\n<CProgress className="mb-3">\n  <CProgressBar color="warning" variant="striped" animated value={75} />\n</CProgress>\n<CProgress className="mb-3">\n  <CProgressBar color="danger" variant="striped" animated value={100} />\n</CProgress>',__scope:(y={props:j,DefaultLayout:n.a,Playground:c.c,Props:c.d,CProgress:b.a,CProgressBar:l.a,CButton:m.a},y.DefaultLayout=n.a,y._frontmatter=g,y),mdxType:"Playground"},Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{color:"success",variant:"striped",animated:!0,value:25,mdxType:"CProgressBar"})),Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{color:"info",variant:"striped",animated:!0,value:50,mdxType:"CProgressBar"})),Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{color:"warning",variant:"striped",animated:!0,value:75,mdxType:"CProgressBar"})),Object(t.b)(b.a,{className:"mb-3",mdxType:"CProgress"},Object(t.b)(l.a,{color:"danger",variant:"striped",animated:!0,value:100,mdxType:"CProgressBar"}))),Object(t.b)("h2",{id:"api"},"API"),Object(t.b)("h3",{id:"cprogress"},"CProgress"),Object(t.b)(c.d,{of:b.a,mdxType:"Props"}),Object(t.b)("h3",{id:"cprogressbar"},"CProgressBar"),Object(t.b)(c.d,{of:l.a,mdxType:"Props"}))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/progress/CProgress.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-progress-c-progress-mdx-7d5b0a11e16084dbd554.js.map