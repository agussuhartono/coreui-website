{"version":3,"sources":["webpack:///../src/components/modal/CModal.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","useState","CButton","CLink","CModal","CModalBody","CModalContent","CModalDialog","CModalFooter","CModalHeader","CModalTitle","CPopover","CTooltip","className","backdrop","keyboard","portal","visible","color","setVisible","onClick","onDismiss","scrollable","alignment","title","content","visibleXL","setVisibleXL","visibleLg","setVisibleLg","visibleSm","setVisibleSm","size","visibleMd","visibleXXL","setVisibleXXL","setVisibleMd","fullscreen","of","isMDXComponent"],"mappings":"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","file":"component---src-components-modal-c-modal-mdx-0b4cbbced051791dc019.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukaszholeczek/CoreUI/@coreui/react/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { useState } from 'react';\nimport { CButton } from '../button/CButton.tsx';\nimport { CLink } from '../link/CLink.tsx';\nimport { CModal } from './CModal.tsx';\nimport { CModalBody } from './CModalBody.tsx';\nimport { CModalContent } from './CModalContent.tsx';\nimport { CModalDialog } from './CModalDialog.tsx';\nimport { CModalFooter } from './CModalFooter.tsx';\nimport { CModalHeader } from './CModalHeader.tsx';\nimport { CModalTitle } from './CModalTitle.tsx';\nimport { CPopover } from '../popover/CPopover.tsx';\nimport { CTooltip } from '../tooltip/CTooltip.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"modal-components\"\n    }}>{`Modal components`}</h3>\n    <p>{`Below is a static modal example (meaning its `}<inlineCode parentName=\"p\">{`position`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`display`}</inlineCode>{` have been overridden). Included are the modal header, modal body (required for `}<inlineCode parentName=\"p\">{`padding`}</inlineCode>{`), and modal footer (optional). We ask that you include modal headers with dismiss actions whenever possible, or provide another explicit dismiss action.`}</p>\n    <Playground __position={0} __code={'<CModal\\n  className=\\\"show d-block position-static\\\"\\n  backdrop={false}\\n  keyboard={false}\\n  portal={false}\\n  visible\\n>\\n  <CModalHeader>\\n    <CModalTitle>Modal title</CModalTitle>\\n  </CModalHeader>\\n  <CModalBody>Modal body text goes here.</CModalBody>\\n  <CModalFooter>\\n    <CButton color=\\\"secondary\\\">Close</CButton>\\n    <CButton color=\\\"primary\\\">Save changes</CButton>\\n  </CModalFooter>\\n</CModal>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CLink,\n      CModal,\n      CModalBody,\n      CModalContent,\n      CModalDialog,\n      CModalFooter,\n      CModalHeader,\n      CModalTitle,\n      CPopover,\n      CTooltip,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CModal className=\"show d-block position-static\" backdrop={false} keyboard={false} portal={false} visible mdxType=\"CModal\">\n    <CModalHeader mdxType=\"CModalHeader\">\n      <CModalTitle mdxType=\"CModalTitle\">Modal title</CModalTitle>\n    </CModalHeader>\n    <CModalBody mdxType=\"CModalBody\">Modal body text goes here.</CModalBody>\n    <CModalFooter mdxType=\"CModalFooter\">\n      <CButton color=\"secondary\" mdxType=\"CButton\">Close</CButton>\n      <CButton color=\"primary\" mdxType=\"CButton\">Save changes</CButton>\n    </CModalFooter>\n  </CModal>\n    </Playground>\n    <h3 {...{\n      \"id\": \"live-demo\"\n    }}>{`Live demo`}</h3>\n    <p>{`Toggle a working modal demo by clicking the button below. It will slide down and fade in from the top of the page.`}</p>\n    <Playground __position={1} __code={'() => {\\n  const [visible, setVisible] = useState(false)\\n  return (\\n    <>\\n      <CButton onClick={() => setVisible(!visible)}>\\n        Launch demo modal\\n      </CButton>\\n      <CModal visible={visible} onDismiss={() => setVisible(false)}>\\n        <CModalHeader onDismiss={() => setVisible(false)}>\\n          <CModalTitle>Modal title</CModalTitle>\\n        </CModalHeader>\\n        <CModalBody>Woohoo, you\\'re reading this text in a modal!</CModalBody>\\n        <CModalFooter>\\n          <CButton color=\\\"secondary\\\" onClick={() => setVisible(false)}>\\n            Close\\n          </CButton>\\n          <CButton color=\\\"primary\\\">Save changes</CButton>\\n        </CModalFooter>\\n      </CModal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CLink,\n      CModal,\n      CModalBody,\n      CModalContent,\n      CModalDialog,\n      CModalFooter,\n      CModalHeader,\n      CModalTitle,\n      CPopover,\n      CTooltip,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = useState(false);\n        return <>\n        <CButton onClick={() => setVisible(!visible)} mdxType=\"CButton\">Launch demo modal</CButton>\n        <CModal visible={visible} onDismiss={() => setVisible(false)} mdxType=\"CModal\">\n          <CModalHeader onDismiss={() => setVisible(false)} mdxType=\"CModalHeader\">\n            <CModalTitle mdxType=\"CModalTitle\">Modal title</CModalTitle>\n          </CModalHeader>\n          <CModalBody mdxType=\"CModalBody\">Woohoo, you're reading this text in a modal!</CModalBody>\n          <CModalFooter mdxType=\"CModalFooter\">\n            <CButton color=\"secondary\" onClick={() => setVisible(false)} mdxType=\"CButton\">\n              Close\n            </CButton>\n            <CButton color=\"primary\" mdxType=\"CButton\">Save changes</CButton>\n          </CModalFooter>\n        </CModal>\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"static-backdrop\"\n    }}>{`Static backdrop`}</h3>\n    <p>{`If you don’t provide an `}<inlineCode parentName=\"p\">{`onDimsiss`}</inlineCode>{` handler to the Modal component, your modal will behave as though the backdrop is static, meaning it will not close when clicking outside it. Click the button below to try it.`}</p>\n    <Playground __position={2} __code={'() => {\\n  const [visible, setVisible] = useState(false)\\n  return (\\n    <>\\n      <CButton onClick={() => setVisible(!visible)}>\\n        Launch static backdrop modal\\n      </CButton>\\n      <CModal visible={visible}>\\n        <CModalHeader onDismiss={() => setVisible(false)}>\\n          <CModalTitle>Modal title</CModalTitle>\\n        </CModalHeader>\\n        <CModalBody>\\n          I will not close if you click outside me. Don\\'t even try to press\\n          escape key.\\n        </CModalBody>\\n        <CModalFooter>\\n          <CButton color=\\\"secondary\\\" onClick={() => setVisible(false)}>\\n            Close\\n          </CButton>\\n          <CButton color=\\\"primary\\\">Save changes</CButton>\\n        </CModalFooter>\\n      </CModal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CLink,\n      CModal,\n      CModalBody,\n      CModalContent,\n      CModalDialog,\n      CModalFooter,\n      CModalHeader,\n      CModalTitle,\n      CPopover,\n      CTooltip,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = useState(false);\n        return <>\n        <CButton onClick={() => setVisible(!visible)} mdxType=\"CButton\">Launch static backdrop modal</CButton>\n        <CModal visible={visible} mdxType=\"CModal\">\n          <CModalHeader onDismiss={() => setVisible(false)} mdxType=\"CModalHeader\">\n            <CModalTitle mdxType=\"CModalTitle\">Modal title</CModalTitle>\n          </CModalHeader>\n          <CModalBody mdxType=\"CModalBody\">\n            I will not close if you click outside me. Don't even try to press escape key.\n          </CModalBody>\n          <CModalFooter mdxType=\"CModalFooter\">\n            <CButton color=\"secondary\" onClick={() => setVisible(false)} mdxType=\"CButton\">\n              Close\n            </CButton>\n            <CButton color=\"primary\" mdxType=\"CButton\">Save changes</CButton>\n          </CModalFooter>\n        </CModal>\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"scrolling-long-content\"\n    }}>{`Scrolling long content`}</h3>\n    <p>{`When modals become too long for the user's viewport or device, they scroll independent of the page itself. Try the demo below to see what we mean.`}</p>\n    <Playground __position={3} __code={'() => {\\n  const [visible, setVisible] = useState(false)\\n  return (\\n    <>\\n      <CButton onClick={() => setVisible(!visible)}>\\n        Launch demo modal\\n      </CButton>\\n      <CModal visible={visible} onDismiss={() => setVisible(false)}>\\n        <CModalHeader onDismiss={() => setVisible(false)}>\\n          <CModalTitle>Modal title</CModalTitle>\\n        </CModalHeader>\\n        <CModalBody>\\n          <p>\\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\\n            ac consectetur ac, vestibulum at eros.\\n          </p>\\n          <p>\\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur\\n            et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\\n            auctor.\\n          </p>\\n          <p>\\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\\n          </p>\\n          <p>\\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\\n            ac consectetur ac, vestibulum at eros.\\n          </p>\\n          <p>\\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur\\n            et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\\n            auctor.\\n          </p>\\n          <p>\\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\\n          </p>\\n          <p>\\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\\n            ac consectetur ac, vestibulum at eros.\\n          </p>\\n          <p>\\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur\\n            et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\\n            auctor.\\n          </p>\\n          <p>\\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\\n          </p>\\n          <p>\\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\\n            ac consectetur ac, vestibulum at eros.\\n          </p>\\n          <p>\\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur\\n            et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\\n            auctor.\\n          </p>\\n          <p>\\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\\n          </p>\\n          <p>\\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\\n            ac consectetur ac, vestibulum at eros.\\n          </p>\\n          <p>\\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur\\n            et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\\n            auctor.\\n          </p>\\n          <p>\\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\\n          </p>\\n          <p>\\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\\n            ac consectetur ac, vestibulum at eros.\\n          </p>\\n          <p>\\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur\\n            et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\\n            auctor.\\n          </p>\\n          <p>\\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\\n          </p>\\n        </CModalBody>\\n        <CModalFooter>\\n          <CButton color=\\\"secondary\\\" onClick={() => setVisible(false)}>\\n            Close\\n          </CButton>\\n          <CButton color=\\\"primary\\\">Save changes</CButton>\\n        </CModalFooter>\\n      </CModal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CLink,\n      CModal,\n      CModalBody,\n      CModalContent,\n      CModalDialog,\n      CModalFooter,\n      CModalHeader,\n      CModalTitle,\n      CPopover,\n      CTooltip,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = useState(false);\n        return <>\n        <CButton onClick={() => setVisible(!visible)} mdxType=\"CButton\">Launch demo modal</CButton>\n        <CModal visible={visible} onDismiss={() => setVisible(false)} mdxType=\"CModal\">\n          <CModalHeader onDismiss={() => setVisible(false)} mdxType=\"CModalHeader\">\n            <CModalTitle mdxType=\"CModalTitle\">Modal title</CModalTitle>\n          </CModalHeader>\n          <CModalBody mdxType=\"CModalBody\">\n            <p>\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\n              at eros.\n            </p>\n            <p>\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\n            </p>\n            <p>\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n              auctor fringilla.\n            </p>\n            <p>\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\n              at eros.\n            </p>\n            <p>\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\n            </p>\n            <p>\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n              auctor fringilla.\n            </p>\n            <p>\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\n              at eros.\n            </p>\n            <p>\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\n            </p>\n            <p>\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n              auctor fringilla.\n            </p>\n            <p>\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\n              at eros.\n            </p>\n            <p>\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\n            </p>\n            <p>\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n              auctor fringilla.\n            </p>\n            <p>\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\n              at eros.\n            </p>\n            <p>\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\n            </p>\n            <p>\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n              auctor fringilla.\n            </p>\n            <p>\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\n              at eros.\n            </p>\n            <p>\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\n            </p>\n            <p>\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n              auctor fringilla.\n            </p>\n          </CModalBody>\n          <CModalFooter mdxType=\"CModalFooter\">\n            <CButton color=\"secondary\" onClick={() => setVisible(false)} mdxType=\"CButton\">\n              Close\n            </CButton>\n            <CButton color=\"primary\" mdxType=\"CButton\">Save changes</CButton>\n          </CModalFooter>\n        </CModal>\n      </>;\n      }}\n    </Playground>\n    <p>{`You can also create a scrollable modal that allows scroll the modal body by adding `}<inlineCode parentName=\"p\">{`scrollable`}</inlineCode>{` prop.`}</p>\n    <Playground __position={4} __code={'() => {\\n  const [visible, setVisible] = useState(false)\\n  return (\\n    <>\\n      <CButton onClick={() => setVisible(!visible)}>\\n        Launch demo modal\\n      </CButton>\\n      <CModal\\n        scrollable\\n        visible={visible}\\n        onDismiss={() => setVisible(false)}\\n      >\\n        <CModalHeader onDismiss={() => setVisible(false)}>\\n          <CModalTitle>Modal title</CModalTitle>\\n        </CModalHeader>\\n        <CModalBody>\\n          <p>\\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\\n            ac consectetur ac, vestibulum at eros.\\n          </p>\\n          <p>\\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur\\n            et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\\n            auctor.\\n          </p>\\n          <p>\\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\\n          </p>\\n          <p>\\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\\n            ac consectetur ac, vestibulum at eros.\\n          </p>\\n          <p>\\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur\\n            et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\\n            auctor.\\n          </p>\\n          <p>\\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\\n          </p>\\n          <p>\\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\\n            ac consectetur ac, vestibulum at eros.\\n          </p>\\n          <p>\\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur\\n            et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\\n            auctor.\\n          </p>\\n          <p>\\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\\n          </p>\\n          <p>\\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\\n            ac consectetur ac, vestibulum at eros.\\n          </p>\\n          <p>\\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur\\n            et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\\n            auctor.\\n          </p>\\n          <p>\\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\\n          </p>\\n          <p>\\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\\n            ac consectetur ac, vestibulum at eros.\\n          </p>\\n          <p>\\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur\\n            et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\\n            auctor.\\n          </p>\\n          <p>\\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\\n          </p>\\n          <p>\\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\\n            ac consectetur ac, vestibulum at eros.\\n          </p>\\n          <p>\\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur\\n            et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\\n            auctor.\\n          </p>\\n          <p>\\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\\n          </p>\\n        </CModalBody>\\n        <CModalFooter>\\n          <CButton color=\\\"secondary\\\" onClick={() => setVisible(false)}>\\n            Close\\n          </CButton>\\n          <CButton color=\\\"primary\\\">Save changes</CButton>\\n        </CModalFooter>\\n      </CModal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CLink,\n      CModal,\n      CModalBody,\n      CModalContent,\n      CModalDialog,\n      CModalFooter,\n      CModalHeader,\n      CModalTitle,\n      CPopover,\n      CTooltip,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = useState(false);\n        return <>\n        <CButton onClick={() => setVisible(!visible)} mdxType=\"CButton\">Launch demo modal</CButton>\n        <CModal scrollable visible={visible} onDismiss={() => setVisible(false)} mdxType=\"CModal\">\n          <CModalHeader onDismiss={() => setVisible(false)} mdxType=\"CModalHeader\">\n            <CModalTitle mdxType=\"CModalTitle\">Modal title</CModalTitle>\n          </CModalHeader>\n          <CModalBody mdxType=\"CModalBody\">\n            <p>\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\n              at eros.\n            </p>\n            <p>\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\n            </p>\n            <p>\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n              auctor fringilla.\n            </p>\n            <p>\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\n              at eros.\n            </p>\n            <p>\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\n            </p>\n            <p>\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n              auctor fringilla.\n            </p>\n            <p>\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\n              at eros.\n            </p>\n            <p>\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\n            </p>\n            <p>\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n              auctor fringilla.\n            </p>\n            <p>\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\n              at eros.\n            </p>\n            <p>\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\n            </p>\n            <p>\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n              auctor fringilla.\n            </p>\n            <p>\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\n              at eros.\n            </p>\n            <p>\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\n            </p>\n            <p>\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n              auctor fringilla.\n            </p>\n            <p>\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\n              at eros.\n            </p>\n            <p>\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\n            </p>\n            <p>\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n              auctor fringilla.\n            </p>\n          </CModalBody>\n          <CModalFooter mdxType=\"CModalFooter\">\n            <CButton color=\"secondary\" onClick={() => setVisible(false)} mdxType=\"CButton\">\n              Close\n            </CButton>\n            <CButton color=\"primary\" mdxType=\"CButton\">Save changes</CButton>\n          </CModalFooter>\n        </CModal>\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"vertically-centered\"\n    }}>{`Vertically centered`}</h3>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`alignment=\"center`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`<CModal>`}</inlineCode>{` to vertically center the modal.`}</p>\n    <Playground __position={5} __code={'() => {\\n  const [visible, setVisible] = useState(false)\\n  return (\\n    <>\\n      <CButton onClick={() => setVisible(!visible)}>\\n        Vertically centered modal\\n      </CButton>\\n      <CModal alignment=\\\"center\\\" visible={visible}>\\n        <CModalHeader onDismiss={() => setVisible(false)}>\\n          <CModalTitle>Modal title</CModalTitle>\\n        </CModalHeader>\\n        <CModalBody>\\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\\n          dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\\n          ac consectetur ac, vestibulum at eros.\\n        </CModalBody>\\n        <CModalFooter>\\n          <CButton color=\\\"secondary\\\" onClick={() => setVisible(false)}>\\n            Close\\n          </CButton>\\n          <CButton color=\\\"primary\\\">Save changes</CButton>\\n        </CModalFooter>\\n      </CModal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CLink,\n      CModal,\n      CModalBody,\n      CModalContent,\n      CModalDialog,\n      CModalFooter,\n      CModalHeader,\n      CModalTitle,\n      CPopover,\n      CTooltip,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = useState(false);\n        return <>\n        <CButton onClick={() => setVisible(!visible)} mdxType=\"CButton\">Vertically centered modal</CButton>\n        <CModal alignment=\"center\" visible={visible} mdxType=\"CModal\">\n          <CModalHeader onDismiss={() => setVisible(false)} mdxType=\"CModalHeader\">\n            <CModalTitle mdxType=\"CModalTitle\">Modal title</CModalTitle>\n          </CModalHeader>\n          <CModalBody mdxType=\"CModalBody\">\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n          </CModalBody>\n          <CModalFooter mdxType=\"CModalFooter\">\n            <CButton color=\"secondary\" onClick={() => setVisible(false)} mdxType=\"CButton\">\n              Close\n            </CButton>\n            <CButton color=\"primary\" mdxType=\"CButton\">Save changes</CButton>\n          </CModalFooter>\n        </CModal>\n      </>;\n      }}\n    </Playground>\n    <Playground __position={6} __code={'() => {\\n  const [visible, setVisible] = useState(false)\\n  return (\\n    <>\\n      <CButton onClick={() => setVisible(!visible)}>\\n        Vertically centered scrollable modal\\n      </CButton>\\n      <CModal alignment=\\\"center\\\" scrollable visible={visible}>\\n        <CModalHeader onDismiss={() => setVisible(false)}>\\n          <CModalTitle>Modal title</CModalTitle>\\n        </CModalHeader>\\n        <CModalBody>\\n          <p>\\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\\n            ac consectetur ac, vestibulum at eros.\\n          </p>\\n          <p>\\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur\\n            et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\\n            auctor.\\n          </p>\\n          <p>\\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\\n          </p>\\n          <p>\\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\\n            ac consectetur ac, vestibulum at eros.\\n          </p>\\n          <p>\\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur\\n            et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\\n            auctor.\\n          </p>\\n        </CModalBody>\\n        <CModalFooter>\\n          <CButton color=\\\"secondary\\\" onClick={() => setVisible(false)}>\\n            Close\\n          </CButton>\\n          <CButton color=\\\"primary\\\">Save changes</CButton>\\n        </CModalFooter>\\n      </CModal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CLink,\n      CModal,\n      CModalBody,\n      CModalContent,\n      CModalDialog,\n      CModalFooter,\n      CModalHeader,\n      CModalTitle,\n      CPopover,\n      CTooltip,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = useState(false);\n        return <>\n        <CButton onClick={() => setVisible(!visible)} mdxType=\"CButton\">Vertically centered scrollable modal</CButton>\n        <CModal alignment=\"center\" scrollable visible={visible} mdxType=\"CModal\">\n          <CModalHeader onDismiss={() => setVisible(false)} mdxType=\"CModalHeader\">\n            <CModalTitle mdxType=\"CModalTitle\">Modal title</CModalTitle>\n          </CModalHeader>\n          <CModalBody mdxType=\"CModalBody\">\n            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\n            <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\n            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\n          </CModalBody>\n          <CModalFooter mdxType=\"CModalFooter\">\n            <CButton color=\"secondary\" onClick={() => setVisible(false)} mdxType=\"CButton\">\n              Close\n            </CButton>\n            <CButton color=\"primary\" mdxType=\"CButton\">Save changes</CButton>\n          </CModalFooter>\n        </CModal>\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"tooltips-and-popovers\"\n    }}>{`Tooltips and popovers`}</h3>\n    <p><inlineCode parentName=\"p\">{`<CTooltips>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<CPopovers>`}</inlineCode>{` can be placed within modals as needed. When modals are closed, any tooltips and popovers within are also automatically dismissed.`}</p>\n    <Playground __position={7} __code={'() => {\\n  const [visible, setVisible] = useState(false)\\n  return (\\n    <>\\n      <CButton onClick={() => setVisible(!visible)}>\\n        Launch demo modal\\n      </CButton>\\n      <CModal alignment=\\\"center\\\" visible={visible}>\\n        <CModalHeader onDismiss={() => setVisible(false)}>\\n          <CModalTitle>Modal title</CModalTitle>\\n        </CModalHeader>\\n        <CModalBody>\\n          <h5>Popover in a modal</h5>\\n          <p>\\n            This\\n            <CPopover\\n              title=\\\"Popover title\\\"\\n              content=\\\"Popover body content is set in this property.\\\"\\n            >\\n              <CButton>button</CButton>\\n            </CPopover>{\\' \\'}\\n            triggers a popover on click.\\n          </p>\\n          <hr />\\n          <h5>Tooltips in a modal</h5>\\n          <p>\\n            <CTooltip content=\\\"Tooltip\\\">\\n              <CLink>This link</CLink>\\n            </CTooltip>{\\' \\'}\\n            and\\n            <CTooltip content=\\\"Tooltip\\\">\\n              <CLink>that link</CLink>\\n            </CTooltip>{\\' \\'}\\n            have tooltips on hover.\\n          </p>\\n        </CModalBody>\\n        <CModalFooter>\\n          <CButton color=\\\"secondary\\\" onClick={() => setVisible(false)}>\\n            Close\\n          </CButton>\\n          <CButton color=\\\"primary\\\">Save changes</CButton>\\n        </CModalFooter>\\n      </CModal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CLink,\n      CModal,\n      CModalBody,\n      CModalContent,\n      CModalDialog,\n      CModalFooter,\n      CModalHeader,\n      CModalTitle,\n      CPopover,\n      CTooltip,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = useState(false);\n        return <>\n        <CButton onClick={() => setVisible(!visible)} mdxType=\"CButton\">Launch demo modal</CButton>\n        <CModal alignment=\"center\" visible={visible} mdxType=\"CModal\">\n          <CModalHeader onDismiss={() => setVisible(false)} mdxType=\"CModalHeader\">\n            <CModalTitle mdxType=\"CModalTitle\">Modal title</CModalTitle>\n          </CModalHeader>\n          <CModalBody mdxType=\"CModalBody\">\n            <h5>Popover in a modal</h5>\n            <p>This \n            <CPopover title=\"Popover title\" content=\"Popover body content is set in this property.\" mdxType=\"CPopover\"><CButton mdxType=\"CButton\">button</CButton></CPopover> triggers a popover on click.\n            </p>\n            <hr />\n            <h5>Tooltips in a modal</h5>\n            <p>\n              <CTooltip content=\"Tooltip\" mdxType=\"CTooltip\"><CLink mdxType=\"CLink\">This link</CLink></CTooltip> and \n              <CTooltip content=\"Tooltip\" mdxType=\"CTooltip\"><CLink mdxType=\"CLink\">that link</CLink></CTooltip> have tooltips on hover.\n            </p>\n          </CModalBody>\n          <CModalFooter mdxType=\"CModalFooter\">\n            <CButton color=\"secondary\" onClick={() => setVisible(false)} mdxType=\"CButton\">\n              Close\n            </CButton>\n            <CButton color=\"primary\" mdxType=\"CButton\">Save changes</CButton>\n          </CModalFooter>\n        </CModal>\n      </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"optional-sizes\"\n    }}>{`Optional sizes`}</h2>\n    <p>{`Modals have three optional sizes, available via modifier classes to be placed on a `}<inlineCode parentName=\"p\">{`<CModal>`}</inlineCode>{`. These sizes kick in at certain breakpoints to avoid horizontal scrollbars on narrower viewports.`}</p>\n    <table className=\"table\">\n  <thead>\n    <tr>\n      <th>Size</th>\n      <th>Property size</th>\n      <th>Modal max-width</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Small</td>\n      <td><code>'sm'</code></td>\n      <td><code>300px</code></td>\n    </tr>\n    <tr>\n      <td>Default</td>\n      <td className=\"text-muted\">None</td>\n      <td><code>500px</code></td>\n    </tr>\n    <tr>\n      <td>Large</td>\n      <td><code>'lg'</code></td>\n      <td><code>800px</code></td>\n    </tr>\n    <tr>\n      <td>Extra large</td>\n      <td><code>'xl'</code></td>\n      <td><code>1140px</code></td>\n    </tr>\n  </tbody>\n    </table>\n    <Playground __position={9} __code={'() => {\\n  const [visibleXL, setVisibleXL] = useState(false)\\n  const [visibleLg, setVisibleLg] = useState(false)\\n  const [visibleSm, setVisibleSm] = useState(false)\\n  return (\\n    <>\\n      <CButton onClick={() => setVisibleXL(!visibleXL)}>\\n        Extra large modal\\n      </CButton>\\n      <CButton onClick={() => setVisibleLg(!visibleLg)}>Large modal</CButton>\\n      <CButton onClick={() => setVisibleSm(!visibleSm)}>\\n        Small large modal\\n      </CButton>\\n      <CModal size=\\\"xl\\\" visible={visibleXL}>\\n        <CModalHeader onDismiss={() => setVisibleXL(false)}>\\n          <CModalTitle>Extra large modal</CModalTitle>\\n        </CModalHeader>\\n        <CModalBody>...</CModalBody>\\n      </CModal>\\n      <CModal size=\\\"lg\\\" visible={visibleLg}>\\n        <CModalHeader onDismiss={() => setVisibleLg(false)}>\\n          <CModalTitle>Large modal</CModalTitle>\\n        </CModalHeader>\\n        <CModalBody>...</CModalBody>\\n      </CModal>\\n      <CModal size=\\\"sm\\\" visible={visibleSm}>\\n        <CModalHeader onDismiss={() => setVisibleSm(false)}>\\n          <CModalTitle>Small modal</CModalTitle>\\n        </CModalHeader>\\n        <CModalBody>...</CModalBody>\\n      </CModal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CLink,\n      CModal,\n      CModalBody,\n      CModalContent,\n      CModalDialog,\n      CModalFooter,\n      CModalHeader,\n      CModalTitle,\n      CPopover,\n      CTooltip,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visibleXL, setVisibleXL] = useState(false);\n        const [visibleLg, setVisibleLg] = useState(false);\n        const [visibleSm, setVisibleSm] = useState(false);\n        return <>\n        <CButton onClick={() => setVisibleXL(!visibleXL)} mdxType=\"CButton\">Extra large modal</CButton>\n        <CButton onClick={() => setVisibleLg(!visibleLg)} mdxType=\"CButton\">Large modal</CButton>\n        <CButton onClick={() => setVisibleSm(!visibleSm)} mdxType=\"CButton\">Small large modal</CButton>\n        <CModal size=\"xl\" visible={visibleXL} mdxType=\"CModal\">\n          <CModalHeader onDismiss={() => setVisibleXL(false)} mdxType=\"CModalHeader\">\n            <CModalTitle mdxType=\"CModalTitle\">Extra large modal</CModalTitle>\n          </CModalHeader>\n          <CModalBody mdxType=\"CModalBody\">\n            ...\n          </CModalBody>\n        </CModal>\n        <CModal size=\"lg\" visible={visibleLg} mdxType=\"CModal\">\n          <CModalHeader onDismiss={() => setVisibleLg(false)} mdxType=\"CModalHeader\">\n            <CModalTitle mdxType=\"CModalTitle\">Large modal</CModalTitle>\n          </CModalHeader>\n          <CModalBody mdxType=\"CModalBody\">\n            ...\n          </CModalBody>\n        </CModal>\n        <CModal size=\"sm\" visible={visibleSm} mdxType=\"CModal\">\n          <CModalHeader onDismiss={() => setVisibleSm(false)} mdxType=\"CModalHeader\">\n            <CModalTitle mdxType=\"CModalTitle\">Small modal</CModalTitle>\n          </CModalHeader>\n          <CModalBody mdxType=\"CModalBody\">\n            ...\n          </CModalBody>\n        </CModal>\n      </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"fullscreen-modal\"\n    }}>{`Fullscreen Modal`}</h2>\n    <p>{`Another override is the option to pop up a modal that covers the user viewport, available via property `}<inlineCode parentName=\"p\">{`fullscrean`}</inlineCode>{`.`}</p>\n    <table className=\"table\">\n  <thead>\n    <tr>\n      <th>Property fullscrean</th>\n      <th>Availability</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>true</code></td>\n      <td>Always</td>\n    </tr>\n    <tr>\n      <td><code>'sm'</code></td>\n      <td>Below <code>576px</code></td>\n    </tr>\n    <tr>\n      <td><code>'md'</code></td>\n      <td>Below <code>768px</code></td>\n    </tr>\n    <tr>\n      <td><code>'lg'</code></td>\n      <td>Below <code>992px</code></td>\n    </tr>\n    <tr>\n      <td><code>'xl'</code></td>\n      <td>Below <code>1200px</code></td>\n    </tr>\n    <tr>\n      <td><code>'xxl'</code></td>\n      <td>Below <code>1400px</code></td>\n    </tr>\n  </tbody>\n    </table>\n    <Playground __position={11} __code={'() => {\\n  const [visible, setVisible] = useState(false)\\n  const [visibleSm, setVisibleSm] = useState(false)\\n  const [visibleMd, setVisibMdSm] = useState(false)\\n  const [visibleLg, setVisibleLg] = useState(false)\\n  const [visibleXL, setVisibleXL] = useState(false)\\n  const [visibleXXL, setVisibleXXL] = useState(false)\\n\\n  return (\\n    <>\\n      <CButton onClick={() => setVisible(!visible)}>Full screen</CButton>\\n      <CButton onClick={() => setVisibleSm(!visibleSm)}>\\n        Full screen below sm\\n      </CButton>\\n      <CButton onClick={() => setVisibleMd(!visibleMd)}>\\n        Full screen below md\\n      </CButton>\\n      <CButton onClick={() => setVisibleLg(!visibleLg)}>\\n        Full screen below lg\\n      </CButton>\\n      <CButton onClick={() => setVisibleXL(!visibleXL)}>\\n        Full screen below xl\\n      </CButton>\\n      <CButton onClick={() => setVisibleXXL(!visibleXXL)}>\\n        Full screen below xxl\\n      </CButton>\\n      <CModal fullscreen visible={visible}>\\n        <CModalHeader onDismiss={() => setVisible(false)}>\\n          <CModalTitle>Full screen</CModalTitle>\\n        </CModalHeader>\\n        <CModalBody>...</CModalBody>\\n      </CModal>\\n      <CModal fullscreen=\\\"sm\\\" visible={visibleSm}>\\n        <CModalHeader onDismiss={() => setVisibleSm(false)}>\\n          <CModalTitle>Full screen below sm</CModalTitle>\\n        </CModalHeader>\\n        <CModalBody>...</CModalBody>\\n      </CModal>\\n      <CModal fullscreen=\\\"md\\\" visible={visibleMd}>\\n        <CModalHeader onDismiss={() => setVisibleMd(false)}>\\n          <CModalTitle>Full screen below md</CModalTitle>\\n        </CModalHeader>\\n        <CModalBody>...</CModalBody>\\n      </CModal>\\n      <CModal fullscreen=\\\"lg\\\" visible={visibleLg}>\\n        <CModalHeader onDismiss={() => setVisibleLg(false)}>\\n          <CModalTitle>Full screen below lg</CModalTitle>\\n        </CModalHeader>\\n        <CModalBody>...</CModalBody>\\n      </CModal>\\n      <CModal fullscreen=\\\"xl\\\" visible={visibleXL}>\\n        <CModalHeader onDismiss={() => setVisibleXL(false)}>\\n          <CModalTitle>Full screen below xl</CModalTitle>\\n        </CModalHeader>\\n        <CModalBody>...</CModalBody>\\n      </CModal>\\n      <CModal fullscreen=\\\"xxl\\\" visible={visibleXXL}>\\n        <CModalHeader onDismiss={() => setVisibleXXL(false)}>\\n          <CModalTitle>Full screen below xxl</CModalTitle>\\n        </CModalHeader>\\n        <CModalBody>...</CModalBody>\\n      </CModal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CLink,\n      CModal,\n      CModalBody,\n      CModalContent,\n      CModalDialog,\n      CModalFooter,\n      CModalHeader,\n      CModalTitle,\n      CPopover,\n      CTooltip,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = useState(false);\n        const [visibleSm, setVisibleSm] = useState(false);\n        const [visibleMd, setVisibMdSm] = useState(false);\n        const [visibleLg, setVisibleLg] = useState(false);\n        const [visibleXL, setVisibleXL] = useState(false);\n        const [visibleXXL, setVisibleXXL] = useState(false);\n        return <>\n        <CButton onClick={() => setVisible(!visible)} mdxType=\"CButton\">Full screen</CButton>\n        <CButton onClick={() => setVisibleSm(!visibleSm)} mdxType=\"CButton\">Full screen below sm</CButton>\n        <CButton onClick={() => setVisibleMd(!visibleMd)} mdxType=\"CButton\">Full screen below md</CButton>\n        <CButton onClick={() => setVisibleLg(!visibleLg)} mdxType=\"CButton\">Full screen below lg</CButton>\n        <CButton onClick={() => setVisibleXL(!visibleXL)} mdxType=\"CButton\">Full screen below xl</CButton>\n        <CButton onClick={() => setVisibleXXL(!visibleXXL)} mdxType=\"CButton\">Full screen below xxl</CButton>\n        <CModal fullscreen visible={visible} mdxType=\"CModal\">\n          <CModalHeader onDismiss={() => setVisible(false)} mdxType=\"CModalHeader\">\n            <CModalTitle mdxType=\"CModalTitle\">Full screen</CModalTitle>\n          </CModalHeader>\n          <CModalBody mdxType=\"CModalBody\">\n            ...\n          </CModalBody>\n        </CModal>\n        <CModal fullscreen=\"sm\" visible={visibleSm} mdxType=\"CModal\">\n          <CModalHeader onDismiss={() => setVisibleSm(false)} mdxType=\"CModalHeader\">\n            <CModalTitle mdxType=\"CModalTitle\">Full screen below sm</CModalTitle>\n          </CModalHeader>\n          <CModalBody mdxType=\"CModalBody\">\n            ...\n          </CModalBody>\n        </CModal>\n        <CModal fullscreen=\"md\" visible={visibleMd} mdxType=\"CModal\">\n          <CModalHeader onDismiss={() => setVisibleMd(false)} mdxType=\"CModalHeader\">\n            <CModalTitle mdxType=\"CModalTitle\">Full screen below md</CModalTitle>\n          </CModalHeader>\n          <CModalBody mdxType=\"CModalBody\">\n            ...\n          </CModalBody>\n        </CModal>\n        <CModal fullscreen=\"lg\" visible={visibleLg} mdxType=\"CModal\">\n          <CModalHeader onDismiss={() => setVisibleLg(false)} mdxType=\"CModalHeader\">\n            <CModalTitle mdxType=\"CModalTitle\">Full screen below lg</CModalTitle>\n          </CModalHeader>\n          <CModalBody mdxType=\"CModalBody\">\n            ...\n          </CModalBody>\n        </CModal>\n        <CModal fullscreen=\"xl\" visible={visibleXL} mdxType=\"CModal\">\n          <CModalHeader onDismiss={() => setVisibleXL(false)} mdxType=\"CModalHeader\">\n            <CModalTitle mdxType=\"CModalTitle\">Full screen below xl</CModalTitle>\n          </CModalHeader>\n          <CModalBody mdxType=\"CModalBody\">\n            ...\n          </CModalBody>\n        </CModal>\n        <CModal fullscreen=\"xxl\" visible={visibleXXL} mdxType=\"CModal\">\n          <CModalHeader onDismiss={() => setVisibleXXL(false)} mdxType=\"CModalHeader\">\n            <CModalTitle mdxType=\"CModalTitle\">Full screen below xxl</CModalTitle>\n          </CModalHeader>\n          <CModalBody mdxType=\"CModalBody\">\n            ...\n          </CModalBody>\n        </CModal>\n      </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <h3 {...{\n      \"id\": \"cmodal\"\n    }}>{`CModal`}</h3>\n    <Props of={CModal} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"cmodalbody\"\n    }}>{`CModalBody`}</h3>\n    <Props of={CModalBody} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"cmodalcontent\"\n    }}>{`CModalContent`}</h3>\n    <Props of={CModalContent} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"cmodaldialog\"\n    }}>{`CModalDialog`}</h3>\n    <Props of={CModalDialog} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"cmodalfooter\"\n    }}>{`CModalFooter`}</h3>\n    <Props of={CModalFooter} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"cmodalheader\"\n    }}>{`CModalHeader`}</h3>\n    <Props of={CModalHeader} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"cmodaltitle\"\n    }}>{`CModalTitle`}</h3>\n    <Props of={CModalTitle} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}