{
    "componentChunkName": "component---src-docs-templates-docs-tsx",
    "path": "/components/alert/",
    "result": {"data":{"site":{"siteMetadata":{"title":"CoreUI for React.js"}},"mdx":{"id":"2ccdcd31-0dda-5547-8cd3-a83217d912fe","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React Alert Component\",\n  \"name\": \"Alert\",\n  \"description\": \"React alert component gives contextual feedback information for common user operations. The alert component is delivered with a bunch of usable and adjustable alert messages.\",\n  \"menu\": \"Components\",\n  \"route\": \"/components/alert\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Examples\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"React Alert is prepared for any length of text, as well as an optional close button. For a styling, use one of the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"required\"), \" contextual \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color\"), \" props (e.g., \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"primary\"), \"). For inline dismissal, use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#dismissing\"\n  }, \"dismissing prop\"), \".\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CAlert, {\n    color: \"primary\",\n    mdxType: \"CAlert\"\n  }, \"A simple primary alert\\u2014check it out!\"), mdx(CAlert, {\n    color: \"secondary\",\n    mdxType: \"CAlert\"\n  }, \"A simple secondary alert\\u2014check it out!\"), mdx(CAlert, {\n    color: \"success\",\n    mdxType: \"CAlert\"\n  }, \"A simple success alert\\u2014check it out!\"), mdx(CAlert, {\n    color: \"danger\",\n    mdxType: \"CAlert\"\n  }, \"A simple danger alert\\u2014check it out!\"), mdx(CAlert, {\n    color: \"warning\",\n    mdxType: \"CAlert\"\n  }, \"A simple warning alert\\u2014check it out!\"), mdx(CAlert, {\n    color: \"info\",\n    mdxType: \"CAlert\"\n  }, \"A simple info alert\\u2014check it out!\"), mdx(CAlert, {\n    color: \"light\",\n    mdxType: \"CAlert\"\n  }, \"A simple light alert\\u2014check it out!\"), mdx(CAlert, {\n    color: \"dark\",\n    mdxType: \"CAlert\"\n  }, \"A simple dark alert\\u2014check it out!\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CAlert color=\\\"primary\\\">\\n  A simple primary alert\\u2014check it out!\\n</CAlert>\\n<CAlert color=\\\"secondary\\\">\\n  A simple secondary alert\\u2014check it out!\\n</CAlert>\\n<CAlert color=\\\"success\\\">\\n  A simple success alert\\u2014check it out!\\n</CAlert>\\n<CAlert color=\\\"danger\\\">\\n  A simple danger alert\\u2014check it out!\\n</CAlert>\\n<CAlert color=\\\"warning\\\">\\n  A simple warning alert\\u2014check it out!\\n</CAlert>\\n<CAlert color=\\\"info\\\">\\n  A simple info alert\\u2014check it out!\\n</CAlert>\\n<CAlert color=\\\"light\\\">\\n  A simple light alert\\u2014check it out!\\n</CAlert>\\n<CAlert color=\\\"dark\\\">\\n  A simple dark alert\\u2014check it out!\\n</CAlert>\\n\")), mdx(CCallout, {\n    color: \"info\",\n    mdxType: \"CCallout\"\n  }, mdx(\"h5\", null, \"Conveying meaning to assistive technologies\"), mdx(\"p\", null, \"Using color to add meaning only provides a visual indication, which will not be conveyed to users of assistive technologies \\u2013 such as screen readers. Ensure that information denoted by the color is either obvious from the content itself (e.g. the visible text), or is included through alternative means, such as additional text hidden with the `.visually-hidden` class.\")), mdx(\"h2\", {\n    \"id\": \"link-color\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Link color\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#link-color\",\n    \"aria-label\": \"link color permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CAlertLink>\"), \" component to immediately give matching colored links inside any alert.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CAlert, {\n    color: \"primary\",\n    mdxType: \"CAlert\"\n  }, \"A simple primary alert with \", mdx(CAlertLink, {\n    href: \"#\",\n    mdxType: \"CAlertLink\"\n  }, \"an example link\"), \". Give it a click if you like.\"), mdx(CAlert, {\n    color: \"secondary\",\n    mdxType: \"CAlert\"\n  }, \"A simple secondary alert with \", mdx(CAlertLink, {\n    href: \"#\",\n    mdxType: \"CAlertLink\"\n  }, \"an example link\"), \". Give it a click if you like.\"), mdx(CAlert, {\n    color: \"success\",\n    mdxType: \"CAlert\"\n  }, \"A simple success alert with \", mdx(CAlertLink, {\n    href: \"#\",\n    mdxType: \"CAlertLink\"\n  }, \"an example link\"), \". Give it a click if you like.\"), mdx(CAlert, {\n    color: \"danger\",\n    mdxType: \"CAlert\"\n  }, \"A simple danger alert with \", mdx(CAlertLink, {\n    href: \"#\",\n    mdxType: \"CAlertLink\"\n  }, \"an example link\"), \". Give it a click if you like.\"), mdx(CAlert, {\n    color: \"warning\",\n    mdxType: \"CAlert\"\n  }, \"A simple warning alert with \", mdx(CAlertLink, {\n    href: \"#\",\n    mdxType: \"CAlertLink\"\n  }, \"an example link\"), \". Give it a click if you like.\"), mdx(CAlert, {\n    color: \"info\",\n    mdxType: \"CAlert\"\n  }, \"A simple info alert with \", mdx(CAlertLink, {\n    href: \"#\",\n    mdxType: \"CAlertLink\"\n  }, \"an example link\"), \". Give it a click if you like.\"), mdx(CAlert, {\n    color: \"light\",\n    mdxType: \"CAlert\"\n  }, \"A simple light alert with \", mdx(CAlertLink, {\n    href: \"#\",\n    mdxType: \"CAlertLink\"\n  }, \"an example link\"), \". Give it a click if you like.\"), mdx(CAlert, {\n    color: \"dark\",\n    mdxType: \"CAlert\"\n  }, \"A simple dark alert with \", mdx(CAlertLink, {\n    href: \"#\",\n    mdxType: \"CAlertLink\"\n  }, \"an example link\"), \". Give it a click if you like.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CAlert color=\\\"primary\\\">\\n  A simple primary alert with <CAlertLink href=\\\"#\\\">an example link</CAlertLink>. Give it a click if you like.\\n</CAlert>\\n<CAlert color=\\\"secondary\\\">\\n  A simple secondary alert with <CAlertLink href=\\\"#\\\">an example link</CAlertLink>. Give it a click if you like.\\n</CAlert>\\n<CAlert color=\\\"success\\\">\\n  A simple success alert with <CAlertLink href=\\\"#\\\">an example link</CAlertLink>. Give it a click if you like.\\n</CAlert>\\n<CAlert color=\\\"danger\\\">\\n  A simple danger alert with <CAlertLink href=\\\"#\\\">an example link</CAlertLink>. Give it a click if you like.\\n</CAlert>\\n<CAlert color=\\\"warning\\\">\\n  A simple warning alert with <CAlertLink href=\\\"#\\\">an example link</CAlertLink>. Give it a click if you like.\\n</CAlert>\\n<CAlert color=\\\"info\\\">\\n  A simple info alert with <CAlertLink href=\\\"#\\\">an example link</CAlertLink>. Give it a click if you like.\\n</CAlert>\\n<CAlert color=\\\"light\\\">\\n  A simple light alert with <CAlertLink href=\\\"#\\\">an example link</CAlertLink>. Give it a click if you like.\\n</CAlert>\\n<CAlert color=\\\"dark\\\">\\n  A simple dark alert with <CAlertLink href=\\\"#\\\">an example link</CAlertLink>. Give it a click if you like.\\n</CAlert>\\n\")), mdx(\"h2\", {\n    \"id\": \"additional-content\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Additional content\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#additional-content\",\n    \"aria-label\": \"additional content permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Alert can also incorporate supplementary components \", \"&\", \" elements like heading, paragraph, and divider.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CAlert, {\n    color: \"success\",\n    mdxType: \"CAlert\"\n  }, mdx(CAlertHeading, {\n    tag: \"h4\",\n    mdxType: \"CAlertHeading\"\n  }, \"Well done!\"), mdx(\"p\", null, \"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\"), mdx(\"hr\", null), mdx(\"p\", {\n    className: \"mb-0\"\n  }, \"Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CAlert color=\\\"success\\\">\\n  <CAlertHeading tag=\\\"h4\\\">Well done!</CAlertHeading>\\n  <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>\\n  <hr />\\n  <p className=\\\"mb-0\\\">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>\\n</CAlert>\\n\")), mdx(\"h2\", {\n    \"id\": \"dismissing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Dismissing\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#dismissing\",\n    \"aria-label\": \"dismissing permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Alerts can also be easily dismissed. Just add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dismissible\"), \" prop.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CAlert, {\n    color: \"warning\",\n    dismissible: true,\n    onDismissed: function onDismissed() {\n      alert(\"👋 Well, hi there! Thanks for dismissing me.\");\n    },\n    mdxType: \"CAlert\"\n  }, mdx(\"strong\", null, \"Go right ahead\"), \" and click that dimiss over there on the right.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CAlert\\n  color=\\\"warning\\\"\\n  dismissible\\n  onDismissed={() => {\\n    alert(\\\"\\uD83D\\uDC4B Well, hi there! Thanks for dismissing me.\\\");\\n  }}\\n>\\n  <strong>Go right ahead</strong> and click that dimiss over there on the right.\\n</CAlert>\\n\")), mdx(CCallout, {\n    color: \"warning\",\n    mdxType: \"CCallout\"\n  }, mdx(\"p\", null, \"When an alert is dismissed, the element is completely removed from the page structure. If a keyboard user dismisses the alert using the close button, their focus will suddenly be lost and, depending on the browser, reset to the start of the page/document.\")), mdx(\"h2\", {\n    \"id\": \"api\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"API\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#api\",\n    \"aria-label\": \"api permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"calert\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CAlert\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#calert\",\n    \"aria-label\": \"calert permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"color\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Sets the color context of the component to one of CoreUI\\u2019s themed colors.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"{'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string }\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"primary\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"dismissible\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Optionally add a close button to alert and allow it to self dismiss.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"onDismiss\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Method called before the dissmiss animation has started.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"() => void\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"onDismissed\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Method called after the dissmiss animation has completed and the component is removed from the dom.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"() => void\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"variant\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set the alert variant to a solid.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"visible\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Toggle the visibility of component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"true\"))))), mdx(\"h3\", {\n    \"id\": \"calertheading\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CAlertHeading\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#calertheading\",\n    \"aria-label\": \"calertheading permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the base component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"component\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Component used for the root node. Either a string to use a HTML element or a component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string | ComponentClass<any, any> | FunctionComponent<any>\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"'h4'\"))))), mdx(\"h3\", {\n    \"id\": \"calertlink\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CAlertLink\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#calertlink\",\n    \"aria-label\": \"calertlink permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the base component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"React Alert Component","description":"React alert component gives contextual feedback information for common user operations. The alert component is delivered with a bunch of usable and adjustable alert messages.","route":"/components/alert"},"tableOfContents":{"items":[{"url":"#examples","title":"Examples"},{"url":"#link-color","title":"Link color"},{"url":"#additional-content","title":"Additional content"},{"url":"#dismissing","title":"Dismissing"},{"url":"#api","title":"API","items":[{"url":"#calert","title":"CAlert"},{"url":"#calertheading","title":"CAlertHeading"},{"url":"#calertlink","title":"CAlertLink"}]}]}}},"pageContext":{"id":"2ccdcd31-0dda-5547-8cd3-a83217d912fe"}},
    "staticQueryHashes": ["4202924991"]}