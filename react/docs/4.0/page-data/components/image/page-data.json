{
    "componentChunkName": "component---src-docs-templates-docs-tsx",
    "path": "/components/image/",
    "result": {"data":{"site":{"siteMetadata":{"title":"CoreUI for React.js"}},"mdx":{"id":"8aa99642-b300-539b-b208-18909a09dd35","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React Image Component\",\n  \"name\": \"Image\",\n  \"description\": \"React image component with responsive behavior (so it's never become larger than their parent element) and special styles.\",\n  \"menu\": \"Components\",\n  \"route\": \"/components/image\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"responsive-images\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Responsive images\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#responsive-images\",\n    \"aria-label\": \"responsive images permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Images in CoreUI for React.js are made responsive with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fluid\"), \" property. This applies \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"max-width: 100%;\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"height: auto;\"), \" to the image so that it scales with the parent element.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CImage, {\n    fluid: true,\n    src: ReactImg,\n    mdxType: \"CImage\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CImage fluid src=\\\"/images/react.jpg\\\" />\\n\")), mdx(\"h2\", {\n    \"id\": \"image-thumbnails\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Image thumbnails\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#image-thumbnails\",\n    \"aria-label\": \"image thumbnails permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"In addition to our \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://coreui.io/docs/4.0/utilities/borders\"\n  }, \"border-radius utilities\"), \", you can use prop\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"thumbnail\"), \" to give an image a rounded 1px border appearance.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CImage, {\n    rounded: true,\n    thumbnail: true,\n    src: React400Img,\n    width: 200,\n    height: 200,\n    mdxType: \"CImage\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CImage rounded thumbnail src=\\\"/images/react400.jpg\\\" width={200} height={200} />\\n\")), mdx(\"h2\", {\n    \"id\": \"aligning-images\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Aligning images\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#aligning-images\",\n    \"aria-label\": \"aligning images permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Align images with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"align\"), \" property.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(\"div\", {\n    className: \"clearfix\"\n  }, mdx(CImage, {\n    align: \"start\",\n    rounded: true,\n    src: React400Img,\n    width: 200,\n    height: 200,\n    mdxType: \"CImage\"\n  }), mdx(CImage, {\n    align: \"end\",\n    rounded: true,\n    src: React400Img,\n    width: 200,\n    height: 200,\n    mdxType: \"CImage\"\n  }))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<div className=\\\"clearfix\\\">\\n  <CImage align=\\\"start\\\" rounded src=\\\"/images/react400.jpg\\\" width={200} height={200} />\\n  <CImage align=\\\"end\\\" rounded src=\\\"/images/react400.jpg\\\" width={200} height={200} />\\n</div>\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(\"div\", {\n    className: \"clearfix\"\n  }, mdx(CImage, {\n    align: \"center\",\n    rounded: true,\n    src: React400Img,\n    width: 200,\n    height: 200,\n    mdxType: \"CImage\"\n  }))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<div className=\\\"clearfix\\\">\\n  <CImage align=\\\"center\\\" rounded src=\\\"/images/react400.jpg\\\" width={200} height={200} />\\n</div>\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(\"div\", {\n    className: \"text-center\"\n  }, mdx(CImage, {\n    rounded: true,\n    src: React400Img,\n    width: 200,\n    height: 200,\n    mdxType: \"CImage\"\n  }))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<div className=\\\"text-center\\\">\\n  <CImage rounded src=\\\"/images/react400.jpg\\\" width={200} height={200} />\\n</div>\\n\")), mdx(\"h2\", {\n    \"id\": \"api\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"API\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#api\",\n    \"aria-label\": \"api permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"cimage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CImage\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cimage\",\n    \"aria-label\": \"cimage permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"align\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set the horizontal aligment.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"\\\"start\\\" | \\\"center\\\" | \\\"end\\\"\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"fluid\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Make image responsive.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"rounded\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Make image rounded.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"thumbnail\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Give an image a rounded 1px border appearance.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"React Image Component","description":"React image component with responsive behavior (so it's never become larger than their parent element) and special styles.","route":"/components/image"},"tableOfContents":{"items":[{"url":"#responsive-images","title":"Responsive images"},{"url":"#image-thumbnails","title":"Image thumbnails"},{"url":"#aligning-images","title":"Aligning images"},{"url":"#api","title":"API","items":[{"url":"#cimage","title":"CImage"}]}]}}},"pageContext":{"id":"8aa99642-b300-539b-b208-18909a09dd35"}},
    "staticQueryHashes": ["4202924991"]}