{
    "componentChunkName": "component---src-docs-templates-docs-tsx",
    "path": "/components/list-group/",
    "result": {"data":{"site":{"siteMetadata":{"title":"CoreUI for React.js"}},"mdx":{"id":"4ecf0bbd-b4b4-5774-8423-e5114d528b49","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React List Group Component\",\n  \"name\": \"List group\",\n  \"description\": \"React List Group component allows displaying a series of content. Learn how to use react list group to build complex list structure on your website.\",\n  \"menu\": \"Components\",\n  \"route\": \"/components/list-group\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"basic-example\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Basic example\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#basic-example\",\n    \"aria-label\": \"basic example permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"The default list group is an unordered list with items and the proper CSS classes. Build upon it with the options that follow, or with your CSS as required.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CListGroup, {\n    mdxType: \"CListGroup\"\n  }, mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Cras justo odio\"), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Dapibus ac facilisis in\"), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Morbi leo risus\"), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Porta ac consectetur ac\"), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Vestibulum at eros\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CListGroup>\\n  <CListGroupItem>Cras justo odio</CListGroupItem>\\n  <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\\n  <CListGroupItem>Morbi leo risus</CListGroupItem>\\n  <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\\n  <CListGroupItem>Vestibulum at eros</CListGroupItem>\\n</CListGroup>\\n\")), mdx(\"h2\", {\n    \"id\": \"active-items\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Active items\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#active-items\",\n    \"aria-label\": \"active items permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"active\"), \" boolean property to a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CListGroupItem>\"), \" to show the current active selection.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CListGroup, {\n    mdxType: \"CListGroup\"\n  }, mdx(CListGroupItem, {\n    active: true,\n    mdxType: \"CListGroupItem\"\n  }, \"Cras justo odio\"), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Dapibus ac facilisis in\"), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Morbi leo risus\"), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Porta ac consectetur ac\"), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Vestibulum at eros\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CListGroup>\\n  <CListGroupItem active>Cras justo odio</CListGroupItem>\\n  <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\\n  <CListGroupItem>Morbi leo risus</CListGroupItem>\\n  <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\\n  <CListGroupItem>Vestibulum at eros</CListGroupItem>\\n</CListGroup>\\n\")), mdx(\"h2\", {\n    \"id\": \"disabled-items\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Disabled items\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#disabled-items\",\n    \"aria-label\": \"disabled items permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"disabled\"), \" boolean property to a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CListGroupItem>\"), \" to make it appear disabled.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CListGroup, {\n    mdxType: \"CListGroup\"\n  }, mdx(CListGroupItem, {\n    disabled: true,\n    mdxType: \"CListGroupItem\"\n  }, \"Cras justo odio\"), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Dapibus ac facilisis in\"), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Morbi leo risus\"), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Porta ac consectetur ac\"), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Vestibulum at eros\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CListGroup>\\n  <CListGroupItem disabled>Cras justo odio</CListGroupItem>\\n  <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\\n  <CListGroupItem>Morbi leo risus</CListGroupItem>\\n  <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\\n  <CListGroupItem>Vestibulum at eros</CListGroupItem>\\n</CListGroup>\\n\")), mdx(\"h2\", {\n    \"id\": \"links-and-buttons\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Links and buttons\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#links-and-buttons\",\n    \"aria-label\": \"links and buttons permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<a>\"), \"s or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<button>\"), \"s to create \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"actionable\"), \" list group items with hover, disabled, and active states by adding \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"component=\\\"a|button\\\"\"), \". We separate these pseudo-classes to ensure list groups made of non-interactive elements (like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<li>\"), \"s or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<div>\"), \"s) don't provide a click or tap affordance.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CListGroup, {\n    mdxType: \"CListGroup\"\n  }, mdx(CListGroupItem, {\n    component: \"a\",\n    href: \"#\",\n    active: true,\n    mdxType: \"CListGroupItem\"\n  }, \"Cras justo odio\"), mdx(CListGroupItem, {\n    component: \"a\",\n    href: \"#\",\n    mdxType: \"CListGroupItem\"\n  }, \"Dapibus ac facilisis in\"), mdx(CListGroupItem, {\n    component: \"a\",\n    href: \"#\",\n    mdxType: \"CListGroupItem\"\n  }, \"Morbi leo risus\"), mdx(CListGroupItem, {\n    component: \"a\",\n    href: \"#\",\n    mdxType: \"CListGroupItem\"\n  }, \"Porta ac consectetur ac\"), mdx(CListGroupItem, {\n    component: \"a\",\n    href: \"#\",\n    disabled: true,\n    mdxType: \"CListGroupItem\"\n  }, \"Vestibulum at eros\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CListGroup>\\n  <CListGroupItem component=\\\"a\\\" href=\\\"#\\\" active>\\n    Cras justo odio\\n  </CListGroupItem>\\n  <CListGroupItem component=\\\"a\\\" href=\\\"#\\\">\\n    Dapibus ac facilisis in\\n  </CListGroupItem>\\n  <CListGroupItem component=\\\"a\\\" href=\\\"#\\\">\\n    Morbi leo risus\\n  </CListGroupItem>\\n  <CListGroupItem component=\\\"a\\\" href=\\\"#\\\">\\n    Porta ac consectetur ac\\n  </CListGroupItem>\\n  <CListGroupItem component=\\\"a\\\" href=\\\"#\\\" disabled>\\n    Vestibulum at eros\\n  </CListGroupItem>\\n</CListGroup>\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CListGroup, {\n    mdxType: \"CListGroup\"\n  }, mdx(CListGroupItem, {\n    component: \"button\",\n    active: true,\n    mdxType: \"CListGroupItem\"\n  }, \"Cras justo odio\"), mdx(CListGroupItem, {\n    component: \"button\",\n    mdxType: \"CListGroupItem\"\n  }, \"Dapibus ac facilisis in\"), mdx(CListGroupItem, {\n    component: \"button\",\n    mdxType: \"CListGroupItem\"\n  }, \"Morbi leo risus\"), mdx(CListGroupItem, {\n    component: \"button\",\n    mdxType: \"CListGroupItem\"\n  }, \"Porta ac consectetur ac\"), mdx(CListGroupItem, {\n    component: \"button\",\n    disabled: true,\n    mdxType: \"CListGroupItem\"\n  }, \"Vestibulum at eros\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CListGroup>\\n  <CListGroupItem component=\\\"button\\\" active>\\n    Cras justo odio\\n  </CListGroupItem>\\n  <CListGroupItem component=\\\"button\\\">Dapibus ac facilisis in</CListGroupItem>\\n  <CListGroupItem component=\\\"button\\\">Morbi leo risus</CListGroupItem>\\n  <CListGroupItem component=\\\"button\\\">Porta ac consectetur ac</CListGroupItem>\\n  <CListGroupItem component=\\\"button\\\" disabled>\\n    Vestibulum at eros\\n  </CListGroupItem>\\n</CListGroup>\\n\")), mdx(\"h2\", {\n    \"id\": \"flush\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Flush\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#flush\",\n    \"aria-label\": \"flush permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"flush\"), \" boolean property to remove some borders and rounded corners to render list group items edge-to-edge in a parent container (e.g., cards).\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CListGroup, {\n    flush: true,\n    mdxType: \"CListGroup\"\n  }, mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Cras justo odio\"), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Dapibus ac facilisis in\"), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Morbi leo risus\"), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Porta ac consectetur ac\"), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Vestibulum at eros\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CListGroup flush>\\n  <CListGroupItem>Cras justo odio</CListGroupItem>\\n  <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\\n  <CListGroupItem>Morbi leo risus</CListGroupItem>\\n  <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\\n  <CListGroupItem>Vestibulum at eros</CListGroupItem>\\n</CListGroup>\\n\")), mdx(\"h2\", {\n    \"id\": \"horizontal\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Horizontal\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#horizontal\",\n    \"aria-label\": \"horizontal permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"layout=\\\"horizontal\\\"\"), \" to change the layout of list group items from vertical to horizontal across all breakpoints. Alternatively, choose a responsive variant \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".layout=\\\"horizontal-{sm|md|lg|xl|xxl}\\\"\"), \" to make a list group horizontal starting at that breakpoint's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"min-width\"), \". Currently \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"horizontal list groups cannot be combined with flush list groups.\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(React.Fragment, null, ['', '-sm', '-md', '-lg', '-xl', '-xxl'].map(function (breakpoint, index) {\n    return mdx(CListGroup, {\n      className: \"mb-2\",\n      layout: \"horizontal\".concat(breakpoint),\n      key: index,\n      mdxType: \"CListGroup\"\n    }, mdx(CListGroupItem, {\n      mdxType: \"CListGroupItem\"\n    }, \"Cras justo odio\"), mdx(CListGroupItem, {\n      mdxType: \"CListGroupItem\"\n    }, \"Dapibus ac facilisis in\"), mdx(CListGroupItem, {\n      mdxType: \"CListGroupItem\"\n    }, \"Morbi leo risus\"));\n  }))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<>\\n  {['', '-sm', '-md', '-lg', '-xl', '-xxl'].map((breakpoint, index) => (\\n    <CListGroup className=\\\"mb-2\\\" layout={`horizontal${breakpoint}`} key={index}>\\n      <CListGroupItem>Cras justo odio</CListGroupItem>\\n      <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\\n      <CListGroupItem>Morbi leo risus</CListGroupItem>\\n    </CListGroup>\\n  ))}\\n</>\\n\")), mdx(\"h2\", {\n    \"id\": \"contextual-classes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Contextual classes\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#contextual-classes\",\n    \"aria-label\": \"contextual classes permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Use contextual classes to style list items with a stateful background and color.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CListGroup, {\n    mdxType: \"CListGroup\"\n  }, mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, \"Dapibus ac facilisis in\"), ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map(function (color, index) {\n    return mdx(CListGroupItem, {\n      color: color,\n      key: index,\n      mdxType: \"CListGroupItem\"\n    }, \"A simple \", color, \" list group item\");\n  }))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CListGroup>\\n  <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\\n  {['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map(\\n    (color, index) => (\\n      <CListGroupItem color={color} key={index}>\\n        A simple {color} list group item\\n      </CListGroupItem>\\n    ),\\n  )}\\n</CListGroup>\\n\")), mdx(\"p\", null, \"Contextual classes also work with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<a>\"), \"s or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<button>\"), \"s. Note the addition of the hover styles here not present in the previous example. Also supported is the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"active\"), \" state; apply it to indicate an active selection on a contextual list group item.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CListGroup, {\n    mdxType: \"CListGroup\"\n  }, mdx(CListGroupItem, {\n    component: \"a\",\n    href: \"#\",\n    mdxType: \"CListGroupItem\"\n  }, \"Dapibus ac facilisis in\"), ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map(function (color, index) {\n    return mdx(CListGroupItem, {\n      component: \"a\",\n      href: \"#\",\n      color: color,\n      key: index,\n      mdxType: \"CListGroupItem\"\n    }, \"A simple \", color, \" list group item\");\n  }))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CListGroup>\\n  <CListGroupItem component=\\\"a\\\" href=\\\"#\\\">\\n    Dapibus ac facilisis in\\n  </CListGroupItem>\\n  {['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map(\\n    (color, index) => (\\n      <CListGroupItem component=\\\"a\\\" href=\\\"#\\\" color={color} key={index}>\\n        A simple {color} list group item\\n      </CListGroupItem>\\n    ),\\n  )}\\n</CListGroup>\\n\")), mdx(CCallout, {\n    color: \"info\",\n    mdxType: \"CCallout\"\n  }, mdx(\"h5\", null, \"Conveying meaning to assistive technologies\"), mdx(\"p\", null, \"Using color to add meaning only provides a visual indication, which will not be conveyed to users of assistive technologies \\u2013 such as screen readers. Ensure that information denoted by the color is either obvious from the content itself (e.g. the visible text), or is included through alternative means, such as additional text hidden with the `.visually-hidden` class.\")), mdx(\"h2\", {\n    \"id\": \"with-badges\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"With badges\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#with-badges\",\n    \"aria-label\": \"with badges permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Add badges to any list group item to show unread counts, activity, and more.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CListGroup, {\n    mdxType: \"CListGroup\"\n  }, mdx(CListGroupItem, {\n    className: \"d-flex justify-content-between align-items-center\",\n    mdxType: \"CListGroupItem\"\n  }, \"Cras justo odio\", mdx(CBadge, {\n    color: \"primary\",\n    shape: \"rounded-pill\",\n    mdxType: \"CBadge\"\n  }, \"14\")), mdx(CListGroupItem, {\n    className: \"d-flex justify-content-between align-items-center\",\n    mdxType: \"CListGroupItem\"\n  }, \"Dapibus ac facilisis in\", mdx(CBadge, {\n    color: \"primary\",\n    shape: \"rounded-pill\",\n    mdxType: \"CBadge\"\n  }, \"2\")), mdx(CListGroupItem, {\n    className: \"d-flex justify-content-between align-items-center\",\n    mdxType: \"CListGroupItem\"\n  }, \"Morbi leo risus\", mdx(CBadge, {\n    color: \"primary\",\n    shape: \"rounded-pill\",\n    mdxType: \"CBadge\"\n  }, \"1\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CListGroup>\\n  <CListGroupItem className=\\\"d-flex justify-content-between align-items-center\\\">\\n    Cras justo odio\\n    <CBadge color=\\\"primary\\\" shape=\\\"rounded-pill\\\">\\n      14\\n    </CBadge>\\n  </CListGroupItem>\\n  <CListGroupItem className=\\\"d-flex justify-content-between align-items-center\\\">\\n    Dapibus ac facilisis in\\n    <CBadge color=\\\"primary\\\" shape=\\\"rounded-pill\\\">\\n      2\\n    </CBadge>\\n  </CListGroupItem>\\n  <CListGroupItem className=\\\"d-flex justify-content-between align-items-center\\\">\\n    Morbi leo risus\\n    <CBadge color=\\\"primary\\\" shape=\\\"rounded-pill\\\">\\n      1\\n    </CBadge>\\n  </CListGroupItem>\\n</CListGroup>\\n\")), mdx(\"h2\", {\n    \"id\": \"custom-content\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Custom content\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#custom-content\",\n    \"aria-label\": \"custom content permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Add nearly any HTML within, even for linked list groups like the one below, with the help of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://coreui.io/docs/utilities/flex/\"\n  }, \"flexbox utilities\"), \".\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CListGroup, {\n    mdxType: \"CListGroup\"\n  }, mdx(CListGroupItem, {\n    component: \"a\",\n    href: \"#\",\n    active: true,\n    mdxType: \"CListGroupItem\"\n  }, mdx(\"div\", {\n    className: \"d-flex w-100 justify-content-between\"\n  }, mdx(\"h5\", {\n    className: \"mb-1\"\n  }, \"List group item heading\"), mdx(\"small\", null, \"3 days ago\")), mdx(\"p\", {\n    className: \"mb-1\"\n  }, \"Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.\"), mdx(\"small\", null, \"Donec id elit non mi porta.\")), mdx(CListGroupItem, {\n    component: \"a\",\n    href: \"#\",\n    mdxType: \"CListGroupItem\"\n  }, mdx(\"div\", {\n    className: \"d-flex w-100 justify-content-between\"\n  }, mdx(\"h5\", {\n    className: \"mb-1\"\n  }, \"List group item heading\"), mdx(\"small\", {\n    className: \"text-muted\"\n  }, \"3 days ago\")), mdx(\"p\", {\n    className: \"mb-1\"\n  }, \"Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.\"), mdx(\"small\", {\n    className: \"text-muted\"\n  }, \"Donec id elit non mi porta.\")), mdx(CListGroupItem, {\n    component: \"a\",\n    href: \"#\",\n    mdxType: \"CListGroupItem\"\n  }, mdx(\"div\", {\n    className: \"d-flex w-100 justify-content-between\"\n  }, mdx(\"h5\", {\n    className: \"mb-1\"\n  }, \"List group item heading\"), mdx(\"small\", {\n    className: \"text-muted\"\n  }, \"3 days ago\")), mdx(\"p\", {\n    className: \"mb-1\"\n  }, \"Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.\"), mdx(\"small\", {\n    className: \"text-muted\"\n  }, \"Donec id elit non mi porta.\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CListGroup>\\n  <CListGroupItem component=\\\"a\\\" href=\\\"#\\\" active>\\n    <div className=\\\"d-flex w-100 justify-content-between\\\">\\n      <h5 className=\\\"mb-1\\\">List group item heading</h5>\\n      <small>3 days ago</small>\\n    </div>\\n    <p className=\\\"mb-1\\\">\\n      Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.\\n    </p>\\n    <small>Donec id elit non mi porta.</small>\\n  </CListGroupItem>\\n  <CListGroupItem component=\\\"a\\\" href=\\\"#\\\">\\n    <div className=\\\"d-flex w-100 justify-content-between\\\">\\n      <h5 className=\\\"mb-1\\\">List group item heading</h5>\\n      <small className=\\\"text-muted\\\">3 days ago</small>\\n    </div>\\n    <p className=\\\"mb-1\\\">\\n      Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.\\n    </p>\\n    <small className=\\\"text-muted\\\">Donec id elit non mi porta.</small>\\n  </CListGroupItem>\\n  <CListGroupItem component=\\\"a\\\" href=\\\"#\\\">\\n    <div className=\\\"d-flex w-100 justify-content-between\\\">\\n      <h5 className=\\\"mb-1\\\">List group item heading</h5>\\n      <small className=\\\"text-muted\\\">3 days ago</small>\\n    </div>\\n    <p className=\\\"mb-1\\\">\\n      Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.\\n    </p>\\n    <small className=\\\"text-muted\\\">Donec id elit non mi porta.</small>\\n  </CListGroupItem>\\n</CListGroup>\\n\")), mdx(\"h2\", {\n    \"id\": \"checkboxes-and-radios\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Checkboxes and radios\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#checkboxes-and-radios\",\n    \"aria-label\": \"checkboxes and radios permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Place CoreUI's checkboxes and radios within list group items and customize as needed.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CListGroup, {\n    mdxType: \"CListGroup\"\n  }, mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, mdx(CFormCheck, {\n    label: \"Cras justo odio\",\n    mdxType: \"CFormCheck\"\n  })), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, mdx(CFormCheck, {\n    label: \"Dapibus ac facilisis in\",\n    defaultChecked: true,\n    mdxType: \"CFormCheck\"\n  })), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, mdx(CFormCheck, {\n    label: \"Morbi leo risus\",\n    defaultChecked: true,\n    mdxType: \"CFormCheck\"\n  })), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, mdx(CFormCheck, {\n    label: \"orta ac consectetur ac\",\n    mdxType: \"CFormCheck\"\n  })), mdx(CListGroupItem, {\n    mdxType: \"CListGroupItem\"\n  }, mdx(CFormCheck, {\n    label: \"Vestibulum at eros\",\n    mdxType: \"CFormCheck\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CListGroup>\\n  <CListGroupItem>\\n    <CFormCheck label=\\\"Cras justo odio\\\" />\\n  </CListGroupItem>\\n  <CListGroupItem>\\n    <CFormCheck label=\\\"Dapibus ac facilisis in\\\" defaultChecked />\\n  </CListGroupItem>\\n  <CListGroupItem>\\n    <CFormCheck label=\\\"Morbi leo risus\\\" defaultChecked />\\n  </CListGroupItem>\\n  <CListGroupItem>\\n    <CFormCheck label=\\\"orta ac consectetur ac\\\" />\\n  </CListGroupItem>\\n  <CListGroupItem>\\n    <CFormCheck label=\\\"Vestibulum at eros\\\" />\\n  </CListGroupItem>\\n</CListGroup>\\n\")), mdx(\"p\", null, \"And if you want \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<label>\"), \"s as the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".list-group-item\"), \" for large hit areas, you can do that, too.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CListGroup, {\n    mdxType: \"CListGroup\"\n  }, mdx(CFormCheck, {\n    className: \"list-group-item\",\n    hitArea: \"full\",\n    label: \"Cras justo odio\",\n    mdxType: \"CFormCheck\"\n  }), mdx(CFormCheck, {\n    className: \"list-group-item\",\n    hitArea: \"full\",\n    label: \"Dapibus ac facilisis in\",\n    defaultChecked: true,\n    mdxType: \"CFormCheck\"\n  }), mdx(CFormCheck, {\n    className: \"list-group-item\",\n    hitArea: \"full\",\n    label: \"Morbi leo risus\",\n    defaultChecked: true,\n    mdxType: \"CFormCheck\"\n  }), mdx(CFormCheck, {\n    className: \"list-group-item\",\n    hitArea: \"full\",\n    label: \"orta ac consectetur ac\",\n    mdxType: \"CFormCheck\"\n  }), mdx(CFormCheck, {\n    className: \"list-group-item\",\n    hitArea: \"full\",\n    label: \"Vestibulum at eros\",\n    mdxType: \"CFormCheck\"\n  }))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CListGroup>\\n  <CFormCheck className=\\\"list-group-item\\\" hitArea=\\\"full\\\" label=\\\"Cras justo odio\\\" />\\n  <CFormCheck\\n    className=\\\"list-group-item\\\"\\n    hitArea=\\\"full\\\"\\n    label=\\\"Dapibus ac facilisis in\\\"\\n    defaultChecked\\n  />\\n  <CFormCheck className=\\\"list-group-item\\\" hitArea=\\\"full\\\" label=\\\"Morbi leo risus\\\" defaultChecked />\\n  <CFormCheck className=\\\"list-group-item\\\" hitArea=\\\"full\\\" label=\\\"orta ac consectetur ac\\\" />\\n  <CFormCheck className=\\\"list-group-item\\\" hitArea=\\\"full\\\" label=\\\"Vestibulum at eros\\\" />\\n</CListGroup>\\n\")), mdx(\"h2\", {\n    \"id\": \"api\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"API\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#api\",\n    \"aria-label\": \"api permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"clistgroup\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CListGroup\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#clistgroup\",\n    \"aria-label\": \"clistgroup permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"component\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Component used for the root node. Either a string to use a HTML element or a component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string | ComponentClass<any, any> | FunctionComponent<any>\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"'ul'\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"flush\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Remove some borders and rounded corners to render list group items edge-to-edge in a parent component (e.g., \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"<CCard>\"), \").\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"layout\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Specify a layout type.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"\\\"horizontal\\\" | \\\"horizontal-sm\\\" | \\\"horizontal-md\\\" | \\\"horizontal-lg\\\" | \\\"horizontal-xl\\\" | \\\"horizontal-xxl\\\"\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))), mdx(\"h3\", {\n    \"id\": \"clistgroupitem\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CListGroupItem\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#clistgroupitem\",\n    \"aria-label\": \"clistgroupitem permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"active\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Toggle the active state for the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"color\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Sets the color context of the component to one of CoreUI\\u2019s themed colors.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"component\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Component used for the root node. Either a string to use a HTML element or a component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string | ComponentClass<any, any> | FunctionComponent<any>\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"li\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"disabled\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Toggle the disabled state for the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"React List Group Component","description":"React List Group component allows displaying a series of content. Learn how to use react list group to build complex list structure on your website.","route":"/components/list-group"},"tableOfContents":{"items":[{"url":"#basic-example","title":"Basic example"},{"url":"#active-items","title":"Active items"},{"url":"#disabled-items","title":"Disabled items"},{"url":"#links-and-buttons","title":"Links and buttons"},{"url":"#flush","title":"Flush"},{"url":"#horizontal","title":"Horizontal"},{"url":"#contextual-classes","title":"Contextual classes"},{"url":"#with-badges","title":"With badges"},{"url":"#custom-content","title":"Custom content"},{"url":"#checkboxes-and-radios","title":"Checkboxes and radios"},{"url":"#api","title":"API","items":[{"url":"#clistgroup","title":"CListGroup"},{"url":"#clistgroupitem","title":"CListGroupItem"}]}]}}},"pageContext":{"id":"4ecf0bbd-b4b4-5774-8423-e5114d528b49"}},
    "staticQueryHashes": ["4202924991"]}