(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{W87e:function(e,t,o){"use strict";o.r(t),o.d(t,"_frontmatter",(function(){return d})),o.d(t,"default",(function(){return u}));var n=o("Fcif"),a=o("+I+c"),i=(o("mXGw"),o("/FXl")),b=o("BIGe"),l=o("ZFoC"),s=o("bzer"),c=(o("aD51"),["components"]),d={};void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/4.0/components/CCloseButton.mdx"}});var r={_frontmatter:d},p=b.a;function u(e){var t,o,u,m=e.components,C=Object(a.a)(e,c);return Object(i.b)(p,Object(n.a)({},r,C,{components:m,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"example"},"Example"),Object(i.b)("p",null,"Provide an option to dismiss or close a component with ",Object(i.b)("inlineCode",{parentName:"p"},"<CCloseButton>"),". Default styling is limited, but highly customizable. Modify the Sass variables to replace the default ",Object(i.b)("inlineCode",{parentName:"p"},"background-image"),"."),Object(i.b)(l.c,{__position:0,__code:"<CCloseButton />",__scope:(t={props:C,DefaultLayout:b.a,Playground:l.c,Props:l.d,CCloseButton:s.I},t.DefaultLayout=b.a,t._frontmatter=d,t),mdxType:"Playground"},Object(i.b)(s.I,{mdxType:"CCloseButton"})),Object(i.b)("h2",{id:"disabled-state"},"Disabled state"),Object(i.b)("p",null,"Disabled close buttons change their ",Object(i.b)("inlineCode",{parentName:"p"},"opacity"),". We've also applied ",Object(i.b)("inlineCode",{parentName:"p"},"pointer-events: none")," and ",Object(i.b)("inlineCode",{parentName:"p"},"user-select: none")," to preventing hover and active states from triggering."),Object(i.b)(l.c,{__position:1,__code:"<CCloseButton disabled />",__scope:(o={props:C,DefaultLayout:b.a,Playground:l.c,Props:l.d,CCloseButton:s.I},o.DefaultLayout=b.a,o._frontmatter=d,o),mdxType:"Playground"},Object(i.b)(s.I,{disabled:!0,mdxType:"CCloseButton"})),Object(i.b)("h2",{id:"white-variant"},"White variant"),Object(i.b)("p",null,"Change the default ",Object(i.b)("inlineCode",{parentName:"p"},"<CCloseButton>")," to be white with the ",Object(i.b)("inlineCode",{parentName:"p"},"white")," boolean property."),Object(i.b)(l.c,{__position:2,__code:'<div className="bg-dark">\n  <CCloseButton white />\n  <CCloseButton white disabled />\n</div>',__scope:(u={props:C,DefaultLayout:b.a,Playground:l.c,Props:l.d,CCloseButton:s.I},u.DefaultLayout=b.a,u._frontmatter=d,u),mdxType:"Playground"},Object(i.b)("div",{className:"bg-dark"},Object(i.b)(s.I,{white:!0,mdxType:"CCloseButton"}),Object(i.b)(s.I,{white:!0,disabled:!0,mdxType:"CCloseButton"}))),Object(i.b)("h2",{id:"api"},"API"),Object(i.b)("h3",{id:"cclosebutton"},"CCloseButton"),Object(i.b)(l.d,{of:s.I,mdxType:"Props"}))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/4.0/components/CCloseButton.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-4-0-components-c-close-button-mdx-89db5a605af7b4d6c4f6.js.map