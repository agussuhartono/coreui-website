(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{gXEU:function(e,t,o){"use strict";o.r(t),o.d(t,"_frontmatter",(function(){return p})),o.d(t,"default",(function(){return d}));var a=o("Fcif"),n=o("+I+c"),l=(o("mXGw"),o("/FXl")),r=o("BIGe"),m=o("ZFoC"),i=o("bzer"),b=(o("aD51"),["components"]),p={};void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/4.0/forms/CFormFloating.mdx"}});var c={_frontmatter:p},C=r.a;function d(e){var t,o,d,F,s,u,g=e.components,O=Object(n.a)(e,b);return Object(l.b)(C,Object(a.a)({},c,O,{components:g,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"example"},"Example"),Object(l.b)("p",null,"Wrap a pair of ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormInput>")," and ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormLabel>")," elements in ",Object(l.b)("inlineCode",{parentName:"p"},"CFormFloating")," to enable floating labels with textual form fields. A ",Object(l.b)("inlineCode",{parentName:"p"},"placeholder")," is required on each ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormInput>")," as our method of CSS-only floating labels uses the ",Object(l.b)("inlineCode",{parentName:"p"},":placeholder-shown")," pseudo-element. Also note that the ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormInput>")," must come first so we can utilize a sibling selector (e.g., ",Object(l.b)("inlineCode",{parentName:"p"},"~"),")."),Object(l.b)(m.c,{__position:0,__code:'<CFormFloating className="mb-3">\n  <CFormInput\n    type="email"\n    id="floatingInput"\n    placeholder="name@example.com"\n  />\n  <CFormLabel htmlFor="floatingInput">Email address</CFormLabel>\n</CFormFloating>\n<CFormFloating>\n  <CFormInput type="password" id="floatingPassword" placeholder="Password" />\n  <CFormLabel htmlFor="exampleFormControlTextarea1">Password</CFormLabel>\n</CFormFloating>',__scope:(t={props:O,DefaultLayout:r.a,Playground:m.c,Props:m.d,CButton:i.n,CForm:i.U,CFormFloating:i.X,CFormInput:i.Y,CFormLabel:i.Z,CFormSelect:i.bb,CFormTextarea:i.eb,CCol:i.J,CRow:i.Ub},t.DefaultLayout=r.a,t._frontmatter=p,t),mdxType:"Playground"},Object(l.b)(i.X,{className:"mb-3",mdxType:"CFormFloating"},Object(l.b)(i.Y,{type:"email",id:"floatingInput",placeholder:"name@example.com",mdxType:"CFormInput"}),Object(l.b)(i.Z,{htmlFor:"floatingInput",mdxType:"CFormLabel"},"Email address")),Object(l.b)(i.X,{mdxType:"CFormFloating"},Object(l.b)(i.Y,{type:"password",id:"floatingPassword",placeholder:"Password",mdxType:"CFormInput"}),Object(l.b)(i.Z,{htmlFor:"exampleFormControlTextarea1",mdxType:"CFormLabel"},"Password"))),Object(l.b)("p",null,"When there's a ",Object(l.b)("inlineCode",{parentName:"p"},"value")," already defined, ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormLabel>"),"s will automatically adjust to their floated position."),Object(l.b)(m.c,{__position:1,__code:'<CFormFloating>\n  <CFormInput\n    type="email"\n    id="floatingInputValue"\n    placeholder="name@example.com"\n    defaultValue="test@example.com"\n  />\n  <CFormLabel htmlFor="floatingInputValue">Input with value</CFormLabel>\n</CFormFloating>',__scope:(o={props:O,DefaultLayout:r.a,Playground:m.c,Props:m.d,CButton:i.n,CForm:i.U,CFormFloating:i.X,CFormInput:i.Y,CFormLabel:i.Z,CFormSelect:i.bb,CFormTextarea:i.eb,CCol:i.J,CRow:i.Ub},o.DefaultLayout=r.a,o._frontmatter=p,o),mdxType:"Playground"},Object(l.b)(i.X,{mdxType:"CFormFloating"},Object(l.b)(i.Y,{type:"email",id:"floatingInputValue",placeholder:"name@example.com",defaultValue:"test@example.com",mdxType:"CFormInput"}),Object(l.b)(i.Z,{htmlFor:"floatingInputValue",mdxType:"CFormLabel"},"Input with value"))),Object(l.b)("h2",{id:"textareas"},"Textareas"),Object(l.b)("p",null,"By default, ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormTextarea>"),"s will be the same height as ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormInput>"),"s."),Object(l.b)(m.c,{__position:2,__code:'<CFormFloating>\n  <CFormTextarea\n    id="floatingTextarea"\n    placeholder="Leave a comment here"\n  ></CFormTextarea>\n  <CFormLabel htmlFor="floatingTextarea">Comments</CFormLabel>\n</CFormFloating>',__scope:(d={props:O,DefaultLayout:r.a,Playground:m.c,Props:m.d,CButton:i.n,CForm:i.U,CFormFloating:i.X,CFormInput:i.Y,CFormLabel:i.Z,CFormSelect:i.bb,CFormTextarea:i.eb,CCol:i.J,CRow:i.Ub},d.DefaultLayout=r.a,d._frontmatter=p,d),mdxType:"Playground"},Object(l.b)(i.X,{mdxType:"CFormFloating"},Object(l.b)(i.eb,{id:"floatingTextarea",placeholder:"Leave a comment here",mdxType:"CFormTextarea"}),Object(l.b)(i.Z,{htmlFor:"floatingTextarea",mdxType:"CFormLabel"},"Comments"))),Object(l.b)("p",null,"To set a custom height on your ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormTextarea>"),", do not use the ",Object(l.b)("inlineCode",{parentName:"p"},"rows")," attribute. Instead, set an explicit ",Object(l.b)("inlineCode",{parentName:"p"},"height")," (either inline or via custom CSS)."),Object(l.b)(m.c,{__position:3,__code:'<CFormFloating>\n  <CFormTextarea\n    placeholder="Leave a comment here"\n    id="floatingTextarea2"\n    style={{ height: \'100px\' }}\n  ></CFormTextarea>\n  <CFormLabel htmlFor="floatingTextarea2">Comments</CFormLabel>\n</CFormFloating>',__scope:(F={props:O,DefaultLayout:r.a,Playground:m.c,Props:m.d,CButton:i.n,CForm:i.U,CFormFloating:i.X,CFormInput:i.Y,CFormLabel:i.Z,CFormSelect:i.bb,CFormTextarea:i.eb,CCol:i.J,CRow:i.Ub},F.DefaultLayout=r.a,F._frontmatter=p,F),mdxType:"Playground"},Object(l.b)(i.X,{mdxType:"CFormFloating"},Object(l.b)(i.eb,{placeholder:"Leave a comment here",id:"floatingTextarea2",style:{height:"100px"},mdxType:"CFormTextarea"}),Object(l.b)(i.Z,{htmlFor:"floatingTextarea2",mdxType:"CFormLabel"},"Comments"))),Object(l.b)("h2",{id:"selects"},"Selects"),Object(l.b)("p",null,"Other than ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormInput>"),", floating labels are only available on ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormSelect>"),"s. They work in the same way, but unlike ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormInput>"),"s, they'll always show the ",Object(l.b)("inlineCode",{parentName:"p"},"<CFormLabel>")," in its floated state. ",Object(l.b)("strong",{parentName:"p"},"Selects with ",Object(l.b)("inlineCode",{parentName:"strong"},"size")," and ",Object(l.b)("inlineCode",{parentName:"strong"},"multiple")," are not supported.")),Object(l.b)(m.c,{__position:4,__code:'<CFormFloating>\n  <CFormSelect id="floatingSelect" aria-label="Floating label select example">\n    <option>Open this select menu</option>\n    <option value="1">One</option>\n    <option value="2">Two</option>\n    <option value="3">Three</option>\n  </CFormSelect>\n  <CFormLabel htmlFor="floatingSelect">Works with selects</CFormLabel>\n</CFormFloating>',__scope:(s={props:O,DefaultLayout:r.a,Playground:m.c,Props:m.d,CButton:i.n,CForm:i.U,CFormFloating:i.X,CFormInput:i.Y,CFormLabel:i.Z,CFormSelect:i.bb,CFormTextarea:i.eb,CCol:i.J,CRow:i.Ub},s.DefaultLayout=r.a,s._frontmatter=p,s),mdxType:"Playground"},Object(l.b)(i.X,{mdxType:"CFormFloating"},Object(l.b)(i.bb,{id:"floatingSelect","aria-label":"Floating label select example",mdxType:"CFormSelect"},Object(l.b)("option",null,"Open this select menu"),Object(l.b)("option",{value:"1"},"One"),Object(l.b)("option",{value:"2"},"Two"),Object(l.b)("option",{value:"3"},"Three")),Object(l.b)(i.Z,{htmlFor:"floatingSelect",mdxType:"CFormLabel"},"Works with selects"))),Object(l.b)("h2",{id:"layout"},"Layout"),Object(l.b)("p",null,"When working with the CoreUI for Bootstrap grid system, be sure to place form elements within column classes."),Object(l.b)(m.c,{__position:5,__code:'<CRow xs={{ gutter: 2 }}>\n  <CCol md>\n    <CFormFloating>\n      <CFormInput\n        type="email"\n        id="floatingInputGrid"\n        placeholder="name@example.com"\n        defaultValue="email@example.com"\n      />\n      <CFormLabel htmlFor="floatingInputGrid">Email address</CFormLabel>\n    </CFormFloating>\n  </CCol>\n  <CCol md>\n    <CFormFloating>\n      <CFormSelect\n        id="floatingSelectGrid"\n        aria-label="Floating label select example"\n      >\n        <option>Open this select menu</option>\n        <option value="1">One</option>\n        <option value="2">Two</option>\n        <option value="3">Three</option>\n      </CFormSelect>\n      <CFormLabel htmlFor="floatingSelectGrid">Works with selects</CFormLabel>\n    </CFormFloating>\n  </CCol>\n</CRow>',__scope:(u={props:O,DefaultLayout:r.a,Playground:m.c,Props:m.d,CButton:i.n,CForm:i.U,CFormFloating:i.X,CFormInput:i.Y,CFormLabel:i.Z,CFormSelect:i.bb,CFormTextarea:i.eb,CCol:i.J,CRow:i.Ub},u.DefaultLayout=r.a,u._frontmatter=p,u),mdxType:"Playground"},Object(l.b)(i.Ub,{xs:{gutter:2},mdxType:"CRow"},Object(l.b)(i.J,{md:!0,mdxType:"CCol"},Object(l.b)(i.X,{mdxType:"CFormFloating"},Object(l.b)(i.Y,{type:"email",id:"floatingInputGrid",placeholder:"name@example.com",defaultValue:"email@example.com",mdxType:"CFormInput"}),Object(l.b)(i.Z,{htmlFor:"floatingInputGrid",mdxType:"CFormLabel"},"Email address"))),Object(l.b)(i.J,{md:!0,mdxType:"CCol"},Object(l.b)(i.X,{mdxType:"CFormFloating"},Object(l.b)(i.bb,{id:"floatingSelectGrid","aria-label":"Floating label select example",mdxType:"CFormSelect"},Object(l.b)("option",null,"Open this select menu"),Object(l.b)("option",{value:"1"},"One"),Object(l.b)("option",{value:"2"},"Two"),Object(l.b)("option",{value:"3"},"Three")),Object(l.b)(i.Z,{htmlFor:"floatingSelectGrid",mdxType:"CFormLabel"},"Works with selects"))))),Object(l.b)("h2",{id:"api"},"API"),Object(l.b)("h3",{id:"cformfloating"},"CFormFloating"),Object(l.b)(m.d,{of:i.X,mdxType:"Props"}))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/4.0/forms/CFormFloating.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-4-0-forms-c-form-floating-mdx-486bbf038aaddc350a2b.js.map