{"version":3,"sources":["webpack:///../docs/4.0/components/COffcanvas.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","useState","CButton","CCloseButton","CCallout","COffcanvas","COffcanvasBody","COffcanvasHeader","COffcanvasTitle","className","backdrop","placement","portal","visible","setVisible","onClick","onDismiss","isMDXComponent"],"mappings":"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","file":"component---docs-4-0-components-c-offcanvas-mdx-546fb43431c36cd97ab0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukaszholeczek/CoreUI/@coreui/react-pro/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { useState } from 'react';\nimport { CButton, CCloseButton, CCallout, COffcanvas, COffcanvasBody, COffcanvasHeader, COffcanvasTitle } from '../../../src/index.ts';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"offcanvas-components\"\n    }}>{`Offcanvas components`}</h3>\n    <p>{`Below is an offcanvas example that is shown by default (via `}<inlineCode parentName=\"p\">{`visible={true}`}</inlineCode>{`). Offcanvas includes support for a header with a close button and an optional body class for some initial `}<inlineCode parentName=\"p\">{`padding`}</inlineCode>{`. We suggest that you include offcanvas headers with dismiss actions whenever possible, or provide an explicit dismiss action.`}</p>\n    <Playground __position={0} __code={'<div className=\\\"docs-example-offcanvas bg-light\\\">\\n  <COffcanvas\\n    backdrop={false}\\n    placement=\\\"start\\\"\\n    portal={false}\\n    visible={true}\\n  >\\n    <COffcanvasHeader>\\n      <COffcanvasTitle>Offcanvas</COffcanvasTitle>\\n      <CCloseButton className=\\\"text-reset\\\" />\\n    </COffcanvasHeader>\\n    <COffcanvasBody>\\n      Content for the offcanvas goes here. You can place just about any\\n      Bootstrap component or custom elements here.\\n    </COffcanvasBody>\\n  </COffcanvas>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CCloseButton,\n      CCallout,\n      COffcanvas,\n      COffcanvasBody,\n      COffcanvasHeader,\n      COffcanvasTitle,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div className=\"docs-example-offcanvas bg-light\">\n    <COffcanvas backdrop={false} placement=\"start\" portal={false} visible={true} mdxType=\"COffcanvas\">\n      <COffcanvasHeader mdxType=\"COffcanvasHeader\">\n        <COffcanvasTitle mdxType=\"COffcanvasTitle\">Offcanvas</COffcanvasTitle>\n        <CCloseButton className=\"text-reset\" mdxType=\"CCloseButton\" />\n      </COffcanvasHeader>\n      <COffcanvasBody mdxType=\"COffcanvasBody\">\n        Content for the offcanvas goes here. You can place just about any Bootstrap component or\n        custom elements here.\n      </COffcanvasBody>\n    </COffcanvas>\n  </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"live-demo\"\n    }}>{`Live demo`}</h3>\n    <p>{`Use the buttons below to show and hide an offcanvas component.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`visible={false}`}</inlineCode>{` hides content (default)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`visible`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`visible={true}`}</inlineCode>{` shows content`}</li>\n    </ul>\n    <Playground __position={1} __code={'() => {\\n  const [visible, setVisible] = useState(false)\\n  return (\\n    <>\\n      <CButton onClick={() => setVisible(true)}>Toggle offcanvas</CButton>\\n      <COffcanvas\\n        placement=\\\"start\\\"\\n        visible={visible}\\n        onDismiss={() => setVisible(false)}\\n      >\\n        <COffcanvasHeader>\\n          <COffcanvasTitle>Offcanvas</COffcanvasTitle>\\n          <CCloseButton\\n            className=\\\"text-reset\\\"\\n            onClick={() => setVisible(false)}\\n          />\\n        </COffcanvasHeader>\\n        <COffcanvasBody>\\n          Content for the offcanvas goes here. You can place just about any\\n          Bootstrap component or custom elements here.\\n        </COffcanvasBody>\\n      </COffcanvas>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CCloseButton,\n      CCallout,\n      COffcanvas,\n      COffcanvasBody,\n      COffcanvasHeader,\n      COffcanvasTitle,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = useState(false);\n        return <>\n        <CButton onClick={() => setVisible(true)} mdxType=\"CButton\">Toggle offcanvas</CButton>\n        <COffcanvas placement=\"start\" visible={visible} onDismiss={() => setVisible(false)} mdxType=\"COffcanvas\">\n          <COffcanvasHeader mdxType=\"COffcanvasHeader\">\n            <COffcanvasTitle mdxType=\"COffcanvasTitle\">Offcanvas</COffcanvasTitle>\n            <CCloseButton className=\"text-reset\" onClick={() => setVisible(false)} mdxType=\"CCloseButton\" />\n          </COffcanvasHeader>\n          <COffcanvasBody mdxType=\"COffcanvasBody\">\n            Content for the offcanvas goes here. You can place just about any Bootstrap component or\n            custom elements here.\n          </COffcanvasBody>\n        </COffcanvas>\n      </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"placement\"\n    }}>{`Placement`}</h2>\n    <p>{`There's no default placement for offcanvas components, so you must add one of the modifier classes below;`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`placement=\"start\"`}</inlineCode>{` places offcanvas on the left of the viewport (shown above)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`placement=\"end\"`}</inlineCode>{` places offcanvas on the right of the viewport`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`placement=\"top\"`}</inlineCode>{` places offcanvas on the top of the viewport`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`placement=\"bottom\"`}</inlineCode>{` places offcanvas on the bottom of the viewport`}</li>\n    </ul>\n    <p>{`Try the top, right, and bottom examples out below.`}</p>\n    <Playground __position={2} __code={'() => {\\n  const [visible, setVisible] = useState(false)\\n  return (\\n    <>\\n      <CButton onClick={() => setVisible(true)}>Toggle top offcanvas</CButton>\\n      <COffcanvas\\n        placement=\\\"top\\\"\\n        visible={visible}\\n        onDismiss={() => setVisible(false)}\\n      >\\n        <COffcanvasHeader>\\n          <COffcanvasTitle>Offcanvas</COffcanvasTitle>\\n          <CCloseButton\\n            className=\\\"text-reset\\\"\\n            onClick={() => setVisible(false)}\\n          />\\n        </COffcanvasHeader>\\n        <COffcanvasBody>\\n          Content for the offcanvas goes here. You can place just about any\\n          Bootstrap component or custom elements here.\\n        </COffcanvasBody>\\n      </COffcanvas>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CCloseButton,\n      CCallout,\n      COffcanvas,\n      COffcanvasBody,\n      COffcanvasHeader,\n      COffcanvasTitle,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = useState(false);\n        return <>\n        <CButton onClick={() => setVisible(true)} mdxType=\"CButton\">Toggle top offcanvas</CButton>\n        <COffcanvas placement=\"top\" visible={visible} onDismiss={() => setVisible(false)} mdxType=\"COffcanvas\">\n          <COffcanvasHeader mdxType=\"COffcanvasHeader\">\n            <COffcanvasTitle mdxType=\"COffcanvasTitle\">Offcanvas</COffcanvasTitle>\n            <CCloseButton className=\"text-reset\" onClick={() => setVisible(false)} mdxType=\"CCloseButton\" />\n          </COffcanvasHeader>\n          <COffcanvasBody mdxType=\"COffcanvasBody\">\n            Content for the offcanvas goes here. You can place just about any Bootstrap component or\n            custom elements here.\n          </COffcanvasBody>\n        </COffcanvas>\n      </>;\n      }}\n    </Playground>\n    <Playground __position={3} __code={'() => {\\n  const [visible, setVisible] = useState(false)\\n  return (\\n    <>\\n      <CButton onClick={() => setVisible(true)}>\\n        Toggle right offcanvas\\n      </CButton>\\n      <COffcanvas\\n        placement=\\\"end\\\"\\n        visible={visible}\\n        onDismiss={() => setVisible(false)}\\n      >\\n        <COffcanvasHeader>\\n          <COffcanvasTitle>Offcanvas</COffcanvasTitle>\\n          <CCloseButton\\n            className=\\\"text-reset\\\"\\n            onClick={() => setVisible(false)}\\n          />\\n        </COffcanvasHeader>\\n        <COffcanvasBody>\\n          Content for the offcanvas goes here. You can place just about any\\n          Bootstrap component or custom elements here.\\n        </COffcanvasBody>\\n      </COffcanvas>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CCloseButton,\n      CCallout,\n      COffcanvas,\n      COffcanvasBody,\n      COffcanvasHeader,\n      COffcanvasTitle,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = useState(false);\n        return <>\n        <CButton onClick={() => setVisible(true)} mdxType=\"CButton\">Toggle right offcanvas</CButton>\n        <COffcanvas placement=\"end\" visible={visible} onDismiss={() => setVisible(false)} mdxType=\"COffcanvas\">\n          <COffcanvasHeader mdxType=\"COffcanvasHeader\">\n            <COffcanvasTitle mdxType=\"COffcanvasTitle\">Offcanvas</COffcanvasTitle>\n            <CCloseButton className=\"text-reset\" onClick={() => setVisible(false)} mdxType=\"CCloseButton\" />\n          </COffcanvasHeader>\n          <COffcanvasBody mdxType=\"COffcanvasBody\">\n            Content for the offcanvas goes here. You can place just about any Bootstrap component or\n            custom elements here.\n          </COffcanvasBody>\n        </COffcanvas>\n      </>;\n      }}\n    </Playground>\n    <Playground __position={4} __code={'() => {\\n  const [visible, setVisible] = useState(false)\\n  return (\\n    <>\\n      <CButton onClick={() => setVisible(true)}>\\n        Toggle bottom offcanvas\\n      </CButton>\\n      <COffcanvas\\n        placement=\\\"bottom\\\"\\n        visible={visible}\\n        onDismiss={() => setVisible(false)}\\n      >\\n        <COffcanvasHeader>\\n          <COffcanvasTitle>Offcanvas</COffcanvasTitle>\\n          <CCloseButton\\n            className=\\\"text-reset\\\"\\n            onClick={() => setVisible(false)}\\n          />\\n        </COffcanvasHeader>\\n        <COffcanvasBody>\\n          Content for the offcanvas goes here. You can place just about any\\n          Bootstrap component or custom elements here.\\n        </COffcanvasBody>\\n      </COffcanvas>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CButton,\n      CCloseButton,\n      CCallout,\n      COffcanvas,\n      COffcanvasBody,\n      COffcanvasHeader,\n      COffcanvasTitle,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = useState(false);\n        return <>\n        <CButton onClick={() => setVisible(true)} mdxType=\"CButton\">Toggle bottom offcanvas</CButton>\n        <COffcanvas placement=\"bottom\" visible={visible} onDismiss={() => setVisible(false)} mdxType=\"COffcanvas\">\n          <COffcanvasHeader mdxType=\"COffcanvasHeader\">\n            <COffcanvasTitle mdxType=\"COffcanvasTitle\">Offcanvas</COffcanvasTitle>\n            <CCloseButton className=\"text-reset\" onClick={() => setVisible(false)} mdxType=\"CCloseButton\" />\n          </COffcanvasHeader>\n          <COffcanvasBody mdxType=\"COffcanvasBody\">\n            Content for the offcanvas goes here. You can place just about any Bootstrap component or\n            custom elements here.\n          </COffcanvasBody>\n        </COffcanvas>\n      </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}