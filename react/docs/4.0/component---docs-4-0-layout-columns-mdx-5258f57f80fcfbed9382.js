(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{qHOc:function(e,o,n){"use strict";n.r(o),n.d(o,"_frontmatter",(function(){return r})),n.d(o,"default",(function(){return i}));var t=n("Fcif"),l=n("+I+c"),s=(n("mXGw"),n("/FXl")),a=n("BIGe"),c=n("ZFoC"),C=n("bzer"),m=(n("aD51"),["components"]),r={};void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/4.0/layout/columns.mdx"}});var d={_frontmatter:r},b=a.a;function i(e){var o,n,i,p,u,f,O,x,y,j,w,h,g=e.components,T=Object(l.a)(e,m);return Object(s.b)(b,Object(t.a)({},d,T,{components:g,mdxType:"MDXLayout"}),Object(s.b)("h2",{id:"how-they-work"},"How they work"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("strong",{parentName:"p"},"Columns build on the grid's flexbox architecture.")," Flexbox means we have options for changing individual columns and ",Object(s.b)("a",{parentName:"p",href:"./../grid#row-columns"},"modifying groups of columns at the row level"),". You choose how columns grow, shrink, or otherwise change.")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("strong",{parentName:"p"},"When building grid layouts, all content goes in columns.")," The hierarchy of CoreUI's grid goes from ",Object(s.b)("a",{parentName:"p",href:"./../containers"},"container")," to row to column to your content. On rare occasions, you may combine content and column, but be aware there can be unintended consequences.")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("strong",{parentName:"p"},"CoreUI for React.js includes predefined components for creating fast, responsive layouts.")," With ",Object(s.b)("a",{parentName:"p",href:"./../breakpoints"},"six breakpoints")," and a dozen columns at each grid tier, we have dozens of components already built for you to create your desired layouts. This can be disabled via Sass if you wish."))),Object(s.b)("h2",{id:"alignment"},"Alignment"),Object(s.b)("p",null,"Use flexbox alignment utilities to vertically and horizontally align columns."),Object(s.b)("h3",{id:"vertical-alignment"},"Vertical alignment"),Object(s.b)(c.c,{__position:0,__code:'<div className="docs-example-row docs-example-row-flex-cols">\n  <CContainer>\n    <CRow className="align-items-start">\n      <CCol>One of three columns</CCol>\n      <CCol>One of three columns</CCol>\n      <CCol>One of three columns</CCol>\n    </CRow>\n    <CRow className="align-items-center">\n      <CCol>One of three columns</CCol>\n      <CCol>One of three columns</CCol>\n      <CCol>One of three columns</CCol>\n    </CRow>\n    <CRow className="align-items-end">\n      <CCol>One of three columns</CCol>\n      <CCol>One of three columns</CCol>\n      <CCol>One of three columns</CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(o={props:T,DefaultLayout:a.a,Playground:c.c,Props:c.d,CCol:C.J,CContainer:C.L,CRow:C.Ub},o.DefaultLayout=a.a,o._frontmatter=r,o),mdxType:"Playground"},Object(s.b)("div",{className:"docs-example-row docs-example-row-flex-cols"},Object(s.b)(C.L,{mdxType:"CContainer"},Object(s.b)(C.Ub,{className:"align-items-start",mdxType:"CRow"},Object(s.b)(C.J,{mdxType:"CCol"},"One of three columns"),Object(s.b)(C.J,{mdxType:"CCol"},"One of three columns"),Object(s.b)(C.J,{mdxType:"CCol"},"One of three columns")),Object(s.b)(C.Ub,{className:"align-items-center",mdxType:"CRow"},Object(s.b)(C.J,{mdxType:"CCol"},"One of three columns"),Object(s.b)(C.J,{mdxType:"CCol"},"One of three columns"),Object(s.b)(C.J,{mdxType:"CCol"},"One of three columns")),Object(s.b)(C.Ub,{className:"align-items-end",mdxType:"CRow"},Object(s.b)(C.J,{mdxType:"CCol"},"One of three columns"),Object(s.b)(C.J,{mdxType:"CCol"},"One of three columns"),Object(s.b)(C.J,{mdxType:"CCol"},"One of three columns"))))),Object(s.b)(c.c,{__position:1,__code:'<div className="docs-example-row docs-example-row-flex-cols">\n  <CContainer>\n    <CRow>\n      <CCol className="align-self-start">One of three columns</CCol>\n      <CCol className="align-self-center">One of three columns</CCol>\n      <CCol className="align-self-end">One of three columns</CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(n={props:T,DefaultLayout:a.a,Playground:c.c,Props:c.d,CCol:C.J,CContainer:C.L,CRow:C.Ub},n.DefaultLayout=a.a,n._frontmatter=r,n),mdxType:"Playground"},Object(s.b)("div",{className:"docs-example-row docs-example-row-flex-cols"},Object(s.b)(C.L,{mdxType:"CContainer"},Object(s.b)(C.Ub,{mdxType:"CRow"},Object(s.b)(C.J,{className:"align-self-start",mdxType:"CCol"},"One of three columns"),Object(s.b)(C.J,{className:"align-self-center",mdxType:"CCol"},"One of three columns"),Object(s.b)(C.J,{className:"align-self-end",mdxType:"CCol"},"One of three columns"))))),Object(s.b)("h3",{id:"horizontal-alignment"},"Horizontal alignment"),Object(s.b)(c.c,{__position:2,__code:'<div className="docs-example-row">\n  <CContainer>\n    <CRow className="justify-content-start">\n      <CCol xs={4}>One of two columns</CCol>\n      <CCol xs={4}>One of two columns</CCol>\n    </CRow>\n    <CRow className="justify-content-center">\n      <CCol xs={4}>One of two columns</CCol>\n      <CCol xs={4}>One of two columns</CCol>\n    </CRow>\n    <CRow className="justify-content-end">\n      <CCol xs={4}>One of two columns</CCol>\n      <CCol xs={4}>One of two columns</CCol>\n    </CRow>\n    <CRow className="justify-content-around">\n      <CCol xs={4}>One of two columns</CCol>\n      <CCol xs={4}>One of two columns</CCol>\n    </CRow>\n    <CRow className="justify-content-between">\n      <CCol xs={4}>One of two columns</CCol>\n      <CCol xs={4}>One of two columns</CCol>\n    </CRow>\n    <CRow className="justify-content-evenly">\n      <CCol xs={4}>One of two columns</CCol>\n      <CCol xs={4}>One of two columns</CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(i={props:T,DefaultLayout:a.a,Playground:c.c,Props:c.d,CCol:C.J,CContainer:C.L,CRow:C.Ub},i.DefaultLayout=a.a,i._frontmatter=r,i),mdxType:"Playground"},Object(s.b)("div",{className:"docs-example-row"},Object(s.b)(C.L,{mdxType:"CContainer"},Object(s.b)(C.Ub,{className:"justify-content-start",mdxType:"CRow"},Object(s.b)(C.J,{xs:4,mdxType:"CCol"},"One of two columns"),Object(s.b)(C.J,{xs:4,mdxType:"CCol"},"One of two columns")),Object(s.b)(C.Ub,{className:"justify-content-center",mdxType:"CRow"},Object(s.b)(C.J,{xs:4,mdxType:"CCol"},"One of two columns"),Object(s.b)(C.J,{xs:4,mdxType:"CCol"},"One of two columns")),Object(s.b)(C.Ub,{className:"justify-content-end",mdxType:"CRow"},Object(s.b)(C.J,{xs:4,mdxType:"CCol"},"One of two columns"),Object(s.b)(C.J,{xs:4,mdxType:"CCol"},"One of two columns")),Object(s.b)(C.Ub,{className:"justify-content-around",mdxType:"CRow"},Object(s.b)(C.J,{xs:4,mdxType:"CCol"},"One of two columns"),Object(s.b)(C.J,{xs:4,mdxType:"CCol"},"One of two columns")),Object(s.b)(C.Ub,{className:"justify-content-between",mdxType:"CRow"},Object(s.b)(C.J,{xs:4,mdxType:"CCol"},"One of two columns"),Object(s.b)(C.J,{xs:4,mdxType:"CCol"},"One of two columns")),Object(s.b)(C.Ub,{className:"justify-content-evenly",mdxType:"CRow"},Object(s.b)(C.J,{xs:4,mdxType:"CCol"},"One of two columns"),Object(s.b)(C.J,{xs:4,mdxType:"CCol"},"One of two columns"))))),Object(s.b)("h3",{id:"column-wrapping"},"Column wrapping"),Object(s.b)("p",null,"If more than 12 columns are placed within a single row, each group of extra columns will, as one unit, wrap onto a new line."),Object(s.b)(c.c,{__position:3,__code:'<div className="docs-example-row">\n  <CContainer>\n    <CRow>\n      <CCol xs={9}>.col-9</CCol>\n      <CCol xs={4}>\n        .col-4\n        <br />\n        Since 9 + 4 = 13 &gt; 12, this 4-column-wide div gets wrapped onto a\n        new line as one contiguous unit.\n      </CCol>\n      <CCol xs={6}>\n        .col-6\n        <br />\n        Subsequent columns continue along the new line.\n      </CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(p={props:T,DefaultLayout:a.a,Playground:c.c,Props:c.d,CCol:C.J,CContainer:C.L,CRow:C.Ub},p.DefaultLayout=a.a,p._frontmatter=r,p),mdxType:"Playground"},Object(s.b)("div",{className:"docs-example-row"},Object(s.b)(C.L,{mdxType:"CContainer"},Object(s.b)(C.Ub,{mdxType:"CRow"},Object(s.b)(C.J,{xs:9,mdxType:"CCol"},".col-9"),Object(s.b)(C.J,{xs:4,mdxType:"CCol"},".col-4",Object(s.b)("br",null),"Since 9 + 4 = 13 > 12, this 4-column-wide div gets wrapped onto a new line as one contiguous unit."),Object(s.b)(C.J,{xs:6,mdxType:"CCol"},".col-6",Object(s.b)("br",null),"Subsequent columns continue along the new line."))))),Object(s.b)("h3",{id:"column-breaks"},"Column breaks"),Object(s.b)("p",null,"Breaking columns to a new line in flexbox requires a small hack: add an element with ",Object(s.b)("inlineCode",{parentName:"p"},"width: 100%")," wherever you want to wrap your columns to a new line. Normally this is accomplished with multiple ",Object(s.b)("inlineCode",{parentName:"p"},"<CRow>"),"s, but not every implementation method can account for this."),Object(s.b)(c.c,{__position:4,__code:'<div className="docs-example-row">\n  <CContainer>\n    <CRow>\n      <CCol xs={6} sm={3}>\n        .col-6 .col-sm-3\n      </CCol>\n      <CCol xs={6} sm={3}>\n        .col-6 .col-sm-3\n      </CCol>\n      <div className="w-100"></div>\n      <CCol xs={6} sm={3}>\n        .col-6 .col-sm-3\n      </CCol>\n      <CCol xs={6} sm={3}>\n        .col-6 .col-sm-3\n      </CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(u={props:T,DefaultLayout:a.a,Playground:c.c,Props:c.d,CCol:C.J,CContainer:C.L,CRow:C.Ub},u.DefaultLayout=a.a,u._frontmatter=r,u),mdxType:"Playground"},Object(s.b)("div",{className:"docs-example-row"},Object(s.b)(C.L,{mdxType:"CContainer"},Object(s.b)(C.Ub,{mdxType:"CRow"},Object(s.b)(C.J,{xs:6,sm:3,mdxType:"CCol"},".col-6 .col-sm-3"),Object(s.b)(C.J,{xs:6,sm:3,mdxType:"CCol"},".col-6 .col-sm-3"),Object(s.b)("div",{className:"w-100"}),Object(s.b)(C.J,{xs:6,sm:3,mdxType:"CCol"},".col-6 .col-sm-3"),Object(s.b)(C.J,{xs:6,sm:3,mdxType:"CCol"},".col-6 .col-sm-3"))))),Object(s.b)("p",null,"You may also apply this break at specific breakpoints with our ",Object(s.b)("a",{parentName:"p",href:"https://coreui.io/docs/utilities/display"},"responsive display utilities"),"."),Object(s.b)(c.c,{__position:5,__code:'<div className="docs-example-row">\n  <CContainer>\n    <CRow>\n      <CCol xs={6} sm={4}>\n        .col-6 .col-sm-4\n      </CCol>\n      <CCol xs={6} sm={4}>\n        .col-6 .col-sm-4\n      </CCol>\n      <div className="w-100 d-none d-md-block"></div>\n      <CCol xs={6} sm={4}>\n        .col-6 .col-sm-4\n      </CCol>\n      <CCol xs={6} sm={4}>\n        .col-6 .col-sm-4\n      </CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(f={props:T,DefaultLayout:a.a,Playground:c.c,Props:c.d,CCol:C.J,CContainer:C.L,CRow:C.Ub},f.DefaultLayout=a.a,f._frontmatter=r,f),mdxType:"Playground"},Object(s.b)("div",{className:"docs-example-row"},Object(s.b)(C.L,{mdxType:"CContainer"},Object(s.b)(C.Ub,{mdxType:"CRow"},Object(s.b)(C.J,{xs:6,sm:4,mdxType:"CCol"},".col-6 .col-sm-4"),Object(s.b)(C.J,{xs:6,sm:4,mdxType:"CCol"},".col-6 .col-sm-4"),Object(s.b)("div",{className:"w-100 d-none d-md-block"}),Object(s.b)(C.J,{xs:6,sm:4,mdxType:"CCol"},".col-6 .col-sm-4"),Object(s.b)(C.J,{xs:6,sm:4,mdxType:"CCol"},".col-6 .col-sm-4"))))),Object(s.b)("h2",{id:"reordering"},"Reordering"),Object(s.b)("h3",{id:"order-props"},"Order props"),Object(s.b)("p",null,"Use ",Object(s.b)("inlineCode",{parentName:"p"},"xs|sm|md|lg|xl|xxl={{ order: 1-5 }}")," props for controlling the ",Object(s.b)("strong",{parentName:"p"},"visual order")," of your content. These props are responsive, so you can set the ",Object(s.b)("inlineCode",{parentName:"p"},"order")," by breakpoint (e.g., ",Object(s.b)("inlineCode",{parentName:"p"},"xs={{ order: 1}} md={{ order: 2}}"),"). Includes support for ",Object(s.b)("inlineCode",{parentName:"p"},"1")," through ",Object(s.b)("inlineCode",{parentName:"p"},"5")," across all six grid tiers."),Object(s.b)(c.c,{__position:6,__code:'<div className="docs-example-row">\n  <CContainer>\n    <CRow>\n      <CCol>First in DOM, no order applied</CCol>\n      <CCol xs={{ span: true, order: 5 }}>\n        Second in DOM, with a larger order\n      </CCol>\n      <CCol xs={{ span: true, order: 1 }}>\n        Third in DOM, with an order of 1\n      </CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(O={props:T,DefaultLayout:a.a,Playground:c.c,Props:c.d,CCol:C.J,CContainer:C.L,CRow:C.Ub},O.DefaultLayout=a.a,O._frontmatter=r,O),mdxType:"Playground"},Object(s.b)("div",{className:"docs-example-row"},Object(s.b)(C.L,{mdxType:"CContainer"},Object(s.b)(C.Ub,{mdxType:"CRow"},Object(s.b)(C.J,{mdxType:"CCol"},"First in DOM, no order applied"),Object(s.b)(C.J,{xs:{span:!0,order:5},mdxType:"CCol"},"Second in DOM, with a larger order"),Object(s.b)(C.J,{xs:{span:!0,order:1},mdxType:"CCol"},"Third in DOM, with an order of 1"))))),Object(s.b)("p",null,"There are also responsive ",Object(s.b)("inlineCode",{parentName:"p"},"xs|sm|md|lg|xl|xxl={{ order: 'first' }}")," and ",Object(s.b)("inlineCode",{parentName:"p"},"xs|sm|md|lg|xl|xxl={{ order: 'last' }}")," props that change the ",Object(s.b)("inlineCode",{parentName:"p"},"order")," of an element by applying ",Object(s.b)("inlineCode",{parentName:"p"},"order: -1")," and ",Object(s.b)("inlineCode",{parentName:"p"},"order: 6"),", respectively. These values can also be intermixed with the numbered ",Object(s.b)("inlineCode",{parentName:"p"},"xs|sm|md|lg|xl|xxl={{ order: 1-5 }}")," values as needed."),Object(s.b)(c.c,{__position:7,__code:"<div className=\"docs-example-row\">\n  <CContainer>\n    <CRow>\n      <CCol xs={{ span: true, order: 'last' }}>\n        First in DOM, ordered last\n      </CCol>\n      <CCol>Second in DOM, unordered</CCol>\n      <CCol xs={{ span: true, order: 'first' }}>\n        Third in DOM, ordered first\n      </CCol>\n    </CRow>\n  </CContainer>\n</div>",__scope:(x={props:T,DefaultLayout:a.a,Playground:c.c,Props:c.d,CCol:C.J,CContainer:C.L,CRow:C.Ub},x.DefaultLayout=a.a,x._frontmatter=r,x),mdxType:"Playground"},Object(s.b)("div",{className:"docs-example-row"},Object(s.b)(C.L,{mdxType:"CContainer"},Object(s.b)(C.Ub,{mdxType:"CRow"},Object(s.b)(C.J,{xs:{span:!0,order:"last"},mdxType:"CCol"},"First in DOM, ordered last"),Object(s.b)(C.J,{mdxType:"CCol"},"Second in DOM, unordered"),Object(s.b)(C.J,{xs:{span:!0,order:"first"},mdxType:"CCol"},"Third in DOM, ordered first"))))),Object(s.b)("h3",{id:"offsetting-columns"},"Offsetting columns"),Object(s.b)("p",null,"You can offset grid columns in two ways: our responsive ",Object(s.b)("inlineCode",{parentName:"p"},"xs|sm|md|lg|xl|xxl={{ offset: 0-12 }}")," grid props and our ",Object(s.b)("a",{parentName:"p",href:"https://coreui.io/docs/utilities/spacing"},"margin utilities"),". Grid props are sized to match columns while margins are more useful for quick layouts where the width of the offset is variable."),Object(s.b)("h4",{id:"offset-prop"},"Offset prop"),Object(s.b)("p",null,"Move columns to the right using ",Object(s.b)("inlineCode",{parentName:"p"},"md={{ offset: * }}")," props. These props increase the left margin of a column by ",Object(s.b)("inlineCode",{parentName:"p"},"*")," columns. For example, ",Object(s.b)("inlineCode",{parentName:"p"},"md={{ offset: 4 }}")," moves ",Object(s.b)("inlineCode",{parentName:"p"},".col-md-4")," over four columns."),Object(s.b)(c.c,{__position:8,__code:'<div className="docs-example-row">\n  <CContainer>\n    <CRow>\n      <CCol md={4}>.col-md-4</CCol>\n      <CCol md={{ span: 4, offset: 4 }}>.col-md-4 .offset-md-4</CCol>\n    </CRow>\n    <CRow>\n      <CCol md={{ span: 3, offset: 3 }}>.col-md-3 .offset-md-3</CCol>\n      <CCol md={{ span: 3, offset: 3 }}>.col-md-3 .offset-md-3</CCol>\n    </CRow>\n    <CRow>\n      <CCol md={{ span: 6, offset: 3 }}>.col-md-6 .offset-md-3</CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(y={props:T,DefaultLayout:a.a,Playground:c.c,Props:c.d,CCol:C.J,CContainer:C.L,CRow:C.Ub},y.DefaultLayout=a.a,y._frontmatter=r,y),mdxType:"Playground"},Object(s.b)("div",{className:"docs-example-row"},Object(s.b)(C.L,{mdxType:"CContainer"},Object(s.b)(C.Ub,{mdxType:"CRow"},Object(s.b)(C.J,{md:4,mdxType:"CCol"},".col-md-4"),Object(s.b)(C.J,{md:{span:4,offset:4},mdxType:"CCol"},".col-md-4 .offset-md-4")),Object(s.b)(C.Ub,{mdxType:"CRow"},Object(s.b)(C.J,{md:{span:3,offset:3},mdxType:"CCol"},".col-md-3 .offset-md-3"),Object(s.b)(C.J,{md:{span:3,offset:3},mdxType:"CCol"},".col-md-3 .offset-md-3")),Object(s.b)(C.Ub,{mdxType:"CRow"},Object(s.b)(C.J,{md:{span:6,offset:3},mdxType:"CCol"},".col-md-6 .offset-md-3"))))),Object(s.b)(c.c,{__position:9,__code:'<div className="docs-example-row">\n  <CContainer>\n    <CRow>\n      <CCol sm={5} md={6}>\n        .col-sm-5 .col-md-6\n      </CCol>\n      <CCol sm={{ span: 5, offset: 2 }} md={{ span: 6, offset: 0 }}>\n        .col-sm-5 .offset-sm-2 .col-md-6 .offset-md-0\n      </CCol>\n    </CRow>\n    <CRow>\n      <CCol sm={6} md={5} lg={6}>\n        .col-sm-6 .col-md-5 .col-lg-6\n      </CCol>\n      <CCol sm={6} md={{ span: 5, offset: 2 }} lg={{ span: 6, offset: 0 }}>\n        .col-sm-6 .col-md-5 .offset-md-2 .col-lg-6 .offset-lg-0\n      </CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(j={props:T,DefaultLayout:a.a,Playground:c.c,Props:c.d,CCol:C.J,CContainer:C.L,CRow:C.Ub},j.DefaultLayout=a.a,j._frontmatter=r,j),mdxType:"Playground"},Object(s.b)("div",{className:"docs-example-row"},Object(s.b)(C.L,{mdxType:"CContainer"},Object(s.b)(C.Ub,{mdxType:"CRow"},Object(s.b)(C.J,{sm:5,md:6,mdxType:"CCol"},".col-sm-5 .col-md-6"),Object(s.b)(C.J,{sm:{span:5,offset:2},md:{span:6,offset:0},mdxType:"CCol"},".col-sm-5 .offset-sm-2 .col-md-6 .offset-md-0")),Object(s.b)(C.Ub,{mdxType:"CRow"},Object(s.b)(C.J,{sm:6,md:5,lg:6,mdxType:"CCol"},".col-sm-6 .col-md-5 .col-lg-6"),Object(s.b)(C.J,{sm:6,md:{span:5,offset:2},lg:{span:6,offset:0},mdxType:"CCol"},".col-sm-6 .col-md-5 .offset-md-2 .col-lg-6 .offset-lg-0"))))),Object(s.b)("h4",{id:"margin-utilities"},"Margin utilities"),Object(s.b)("p",null,"You can use margin utilities like ",Object(s.b)("inlineCode",{parentName:"p"},".me-auto")," to force sibling columns away from one another."),Object(s.b)(c.c,{__position:10,__code:'<div className="docs-example-row">\n  <CContainer>\n    <CRow>\n      <CCol md={4}>.col-md-4</CCol>\n      <CCol md={4} className="ms-auto">\n        .col-md-4 .ms-auto\n      </CCol>\n    </CRow>\n    <CRow>\n      <CCol md={3} className="ms-md-auto">\n        .col-md-3 .ms-md-auto\n      </CCol>\n      <CCol md={3} className="ms-md-auto">\n        .col-md-3 .ms-md-auto\n      </CCol>\n    </CRow>\n    <CRow>\n      <CCol xs="auto" className="me-auto">\n        .col-auto .me-auto\n      </CCol>\n      <CCol xs="auto">.col-auto</CCol>\n    </CRow>\n  </CContainer>\n</div>',__scope:(w={props:T,DefaultLayout:a.a,Playground:c.c,Props:c.d,CCol:C.J,CContainer:C.L,CRow:C.Ub},w.DefaultLayout=a.a,w._frontmatter=r,w),mdxType:"Playground"},Object(s.b)("div",{className:"docs-example-row"},Object(s.b)(C.L,{mdxType:"CContainer"},Object(s.b)(C.Ub,{mdxType:"CRow"},Object(s.b)(C.J,{md:4,mdxType:"CCol"},".col-md-4"),Object(s.b)(C.J,{md:4,className:"ms-auto",mdxType:"CCol"},".col-md-4 .ms-auto")),Object(s.b)(C.Ub,{mdxType:"CRow"},Object(s.b)(C.J,{md:3,className:"ms-md-auto",mdxType:"CCol"},".col-md-3 .ms-md-auto"),Object(s.b)(C.J,{md:3,className:"ms-md-auto",mdxType:"CCol"},".col-md-3 .ms-md-auto")),Object(s.b)(C.Ub,{mdxType:"CRow"},Object(s.b)(C.J,{xs:"auto",className:"me-auto",mdxType:"CCol"},".col-auto .me-auto"),Object(s.b)(C.J,{xs:"auto",mdxType:"CCol"},".col-auto"))))),Object(s.b)("h2",{id:"standalone-column-component"},"Standalone column component"),Object(s.b)("p",null,"The ",Object(s.b)("inlineCode",{parentName:"p"},"<CCol>")," component can also be used outside a ",Object(s.b)("inlineCode",{parentName:"p"},"<CRow>")," to give an element a specific width. Whenever column component are used as non direct children of a row, the paddings are omitted."),Object(s.b)(c.c,{__position:11,__code:'<CCol xs={3} className="bg-light p-3 border">\n  .col-3: width of 25%\n</CCol>\n<CCol sm={9} className="bg-light p-3 border">\n  .col-sm-9: width of 75% above sm breakpoint\n</CCol>',__scope:(h={props:T,DefaultLayout:a.a,Playground:c.c,Props:c.d,CCol:C.J,CContainer:C.L,CRow:C.Ub},h.DefaultLayout=a.a,h._frontmatter=r,h),mdxType:"Playground"},Object(s.b)(C.J,{xs:3,className:"bg-light p-3 border",mdxType:"CCol"},".col-3: width of 25%"),Object(s.b)(C.J,{sm:9,className:"bg-light p-3 border",mdxType:"CCol"},".col-sm-9: width of 75% above sm breakpoint")),Object(s.b)("h2",{id:"api"},"API"),Object(s.b)("h3",{id:"ccol"},"CCol"),Object(s.b)(c.d,{of:C.J,mdxType:"Props"}))}void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/4.0/layout/columns.mdx"}}),i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-4-0-layout-columns-mdx-5258f57f80fcfbed9382.js.map