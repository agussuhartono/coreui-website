{"version":3,"sources":["webpack:///../docs/4.0/components/CMultiSelect.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","useState","CMultiSelect","options","value","text","label","selected","disabled","selectionType","of","isMDXComponent"],"mappings":"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","file":"component---docs-4-0-components-c-multi-select-mdx-cc145dc922aafc996084.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukaszholeczek/CoreUI/@coreui/react-pro/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { useState } from 'react';\nimport { CMultiSelect } from '../../../src/index.ts';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const options = [\\n    {\\n      value: 0,\\n      text: \\'Angular\\',\\n    },\\n    {\\n      value: 1,\\n      text: \\'Bootstrap\\',\\n    },\\n    {\\n      value: 2,\\n      text: \\'React.js\\',\\n    },\\n    {\\n      value: 3,\\n      text: \\'Vue.js\\',\\n    },\\n    {\\n      label: \\'backend\\',\\n      options: [\\n        {\\n          value: 4,\\n          text: \\'Django\\',\\n        },\\n        {\\n          value: 5,\\n          text: \\'Laravel\\',\\n        },\\n        {\\n          value: 6,\\n          text: \\'Node.js\\',\\n        },\\n      ],\\n    },\\n  ]\\n  return <CMultiSelect options={options} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CMultiSelect,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const options = [{\n          value: 0,\n          text: 'Angular'\n        }, {\n          value: 1,\n          text: 'Bootstrap'\n        }, {\n          value: 2,\n          text: 'React.js'\n        }, {\n          value: 3,\n          text: 'Vue.js'\n        }, {\n          label: 'backend',\n          options: [{\n            value: 4,\n            text: 'Django'\n          }, {\n            value: 5,\n            text: 'Laravel'\n          }, {\n            value: 6,\n            text: 'Node.js'\n          }]\n        }];\n        return <CMultiSelect options={options} mdxType=\"CMultiSelect\" />;\n      }}\n    </Playground>\n    <Playground __position={1} __code={'() => {\\n  const options = [\\n    {\\n      value: 0,\\n      text: \\'Angular\\',\\n      selected: true,\\n    },\\n    {\\n      value: 1,\\n      text: \\'Bootstrap\\',\\n      selected: true,\\n      disabled: true,\\n    },\\n    {\\n      value: 2,\\n      text: \\'React.js\\',\\n    },\\n    {\\n      value: 3,\\n      text: \\'Vue.js\\',\\n    },\\n    {\\n      label: \\'backend\\',\\n      options: [\\n        {\\n          value: 4,\\n          text: \\'Django\\',\\n        },\\n        {\\n          value: 5,\\n          text: \\'Laravel\\',\\n          selected: true,\\n        },\\n        {\\n          value: 6,\\n          text: \\'Node.js\\',\\n        },\\n      ],\\n    },\\n  ]\\n  return <CMultiSelect options={options} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CMultiSelect,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const options = [{\n          value: 0,\n          text: 'Angular',\n          selected: true\n        }, {\n          value: 1,\n          text: 'Bootstrap',\n          selected: true,\n          disabled: true\n        }, {\n          value: 2,\n          text: 'React.js'\n        }, {\n          value: 3,\n          text: 'Vue.js'\n        }, {\n          label: 'backend',\n          options: [{\n            value: 4,\n            text: 'Django'\n          }, {\n            value: 5,\n            text: 'Laravel',\n            selected: true\n          }, {\n            value: 6,\n            text: 'Node.js'\n          }]\n        }];\n        return <CMultiSelect options={options} mdxType=\"CMultiSelect\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"selection-types\"\n    }}>{`Selection types`}</h2>\n    <h3 {...{\n      \"id\": \"counter\"\n    }}>{`Counter`}</h3>\n    <Playground __position={2} __code={'() => {\\n  const options = [\\n    {\\n      value: 0,\\n      text: \\'Angular\\',\\n      selected: true,\\n    },\\n    {\\n      value: 1,\\n      text: \\'Bootstrap\\',\\n      selected: true,\\n      disabled: true,\\n    },\\n    {\\n      value: 2,\\n      text: \\'React.js\\',\\n    },\\n    {\\n      value: 3,\\n      text: \\'Vue.js\\',\\n    },\\n    {\\n      label: \\'backend\\',\\n      options: [\\n        {\\n          value: 4,\\n          text: \\'Django\\',\\n        },\\n        {\\n          value: 5,\\n          text: \\'Laravel\\',\\n          selected: true,\\n        },\\n        {\\n          value: 6,\\n          text: \\'Node.js\\',\\n        },\\n      ],\\n    },\\n  ]\\n  return <CMultiSelect options={options} selectionType=\\\"counter\\\" />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CMultiSelect,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const options = [{\n          value: 0,\n          text: 'Angular',\n          selected: true\n        }, {\n          value: 1,\n          text: 'Bootstrap',\n          selected: true,\n          disabled: true\n        }, {\n          value: 2,\n          text: 'React.js'\n        }, {\n          value: 3,\n          text: 'Vue.js'\n        }, {\n          label: 'backend',\n          options: [{\n            value: 4,\n            text: 'Django'\n          }, {\n            value: 5,\n            text: 'Laravel',\n            selected: true\n          }, {\n            value: 6,\n            text: 'Node.js'\n          }]\n        }];\n        return <CMultiSelect options={options} selectionType=\"counter\" mdxType=\"CMultiSelect\" />;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"tags\"\n    }}>{`Tags`}</h3>\n    <Playground __position={3} __code={'() => {\\n  const options = [\\n    {\\n      value: 0,\\n      text: \\'Angular\\',\\n      selected: true,\\n    },\\n    {\\n      value: 1,\\n      text: \\'Bootstrap\\',\\n      selected: true,\\n      disabled: true,\\n    },\\n    {\\n      value: 2,\\n      text: \\'React.js\\',\\n    },\\n    {\\n      value: 3,\\n      text: \\'Vue.js\\',\\n    },\\n    {\\n      label: \\'backend\\',\\n      options: [\\n        {\\n          value: 4,\\n          text: \\'Django\\',\\n        },\\n        {\\n          value: 5,\\n          text: \\'Laravel\\',\\n          selected: true,\\n        },\\n        {\\n          value: 6,\\n          text: \\'Node.js\\',\\n        },\\n      ],\\n    },\\n  ]\\n  return <CMultiSelect options={options} selectionType=\\\"tags\\\" />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CMultiSelect,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const options = [{\n          value: 0,\n          text: 'Angular',\n          selected: true\n        }, {\n          value: 1,\n          text: 'Bootstrap',\n          selected: true,\n          disabled: true\n        }, {\n          value: 2,\n          text: 'React.js'\n        }, {\n          value: 3,\n          text: 'Vue.js'\n        }, {\n          label: 'backend',\n          options: [{\n            value: 4,\n            text: 'Django'\n          }, {\n            value: 5,\n            text: 'Laravel',\n            selected: true\n          }, {\n            value: 6,\n            text: 'Node.js'\n          }]\n        }];\n        return <CMultiSelect options={options} selectionType=\"tags\" mdxType=\"CMultiSelect\" />;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"text\"\n    }}>{`Text`}</h3>\n    <Playground __position={4} __code={'() => {\\n  const options = [\\n    {\\n      value: 0,\\n      text: \\'Angular\\',\\n      selected: true,\\n    },\\n    {\\n      value: 1,\\n      text: \\'Bootstrap\\',\\n      selected: true,\\n      disabled: true,\\n    },\\n    {\\n      value: 2,\\n      text: \\'React.js\\',\\n    },\\n    {\\n      value: 3,\\n      text: \\'Vue.js\\',\\n    },\\n    {\\n      label: \\'backend\\',\\n      options: [\\n        {\\n          value: 4,\\n          text: \\'Django\\',\\n        },\\n        {\\n          value: 5,\\n          text: \\'Laravel\\',\\n          selected: true,\\n        },\\n        {\\n          value: 6,\\n          text: \\'Node.js\\',\\n        },\\n      ],\\n    },\\n  ]\\n  return <CMultiSelect options={options} selectionType=\\\"text\\\" />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      CMultiSelect,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const options = [{\n          value: 0,\n          text: 'Angular',\n          selected: true\n        }, {\n          value: 1,\n          text: 'Bootstrap',\n          selected: true,\n          disabled: true\n        }, {\n          value: 2,\n          text: 'React.js'\n        }, {\n          value: 3,\n          text: 'Vue.js'\n        }, {\n          label: 'backend',\n          options: [{\n            value: 4,\n            text: 'Django'\n          }, {\n            value: 5,\n            text: 'Laravel',\n            selected: true\n          }, {\n            value: 6,\n            text: 'Node.js'\n          }]\n        }];\n        return <CMultiSelect options={options} selectionType=\"text\" mdxType=\"CMultiSelect\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <h3 {...{\n      \"id\": \"cmultiselect\"\n    }}>{`CMultiSelect`}</h3>\n    <Props of={CMultiSelect} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}