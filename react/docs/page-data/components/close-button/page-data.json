{"componentChunkName":"component---src-templates-docs-tsx","path":"/components/close-button/","result":{"data":{"site":{"siteMetadata":{"title":"CoreUI for React.js"}},"mdx":{"id":"2a1cd3c3-2f3c-53f6-b0ab-4ac9888596bd","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React Close Button Component\",\n  \"name\": \"Close Button\",\n  \"description\": \"A generic close button component for dismissing content like modals and alerts.\",\n  \"menu\": \"Components\",\n  \"route\": \"/components/close-button\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"example\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Example\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#example\",\n    \"aria-label\": \"example permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Provide an option to dismiss or close a component with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CCloseButton>\"), \". Default styling is limited, but highly customizable. Modify the Sass variables to replace the default \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"background-image\"), \".\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CCloseButton, {\n    mdxType: \"CCloseButton\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CCloseButton />\\n\")), mdx(\"h2\", {\n    \"id\": \"disabled-state\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Disabled state\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#disabled-state\",\n    \"aria-label\": \"disabled state permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Disabled close buttons change their \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"opacity\"), \". We've also applied \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pointer-events: none\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"user-select: none\"), \" to preventing hover and active states from triggering.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CCloseButton, {\n    disabled: true,\n    mdxType: \"CCloseButton\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CCloseButton disabled />\\n\")), mdx(\"h2\", {\n    \"id\": \"white-variant\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"White variant\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#white-variant\",\n    \"aria-label\": \"white variant permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Change the default \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CCloseButton>\"), \" to be white with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"white\"), \" boolean property.\"), mdx(Example, {\n    className: \"bg-dark border-0\",\n    mdxType: \"Example\"\n  }, mdx(CCloseButton, {\n    white: true,\n    mdxType: \"CCloseButton\"\n  }), mdx(CCloseButton, {\n    white: true,\n    disabled: true,\n    mdxType: \"CCloseButton\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CCloseButton white />\\n<CCloseButton white disabled />\\n\")), mdx(\"h2\", {\n    \"id\": \"api\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"API\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#api\",\n    \"aria-label\": \"api permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"cclosebutton\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CCloseButton\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cclosebutton\",\n    \"aria-label\": \"cclosebutton permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CCloseButton } from '@coreui/react'\\n// or\\nimport CCloseButton from '@coreui/react/src/components/close-button/CCloseButton'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the base component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"disabled\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Toggle the disabled state for the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"white\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Change the default color to white.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"React Close Button Component","description":"A generic close button component for dismissing content like modals and alerts.","name":"Close Button","route":"/components/close-button"},"tableOfContents":{"items":[{"url":"#example","title":"Example"},{"url":"#disabled-state","title":"Disabled state"},{"url":"#white-variant","title":"White variant"},{"url":"#api","title":"API","items":[{"url":"#cclosebutton","title":"CCloseButton"}]}]}}},"pageContext":{"id":"2a1cd3c3-2f3c-53f6-b0ab-4ac9888596bd"}},"staticQueryHashes":["4202924991"]}