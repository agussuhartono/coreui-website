{"componentChunkName":"component---src-templates-docs-tsx","path":"/components/smart-pagination/","result":{"data":{"site":{"siteMetadata":{"title":"CoreUI for React.js"}},"mdx":{"id":"70bca6fc-4966-5945-8819-831787504dcd","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar BasicExample = function BasicExample() {\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPage = _useState2[0],\n      setCurrentPage = _useState2[1];\n\n  return mdx(CSmartPagination, {\n    activePage: currentPage,\n    pages: 10,\n    onActivePageChange: setCurrentPage,\n    mdxType: \"CSmartPagination\"\n  });\n};\n\nvar SizingLgExample = function SizingLgExample() {\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentPage = _useState4[0],\n      setCurrentPage = _useState4[1];\n\n  return mdx(CSmartPagination, {\n    size: \"lg\",\n    activePage: currentPage,\n    pages: 10,\n    onActivePageChange: setCurrentPage,\n    mdxType: \"CSmartPagination\"\n  });\n};\n\nvar SizingSmExample = function SizingSmExample() {\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentPage = _useState6[0],\n      setCurrentPage = _useState6[1];\n\n  return mdx(CSmartPagination, {\n    size: \"sm\",\n    activePage: currentPage,\n    pages: 10,\n    onActivePageChange: setCurrentPage,\n    mdxType: \"CSmartPagination\"\n  });\n};\n\nvar AlignmentCenterExample = function AlignmentCenterExample() {\n  var _useState7 = useState(1),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentPage = _useState8[0],\n      setCurrentPage = _useState8[1];\n\n  return mdx(CSmartPagination, {\n    align: \"center\",\n    activePage: currentPage,\n    pages: 10,\n    onActivePageChange: setCurrentPage,\n    mdxType: \"CSmartPagination\"\n  });\n};\n\nvar AlignmentEndExample = function AlignmentEndExample() {\n  var _useState9 = useState(1),\n      _useState10 = _slicedToArray(_useState9, 2),\n      currentPage = _useState10[0],\n      setCurrentPage = _useState10[1];\n\n  return mdx(CSmartPagination, {\n    align: \"end\",\n    activePage: currentPage,\n    pages: 10,\n    onActivePageChange: setCurrentPage,\n    mdxType: \"CSmartPagination\"\n  });\n};\n\nvar _frontmatter = {\n  \"title\": \"React Smart Pagination Component\",\n  \"name\": \"Smart Pagination\",\n  \"description\": \"Documentation and examples for showing smart pagination to indicate a series of related content exists across multiple pages.\",\n  \"menu\": \"Components\",\n  \"route\": \"/docs/4.0/components/smart-pagination\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  BasicExample: BasicExample,\n  SizingLgExample: SizingLgExample,\n  SizingSmExample: SizingSmExample,\n  AlignmentCenterExample: AlignmentCenterExample,\n  AlignmentEndExample: AlignmentEndExample,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"overview\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Overview\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#overview\",\n    \"aria-label\": \"overview permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"React smart pagination component consists of button-like styled links, that are arranged side by side in a horizontal list.\"), mdx(\"p\", null, \"We use a large block of connected links for our pagination, making links hard to miss and easily scalable\\u2014all while providing large hit areas. SmartPagination is built with list HTML elements so screen readers can announce the number of available links. SmartPagination also use a wrapping \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<nav>\"), \" element to identify it as a navigation section to screen readers and other assistive technologies.\"), mdx(\"p\", null, \"In addition, as pages likely have more than one such navigation section, SmartPagination provide a descriptive \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aria-label\"), \" for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<nav>\"), \" to reflect its purpose. For example, if the pagination component is used to navigate between a set of search results, an appropriate label could be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aria-label=\\\"Search results pages\\\"\"), \".???\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(BasicExample, {\n    mdxType: \"BasicExample\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const [currentPage, setCurrentPage] = useState(1)\\nreturn <CSmartPagination activePage={currentPage} pages={10} onActivePageChange={setCurrentPage} />\\n\")), mdx(\"h2\", {\n    \"id\": \"features\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Features\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#features\",\n    \"aria-label\": \"features permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Determine behavior, style and functionality of pagination\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart automatic items generation\")), mdx(\"h2\", {\n    \"id\": \"working-with-icons\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Working with icons\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#working-with-icons\",\n    \"aria-label\": \"working with icons permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Looking to use an icon or symbol in place of text for some pagination links? SmartPagination will provide screen reader support for 'firstButton', 'previousButton', 'nextButton' and 'lastButton'.\"), mdx(\"h2\", {\n    \"id\": \"sizing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Sizing\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#sizing\",\n    \"aria-label\": \"sizing permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Fancy larger or smaller pagination? Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size=\\\"lg\\\"\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size=\\\"sm\\\"\"), \" for additional sizes.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(SizingLgExample, {\n    mdxType: \"SizingLgExample\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const [currentPage, setCurrentPage] = useState(1)\\nreturn (\\n  <CSmartPagination\\n    size=\\\"lg\\\"\\n    activePage={currentPage}\\n    pages={10}\\n    onActivePageChange={setCurrentPage}\\n  />\\n)\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(SizingSmExample, {\n    mdxType: \"SizingSmExample\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const [currentPage, setCurrentPage] = useState(1)\\nreturn (\\n  <CSmartPagination\\n    size=\\\"sm\\\"\\n    activePage={currentPage}\\n    pages={10}\\n    onActivePageChange={setCurrentPage}\\n  />\\n)\\n\")), mdx(\"h2\", {\n    \"id\": \"alignment\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Alignment\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#alignment\",\n    \"aria-label\": \"alignment permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Change the alignment of pagination components with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"align=\\\"start\\\"\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"align=\\\"center\\\"\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"align=\\\"end\\\"\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://coreui.io/docs/utilities/flex/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"flexbox utilities\"), \".\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(AlignmentCenterExample, {\n    mdxType: \"AlignmentCenterExample\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const [currentPage, setCurrentPage] = useState(1)\\nreturn (\\n  <CSmartPagination\\n    align=\\\"center\\\"\\n    activePage={currentPage}\\n    pages={10}\\n    onActivePageChange={setCurrentPage}\\n  />\\n)\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(AlignmentEndExample, {\n    mdxType: \"AlignmentEndExample\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const [currentPage, setCurrentPage] = useState(1)\\nreturn (\\n  <CSmartPagination\\n    align=\\\"end\\\"\\n    activePage={currentPage}\\n    pages={10}\\n    onActivePageChange={setCurrentPage}\\n  />\\n)\\n\")), mdx(\"h2\", {\n    \"id\": \"api\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"API\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#api\",\n    \"aria-label\": \"api permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"csmartpagination\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CSmartPagination\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#csmartpagination\",\n    \"aria-label\": \"csmartpagination permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CSmartPagination } from '@coreui/react-pro'\\n// or\\nimport CSmartPagination from '@coreui/react-pro/src/components/pagination/CSmartPagination'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"activePage\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Current page number.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"1\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"align\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Horizontall align.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'start'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'center'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'end'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"start\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"arrows\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Show/hide arrows.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"true\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the base component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"dots\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Show/hide dots.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"true\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"doubleArrows\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Show double arrows buttons.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"true\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"firstButton\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The content of 'firstButton' button.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"<React.Fragment>\\xAB</React.Fragment>\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"lastButton\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The content of 'lastButton' button.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"<React.Fragment>\\xBB</React.Fragment>\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"limit\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Maximum items number.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"5\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"nextButton\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The content of 'nextButton' button.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"<React.Fragment>\\u203A</React.Fragment>\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"onActivePageChange\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"On active page change callback.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"(a: number, b?: boolean) => void\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"pages\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Number of pages.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"previousButton\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The content of 'previousButton' button.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"<React.Fragment>\\u2039</React.Fragment>\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"size\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Size of pagination, valid values: 'sm', 'lg'.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'sm'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'lg'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"React Smart Pagination Component","description":"Documentation and examples for showing smart pagination to indicate a series of related content exists across multiple pages.","name":"Smart Pagination","route":"/docs/4.0/components/smart-pagination"},"tableOfContents":{"items":[{"url":"#overview","title":"Overview"},{"url":"#features","title":"Features"},{"url":"#working-with-icons","title":"Working with icons"},{"url":"#sizing","title":"Sizing"},{"url":"#alignment","title":"Alignment"},{"url":"#api","title":"API","items":[{"url":"#csmartpagination","title":"CSmartPagination"}]}]}}},"pageContext":{"id":"70bca6fc-4966-5945-8819-831787504dcd"}},"staticQueryHashes":["4202924991"]}