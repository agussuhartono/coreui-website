{
    "componentChunkName": "component---src-templates-docs-tsx",
    "path": "/components/chart/",
    "result": {"data":{"site":{"siteMetadata":{"title":"CoreUI for React.js"}},"mdx":{"id":"31ec89be-6f96-5890-a1af-fce16d07953a","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React Chart.js Component\",\n  \"name\": \"Chart\",\n  \"description\": \"React wrapper for Chart.js 3.0, the most popular charting library.\",\n  \"menu\": \"Components\",\n  \"route\": \"/components/chart\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"installation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Installation\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#installation\",\n    \"aria-label\": \"installation permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"If you want to use our Chart.js React wrapper you have to install an additional package.\"), mdx(\"h3\", {\n    \"id\": \"npm\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Npm\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#npm\",\n    \"aria-label\": \"npm permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm install @coreui/react-chartjs\\n\")), mdx(\"h3\", {\n    \"id\": \"yarn\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Yarn\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#yarn\",\n    \"aria-label\": \"yarn permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"yarn add @coreui/react-chartjs\\n\")), mdx(\"h2\", {\n    \"id\": \"chart-types\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Chart Types\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#chart-types\",\n    \"aria-label\": \"chart types permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"line-chart\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Line Chart\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#line-chart\",\n    \"aria-label\": \"line chart permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"A line chart is a way of plotting data points on a line. Often, it is used to show trend data, or the comparison of two data sets.\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.chartjs.org/docs/latest/charts/line.html#dataset-properties\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"Line Chart properties\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CChartLine, {\n    wrapper: false,\n    data: {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n      datasets: [{\n        label: \"My First dataset\",\n        backgroundColor: \"rgba(220, 220, 220, 0.2)\",\n        borderColor: \"rgba(220, 220, 220, 1)\",\n        pointBackgroundColor: \"rgba(220, 220, 220, 1)\",\n        pointBorderColor: \"#fff\",\n        data: [40, 20, 12, 39, 10, 40, 39]\n      }, {\n        label: \"My Second dataset\",\n        backgroundColor: \"rgba(151, 187, 205, 0.2)\",\n        borderColor: \"rgba(151, 187, 205, 1)\",\n        pointBackgroundColor: \"rgba(151, 187, 205, 1)\",\n        pointBorderColor: \"#fff\",\n        data: [50, 12, 28, 29, 7, 25, 12]\n      }]\n    },\n    mdxType: \"CChartLine\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"// use <CChart type=\\\"line\\\"> or <CChartLine> component\\n<CChart\\n  type=\\\"line\\\" \\n  data={{\\n    labels: [\\\"January\\\", \\\"February\\\", \\\"March\\\", \\\"April\\\", \\\"May\\\", \\\"June\\\", \\\"July\\\"],\\n    datasets: [\\n      {\\n        label: \\\"My First dataset\\\",\\n        backgroundColor: \\\"rgba(220, 220, 220, 0.2)\\\",\\n        borderColor: \\\"rgba(220, 220, 220, 1)\\\",\\n        pointBackgroundColor: \\\"rgba(220, 220, 220, 1)\\\",\\n        pointBorderColor: \\\"#fff\\\",\\n        data: [40, 20, 12, 39, 10, 40, 39, 80, 40]\\n      },\\n      {\\n        label: \\\"My Second dataset\\\",\\n        backgroundColor: \\\"rgba(151, 187, 205, 0.2)\\\",\\n        borderColor: \\\"rgba(151, 187, 205, 1)\\\",\\n        pointBackgroundColor: \\\"rgba(151, 187, 205, 1)\\\",\\n        pointBorderColor: \\\"#fff\\\",\\n        data: [50, 12, 28, 29, 7, 25, 12, 70, 60]\\n      },\\n    ],\\n  }}\\n/>\\n\")), mdx(\"h3\", {\n    \"id\": \"bar-chart\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Bar Chart\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#bar-chart\",\n    \"aria-label\": \"bar chart permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"A bar chart provides a way of showing data values represented as vertical bars. It is sometimes used to show trend data, and the comparison of multiple data sets side by side. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.chartjs.org/docs/latest/charts/bar.html#dataset-properties\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"Bar Chart properties\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CChartBar, {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [{\n        label: 'GitHub Commits',\n        backgroundColor: '#f87979',\n        data: [40, 20, 12, 39, 10, 40, 39, 80, 40]\n      }]\n    },\n    labels: \"months\",\n    mdxType: \"CChartBar\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"// use <CChart type=\\\"bar\\\"> or <CChartBar> component\\n<CChart\\n  type=\\\"bar\\\"\\n  data={{\\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n    datasets: [\\n      {\\n        label: 'GitHub Commits',\\n        backgroundColor: '#f87979',\\n        data: [40, 20, 12, 39, 10, 40, 39, 80, 40],\\n      },\\n    ],\\n  }}\\n  labels=\\\"months\\\"\\n/>\\n\")), mdx(\"h3\", {\n    \"id\": \"radar-chart\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Radar Chart\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#radar-chart\",\n    \"aria-label\": \"radar chart permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"A radar chart is a way of showing multiple data points and the variation between them. They are often useful for comparing the points of two or more different data sets. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.chartjs.org/docs/latest/charts/radar.html#dataset-properties\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"Radar Chart properties\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CChartRadar, {\n    data: {\n      labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n      datasets: [{\n        label: 'My First dataset',\n        backgroundColor: 'rgba(220, 220, 220, 0.2)',\n        borderColor: 'rgba(220, 220, 220, 1)',\n        pointBackgroundColor: 'rgba(220, 220, 220, 1)',\n        pointBorderColor: '#fff',\n        pointHighlightFill: '#fff',\n        pointHighlightStroke: 'rgba(220, 220, 220, 1)',\n        data: [65, 59, 90, 81, 56, 55, 40]\n      }, {\n        label: 'My Second dataset',\n        backgroundColor: 'rgba(151, 187, 205, 0.2)',\n        borderColor: 'rgba(151, 187, 205, 1)',\n        pointBackgroundColor: 'rgba(151, 187, 205, 1)',\n        pointBorderColor: '#fff',\n        pointHighlightFill: '#fff',\n        pointHighlightStroke: 'rgba(151, 187, 205, 1)',\n        data: [28, 48, 40, 19, 96, 27, 100]\n      }]\n    },\n    mdxType: \"CChartRadar\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"// use <CChart type=\\\"radar\\\"> or <CChartRadar> component\\n<CChart \\n  type=\\\"radar\\\"\\n  data={{\\n    labels: [\\n      'Eating',\\n      'Drinking',\\n      'Sleeping',\\n      'Designing',\\n      'Coding',\\n      'Cycling',\\n      'Running',\\n    ],\\n    datasets: [\\n      {\\n        label: 'My First dataset',\\n        backgroundColor: 'rgba(220, 220, 220, 0.2)',\\n        borderColor: 'rgba(220, 220, 220, 1)',\\n        pointBackgroundColor: 'rgba(220, 220, 220, 1)',\\n        pointBorderColor: '#fff',\\n        pointHighlightFill: '#fff',\\n        pointHighlightStroke: 'rgba(220, 220, 220, 1)',\\n        data: [65, 59, 90, 81, 56, 55, 40],\\n      },\\n      {\\n        label: 'My Second dataset',\\n        backgroundColor: 'rgba(151, 187, 205, 0.2)',\\n        borderColor: 'rgba(151, 187, 205, 1)',\\n        pointBackgroundColor: 'rgba(151, 187, 205, 1)',\\n        pointBorderColor: '#fff',\\n        pointHighlightFill: '#fff',\\n        pointHighlightStroke: 'rgba(151, 187, 205, 1)',\\n        data: [28, 48, 40, 19, 96, 27, 100],\\n      },\\n    ],\\n  }}\\n/>\\n\")), mdx(\"h3\", {\n    \"id\": \"doughnut-and-pie-charts\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Doughnut and Pie Charts\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#doughnut-and-pie-charts\",\n    \"aria-label\": \"doughnut and pie charts permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Pie and doughnut charts are probably the most commonly used charts. They are divided into segments, the arc of each segment shows the proportional value of each piece of data. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.chartjs.org/docs/latest/charts/doughnut.html#dataset-properties\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"Doughnut and Pie Charts properties\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CChartDoughnut, {\n    data: {\n      labels: ['VueJs', 'EmberJs', 'ReactJs', 'AngularJs'],\n      datasets: [{\n        backgroundColor: ['#41B883', '#E46651', '#00D8FF', '#DD1B16'],\n        data: [40, 20, 80, 10]\n      }]\n    },\n    mdxType: \"CChartDoughnut\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"// use <CChart type=\\\"doughnut\\\"> or <CChartDoughnut> component\\n<CChart\\n  type=\\\"doughnut\\\"\\n  data={{\\n    labels: ['VueJs', 'EmberJs', 'ReactJs', 'AngularJs'],\\n    datasets: [\\n      {\\n        backgroundColor: ['#41B883', '#E46651', '#00D8FF', '#DD1B16'],\\n        data: [40, 20, 80, 10],\\n      },\\n    ],\\n  }}\\n/>\\n\")), mdx(\"h3\", {\n    \"id\": \"polar-area-chart\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Polar Area Chart\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#polar-area-chart\",\n    \"aria-label\": \"polar area chart permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Polar area charts are similar to pie charts, but each segment has the same angle - the radius of the segment differs depending on the value. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.chartjs.org/docs/latest/charts/polar.html#dataset-properties\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"Polar Area Chart properties\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CChartPolarArea, {\n    data: {\n      labels: ['Red', 'Green', 'Yellow', 'Grey', 'Blue'],\n      datasets: [{\n        data: [11, 16, 7, 3, 14],\n        backgroundColor: ['#FF6384', '#4BC0C0', '#FFCE56', '#E7E9ED', '#36A2EB']\n      }]\n    },\n    mdxType: \"CChartPolarArea\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"// use <CChart type=\\\"polarArea\\\"> or <CChartPolarArea> component\\n<CChart\\n  type=\\\"polarArea\\\"\\n  data={{\\n    labels: ['Red', 'Green', 'Yellow', 'Grey', 'Blue'],\\n    datasets: [\\n      {\\n        data: [11, 16, 7, 3, 14],\\n        backgroundColor: ['#FF6384', '#4BC0C0', '#FFCE56', '#E7E9ED', '#36A2EB'],\\n      },\\n    ],\\n  }}\\n/>\\n\")), mdx(\"h3\", {\n    \"id\": \"bubble-chart\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Bubble Chart\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#bubble-chart\",\n    \"aria-label\": \"bubble chart permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"A bubble chart is used to display three dimensions of data at the same time. The location of the bubble is determined by the first two dimensions and the corresponding horizontal and vertical axes. The third dimension is represented by the size of the individual bubbles. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.chartjs.org/docs/latest/charts/bubble.html#dataset-properties\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"Bubble Chart properties\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CChartBubble, {\n    data: {\n      datasets: [{\n        label: 'First Dataset',\n        data: [{\n          x: 20,\n          y: 30,\n          r: 15\n        }, {\n          x: 40,\n          y: 10,\n          r: 10\n        }],\n        backgroundColor: 'rgb(255, 99, 132)'\n      }]\n    },\n    mdxType: \"CChartBubble\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"// use <CChart type=\\\"bubble\\\"> or <CChartBubble> component\\n<CChart\\n  type=\\\"bubble\\\"\\n  data={{\\n    datasets: [{\\n      label: 'First Dataset',\\n      data: [{\\n        x: 20,\\n        y: 30,\\n        r: 15\\n      }, {\\n        x: 40,\\n        y: 10,\\n        r: 10\\n      }],\\n      backgroundColor: 'rgb(255, 99, 132)'\\n    }]\\n  }}\\n/>\\n\")), mdx(\"h3\", {\n    \"id\": \"scatter-chart\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Scatter Chart\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#scatter-chart\",\n    \"aria-label\": \"scatter chart permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"A bubble chart is used to display three dimensions of data at the same time. The location of the bubble is determined by the first two dimensions and the corresponding horizontal and vertical axes. The third dimension is represented by the size of the individual bubbles. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.chartjs.org/docs/latest/charts/scatter.html#dataset-properties\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"Scatter Chart properties\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CChartScatter, {\n    data: {\n      datasets: [{\n        label: 'Scatter Dataset',\n        data: [{\n          x: -10,\n          y: 0\n        }, {\n          x: 0,\n          y: 10\n        }, {\n          x: 10,\n          y: 5\n        }, {\n          x: 0.5,\n          y: 5.5\n        }],\n        backgroundColor: 'rgb(255, 99, 132)'\n      }]\n    },\n    options: {\n      scales: {\n        x: {\n          type: 'linear',\n          position: 'bottom'\n        }\n      }\n    },\n    mdxType: \"CChartScatter\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"// use <CChart type=\\\"scatter\\\"> or <CChartScatter> component\\n<CChart\\n  type=\\\"scatter\\\"\\n  data={{\\n    datasets: [{\\n      label: 'Scatter Dataset',\\n      data: [{\\n        x: -10,\\n        y: 0\\n      }, {\\n        x: 0,\\n        y: 10\\n      }, {\\n        x: 10,\\n        y: 5\\n      }, {\\n        x: 0.5,\\n        y: 5.5\\n      }],\\n      backgroundColor: 'rgb(255, 99, 132)'\\n    }],\\n  }}\\n  options={{\\n    scales: {\\n      x: {\\n        type: 'linear',\\n        position: 'bottom'\\n      }\\n    }\\n  }}\\n/>\\n\")), mdx(\"h2\", {\n    \"id\": \"api\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"API\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#api\",\n    \"aria-label\": \"api permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"cchart\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CChart\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cchart\",\n    \"aria-label\": \"cchart permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CChart } from '@coreui/Users'\\n// or\\nimport CChart from '@coreui/Users/lukaszholeczek/CoreUI/@coreui/react/node_modules/@coreui/react-chartjs/src/CChart'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the base component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"customTooltips\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Enables custom html based tooltips instead of standard tooltips.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"true\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"data\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The data object that is passed into the Chart.js chart (more info).\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ChartData<keyof ChartTypeRegistry, (number\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ScatterDataPoint\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"BubbleDataPoint)[], unknown>\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"((canvas: HTMLCanvasElement) => ChartData<...>)\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"fallbackContent\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A fallback for when the canvas cannot be rendered. Can be used for accessible chart descriptions.\", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"br\", {\n    parentName: \"td\"\n  }), \"{@link \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://www.chartjs.org/docs/latest/general/accessibility.html\"\n  }, \"https://www.chartjs.org/docs/latest/general/accessibility.html\"), \" More Info}\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"React.ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"getDatasetAtEvent\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Proxy for Chart.js getDatasetAtEvent. Calls with dataset and triggering event.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"(dataset: InteractionItem[], event: React.MouseEvent<HTMLCanvasElement>) => void\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"getElementAtEvent\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Proxy for Chart.js getElementAtEvent. Calls with single element array and triggering event.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"(element: InteractionItem[], event: React.MouseEvent<HTMLCanvasElement>) => void\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"getElementsAtEvent\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Proxy for Chart.js getElementsAtEvent. Calls with element array and triggering event.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"(elements: InteractionItem[], event: React.MouseEvent<HTMLCanvasElement>) => void\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"height\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Height attribute applied to the rendered canvas.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"150\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"id\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"ID attribute applied to the rendered canvas.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"options\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The options object that is passed into the Chart.js chart.\", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"br\", {\n    parentName: \"td\"\n  }), \"{@link \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://www.chartjs.org/docs/latest/general/options.html\"\n  }, \"https://www.chartjs.org/docs/latest/general/options.html\"), \" More Info}\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"_DeepPartialObject<CoreChartOptions<keyof ChartTypeRegistry> & ElementChartOptions<keyof ChartTypeRegistry> & PluginChartOptions<...> & DatasetChartOptions<...> & ScaleChartOptions<...>>\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"plugins\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The plugins array that is passed into the Chart.js chart (more info)\", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"br\", {\n    parentName: \"td\"\n  }), \"{@link \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://www.chartjs.org/docs/latest/developers/plugins.html\"\n  }, \"https://www.chartjs.org/docs/latest/developers/plugins.html\"), \" More Info}\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"Plugin<keyof ChartTypeRegistry, AnyObject>[]\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"redraw\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"If true, will tear down and redraw chart on all updates.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"false\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"type\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Chart.js chart type.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"{'line'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'bar'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'radar'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'doughnut'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'polarArea'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'bubble'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'pie'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'scatter'}\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"width\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Width attribute applied to the rendered canvas.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"300\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"wrapper\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Put the chart into the wrapper div element.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"true\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"React Chart.js Component","description":"React wrapper for Chart.js 3.0, the most popular charting library.","route":"/components/chart"},"tableOfContents":{"items":[{"url":"#installation","title":"Installation","items":[{"url":"#npm","title":"Npm"},{"url":"#yarn","title":"Yarn"}]},{"url":"#chart-types","title":"Chart Types","items":[{"url":"#line-chart","title":"Line Chart"},{"url":"#bar-chart","title":"Bar Chart"},{"url":"#radar-chart","title":"Radar Chart"},{"url":"#doughnut-and-pie-charts","title":"Doughnut and Pie Charts"},{"url":"#polar-area-chart","title":"Polar Area Chart"},{"url":"#bubble-chart","title":"Bubble Chart"},{"url":"#scatter-chart","title":"Scatter Chart"}]},{"url":"#api","title":"API","items":[{"url":"#cchart","title":"CChart"}]}]}}},"pageContext":{"id":"31ec89be-6f96-5890-a1af-fce16d07953a"}},
    "staticQueryHashes": ["4202924991"]}