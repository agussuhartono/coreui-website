{
    "componentChunkName": "component---src-templates-docs-tsx",
    "path": "/components/carousel/",
    "result": {"data":{"site":{"siteMetadata":{"title":"CoreUI for React.js"}},"mdx":{"id":"8b5ffbfc-85e2-59d0-b9a6-1bb40c59cc47","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React Carousel Component\",\n  \"name\": \"Carousel\",\n  \"description\": \"React carousel is a slideshow component for cycling through elements—images or slides of text—like a carousel.\",\n  \"menu\": \"Components\",\n  \"route\": \"/components/carousel\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"how-it-works\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"How it works\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#how-it-works\",\n    \"aria-label\": \"how it works permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"The React carousel is a slideshow for cycling within a group of content. It runs with a group of images, text, or html elements. It also incorporates support for previous/next buttons.\"), mdx(\"p\", null, \"In browsers where the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.w3.org/TR/page-visibility/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"Page Visibility API\"), \" is supported, the carousel will avoid sliding when the webpage is not visible to the user (such as when the browser tab is inactive, the browser window is minimized, etc.).\"), mdx(\"h2\", {\n    \"id\": \"example\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Example\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#example\",\n    \"aria-label\": \"example permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Carousels don't automatically normalize slide dimensions. As such, you may want to use extra utilities or custom methods to properly size content. While carousels support previous/next controls and indicators, they're not explicitly expected. Add and customize as you see fit.\"), mdx(\"h3\", {\n    \"id\": \"slides-only\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Slides only\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#slides-only\",\n    \"aria-label\": \"slides only permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CCarousel, {\n    mdxType: \"CCarousel\"\n  }, mdx(CCarouselItem, {\n    mdxType: \"CCarouselItem\"\n  }, mdx(CImage, {\n    className: \"d-block w-100\",\n    src: ReactImg,\n    alt: \"slide 1\",\n    mdxType: \"CImage\"\n  })), mdx(CCarouselItem, {\n    mdxType: \"CCarouselItem\"\n  }, mdx(CImage, {\n    className: \"d-block w-100\",\n    src: VueImg,\n    alt: \"slide 2\",\n    mdxType: \"CImage\"\n  })), mdx(CCarouselItem, {\n    mdxType: \"CCarouselItem\"\n  }, mdx(CImage, {\n    className: \"d-block w-100\",\n    src: AngularImg,\n    alt: \"slide 3\",\n    mdxType: \"CImage\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CCarousel>\\n  <CCarouselItem>\\n    <CImage className=\\\"d-block w-100\\\" src=\\\"/images/react.jpg\\\" alt=\\\"slide 1\\\" />\\n  </CCarouselItem>\\n  <CCarouselItem>\\n    <CImage className=\\\"d-block w-100\\\" src=\\\"/images/vue.jpg\\\" alt=\\\"slide 2\\\" />\\n  </CCarouselItem>\\n  <CCarouselItem>\\n    <CImage className=\\\"d-block w-100\\\" src=\\\"/images/angular.jpg\\\" alt=\\\"slide 3\\\" />\\n  </CCarouselItem>\\n</CCarousel>\\n\")), mdx(\"h3\", {\n    \"id\": \"with-controls\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"With controls\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#with-controls\",\n    \"aria-label\": \"with controls permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Adding in the previous and next controls by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"controls\"), \" property.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CCarousel, {\n    controls: true,\n    mdxType: \"CCarousel\"\n  }, mdx(CCarouselItem, {\n    mdxType: \"CCarouselItem\"\n  }, mdx(CImage, {\n    className: \"d-block w-100\",\n    src: ReactImg,\n    alt: \"slide 1\",\n    mdxType: \"CImage\"\n  })), mdx(CCarouselItem, {\n    mdxType: \"CCarouselItem\"\n  }, mdx(CImage, {\n    className: \"d-block w-100\",\n    src: VueImg,\n    alt: \"slide 2\",\n    mdxType: \"CImage\"\n  })), mdx(CCarouselItem, {\n    mdxType: \"CCarouselItem\"\n  }, mdx(CImage, {\n    className: \"d-block w-100\",\n    src: AngularImg,\n    alt: \"slide 3\",\n    mdxType: \"CImage\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CCarousel controls>\\n  <CCarouselItem>\\n    <CImage className=\\\"d-block w-100\\\" src=\\\"/images/react.jpg\\\" alt=\\\"slide 1\\\" />\\n  </CCarouselItem>\\n  <CCarouselItem>\\n    <CImage className=\\\"d-block w-100\\\" src=\\\"/images/vue.jpg\\\" alt=\\\"slide 2\\\" />\\n  </CCarouselItem>\\n  <CCarouselItem>\\n    <CImage className=\\\"d-block w-100\\\" src=\\\"/images/angular.jpg\\\" alt=\\\"slide 3\\\" />\\n  </CCarouselItem>\\n</CCarousel>\\n\")), mdx(\"h3\", {\n    \"id\": \"with-indicators\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"With indicators\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#with-indicators\",\n    \"aria-label\": \"with indicators permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"You can attach the indicators to the carousel, lengthwise the controls, too.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CCarousel, {\n    controls: true,\n    indicators: true,\n    mdxType: \"CCarousel\"\n  }, mdx(CCarouselItem, {\n    mdxType: \"CCarouselItem\"\n  }, mdx(CImage, {\n    className: \"d-block w-100\",\n    src: ReactImg,\n    alt: \"slide 1\",\n    mdxType: \"CImage\"\n  })), mdx(CCarouselItem, {\n    mdxType: \"CCarouselItem\"\n  }, mdx(CImage, {\n    className: \"d-block w-100\",\n    src: VueImg,\n    alt: \"slide 2\",\n    mdxType: \"CImage\"\n  })), mdx(CCarouselItem, {\n    mdxType: \"CCarouselItem\"\n  }, mdx(CImage, {\n    className: \"d-block w-100\",\n    src: AngularImg,\n    alt: \"slide 3\",\n    mdxType: \"CImage\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CCarousel controls indicators>\\n  <CCarouselItem>\\n    <CImage className=\\\"d-block w-100\\\" src=\\\"/images/react.jpg\\\" alt=\\\"slide 1\\\" />\\n  </CCarouselItem>\\n  <CCarouselItem>\\n    <CImage className=\\\"d-block w-100\\\" src=\\\"/images/vue.jpg\\\" alt=\\\"slide 2\\\" />\\n  </CCarouselItem>\\n  <CCarouselItem>\\n    <CImage className=\\\"d-block w-100\\\" src=\\\"/images/angular.jpg\\\" alt=\\\"slide 3\\\" />\\n  </CCarouselItem>\\n</CCarousel>\\n\")), mdx(\"h3\", {\n    \"id\": \"with-captions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"With captions\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#with-captions\",\n    \"aria-label\": \"with captions permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"You can add captions to slides with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CCarouselCaption>\"), \" element within any \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CCarouselItem>\"), \". They can be immediately hidden on smaller viewports, as shown below, with optional \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://coreui.io/4.0/utilities/display\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"display utilities\"), \". We hide them with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".d-none\"), \" and draw them back on medium-sized devices with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".d-md-block\"), \".\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CCarousel, {\n    controls: true,\n    indicators: true,\n    mdxType: \"CCarousel\"\n  }, mdx(CCarouselItem, {\n    mdxType: \"CCarouselItem\"\n  }, mdx(CImage, {\n    className: \"d-block w-100\",\n    src: ReactImg,\n    alt: \"slide 1\",\n    mdxType: \"CImage\"\n  }), mdx(CCarouselCaption, {\n    className: \"d-none d-md-block\",\n    mdxType: \"CCarouselCaption\"\n  }, mdx(\"h5\", null, \"First slide label\"), mdx(\"p\", null, \"Some representative placeholder content for the first slide.\"))), mdx(CCarouselItem, {\n    mdxType: \"CCarouselItem\"\n  }, mdx(CImage, {\n    className: \"d-block w-100\",\n    src: VueImg,\n    alt: \"slide 2\",\n    mdxType: \"CImage\"\n  }), mdx(CCarouselCaption, {\n    className: \"d-none d-md-block\",\n    mdxType: \"CCarouselCaption\"\n  }, mdx(\"h5\", null, \"Second slide label\"), mdx(\"p\", null, \"Some representative placeholder content for the first slide.\"))), mdx(CCarouselItem, {\n    mdxType: \"CCarouselItem\"\n  }, mdx(CImage, {\n    className: \"d-block w-100\",\n    src: AngularImg,\n    alt: \"slide 3\",\n    mdxType: \"CImage\"\n  }), mdx(CCarouselCaption, {\n    className: \"d-none d-md-block\",\n    mdxType: \"CCarouselCaption\"\n  }, mdx(\"h5\", null, \"Third slide label\"), mdx(\"p\", null, \"Some representative placeholder content for the first slide.\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CCarousel controls indicators>\\n  <CCarouselItem>\\n    <CImage className=\\\"d-block w-100\\\" src=\\\"/images/react.jpg\\\" alt=\\\"slide 1\\\" />\\n    <CCarouselCaption className=\\\"d-none d-md-block\\\">\\n      <h5>First slide label</h5>\\n      <p>Some representative placeholder content for the first slide.</p>\\n    </CCarouselCaption>\\n  </CCarouselItem>\\n  <CCarouselItem>\\n    <CImage className=\\\"d-block w-100\\\" src=\\\"/images/vue.jpg\\\" alt=\\\"slide 2\\\" />\\n    <CCarouselCaption className=\\\"d-none d-md-block\\\">\\n      <h5>Second slide label</h5>\\n      <p>Some representative placeholder content for the first slide.</p>\\n    </CCarouselCaption>\\n  </CCarouselItem>\\n  <CCarouselItem>\\n    <CImage className=\\\"d-block w-100\\\" src=\\\"/images/angular.jpg\\\" alt=\\\"slide 3\\\" />\\n    <CCarouselCaption className=\\\"d-none d-md-block\\\">\\n      <h5>Third slide label</h5>\\n      <p>Some representative placeholder content for the first slide.</p>\\n    </CCarouselCaption>\\n  </CCarouselItem>\\n</CCarousel>\\n\")), mdx(\"h3\", {\n    \"id\": \"crossfade\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Crossfade\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#crossfade\",\n    \"aria-label\": \"crossfade permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"transition=\\\"crossfade\\\"\"), \" to your carousel to animate slides with a fade transition instead of a slide.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CCarousel, {\n    controls: true,\n    transition: \"crossfade\",\n    mdxType: \"CCarousel\"\n  }, mdx(CCarouselItem, {\n    mdxType: \"CCarouselItem\"\n  }, mdx(CImage, {\n    className: \"d-block w-100\",\n    src: ReactImg,\n    alt: \"slide 1\",\n    mdxType: \"CImage\"\n  })), mdx(CCarouselItem, {\n    mdxType: \"CCarouselItem\"\n  }, mdx(CImage, {\n    className: \"d-block w-100\",\n    src: VueImg,\n    alt: \"slide 2\",\n    mdxType: \"CImage\"\n  })), mdx(CCarouselItem, {\n    mdxType: \"CCarouselItem\"\n  }, mdx(CImage, {\n    className: \"d-block w-100\",\n    src: AngularImg,\n    alt: \"slide 3\",\n    mdxType: \"CImage\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CCarousel controls transition=\\\"crossfade\\\">\\n  <CCarouselItem>\\n    <CImage className=\\\"d-block w-100\\\" src=\\\"/images/react.jpg\\\" alt=\\\"slide 1\\\" />\\n  </CCarouselItem>\\n  <CCarouselItem>\\n    <CImage className=\\\"d-block w-100\\\" src=\\\"/images/vue.jpg\\\" alt=\\\"slide 2\\\" />\\n  </CCarouselItem>\\n  <CCarouselItem>\\n    <CImage className=\\\"d-block w-100\\\" src=\\\"/images/angular.jpg\\\" alt=\\\"slide 3\\\" />\\n  </CCarouselItem>\\n</CCarousel>\\n\")), mdx(\"h2\", {\n    \"id\": \"dark-variant\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Dark variant\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#dark-variant\",\n    \"aria-label\": \"dark variant permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dark\"), \" property to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CCarousel\"), \" for darker controls, indicators, and captions. Controls have been inverted from their default white fill with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"filter\"), \" CSS property. Captions and controls have additional Sass variables that customize the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"background-color\"), \".\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CCarousel, {\n    controls: true,\n    indicators: true,\n    dark: true,\n    mdxType: \"CCarousel\"\n  }, mdx(CCarouselItem, {\n    mdxType: \"CCarouselItem\"\n  }, mdx(CImage, {\n    className: \"d-block w-100\",\n    src: ReactImg,\n    alt: \"slide 1\",\n    mdxType: \"CImage\"\n  }), mdx(CCarouselCaption, {\n    className: \"d-none d-md-block\",\n    mdxType: \"CCarouselCaption\"\n  }, mdx(\"h5\", null, \"First slide label\"), mdx(\"p\", null, \"Some representative placeholder content for the first slide.\"))), mdx(CCarouselItem, {\n    mdxType: \"CCarouselItem\"\n  }, mdx(CImage, {\n    className: \"d-block w-100\",\n    src: VueImg,\n    alt: \"slide 2\",\n    mdxType: \"CImage\"\n  }), mdx(CCarouselCaption, {\n    className: \"d-none d-md-block\",\n    mdxType: \"CCarouselCaption\"\n  }, mdx(\"h5\", null, \"Second slide label\"), mdx(\"p\", null, \"Some representative placeholder content for the first slide.\"))), mdx(CCarouselItem, {\n    mdxType: \"CCarouselItem\"\n  }, mdx(CImage, {\n    className: \"d-block w-100\",\n    src: AngularImg,\n    alt: \"slide 3\",\n    mdxType: \"CImage\"\n  }), mdx(CCarouselCaption, {\n    className: \"d-none d-md-block\",\n    mdxType: \"CCarouselCaption\"\n  }, mdx(\"h5\", null, \"Third slide label\"), mdx(\"p\", null, \"Some representative placeholder content for the first slide.\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CCarousel controls indicators dark>\\n  <CCarouselItem>\\n    <CImage className=\\\"d-block w-100\\\" src=\\\"/images/react.jpg\\\" alt=\\\"slide 1\\\" />\\n    <CCarouselCaption className=\\\"d-none d-md-block\\\">\\n      <h5>First slide label</h5>\\n      <p>Some representative placeholder content for the first slide.</p>\\n    </CCarouselCaption>\\n  </CCarouselItem>\\n  <CCarouselItem>\\n    <CImage className=\\\"d-block w-100\\\" src=\\\"/images/vue.jpg\\\" alt=\\\"slide 2\\\" />\\n    <CCarouselCaption className=\\\"d-none d-md-block\\\">\\n      <h5>Second slide label</h5>\\n      <p>Some representative placeholder content for the first slide.</p>\\n    </CCarouselCaption>\\n  </CCarouselItem>\\n  <CCarouselItem>\\n    <CImage className=\\\"d-block w-100\\\" src=\\\"/images/angular.jpg\\\" alt=\\\"slide 3\\\" />\\n    <CCarouselCaption className=\\\"d-none d-md-block\\\">\\n      <h5>Third slide label</h5>\\n      <p>Some representative placeholder content for the first slide.</p>\\n    </CCarouselCaption>\\n  </CCarouselItem>\\n</CCarousel>\\n\")), mdx(\"h2\", {\n    \"id\": \"api\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"API\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#api\",\n    \"aria-label\": \"api permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"ccarousel\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CCarousel\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#ccarousel\",\n    \"aria-label\": \"ccarousel permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CCarousel } from '@coreui/react'\\n// or\\nimport CCarousel from '@coreui/react/src/components/carousel/CCarousel'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"activeIndex\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"index of the active item.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the base component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"controls\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Adding in the previous and next controls.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"dark\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Add darker controls, indicators, and captions.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"indicators\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Adding indicators at the bottom of the carousel for each item.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"interval\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The amount of time to delay between automatically cycling an item. If false, carousel will not automatically cycle.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"5000\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"onSlid\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Callback fired when a slide transition end.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"(active: number, direction: string) => void\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"onSlide\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Callback fired when a slide transition starts.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"(active: number, direction: string) => void\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"pause\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"If set to 'hover', pauses the cycling of the carousel on mouseenter and resumes the cycling of the carousel on mouseleave. If set to false, hovering over the carousel won't pause it.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'hover'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"hover\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"transition\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set type of the transition.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'slide'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'crossfade'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"wrap\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set whether the carousel should cycle continuously or have hard stops.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"true\"))))), mdx(\"h3\", {\n    \"id\": \"ccarouselcaption\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CCarouselCaption\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#ccarouselcaption\",\n    \"aria-label\": \"ccarouselcaption permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CCarouselCaption } from '@coreui/react'\\n// or\\nimport CCarouselCaption from '@coreui/react/src/components/carousel/CCarouselCaption'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the base component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))), mdx(\"h3\", {\n    \"id\": \"ccarouselitem\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CCarouselItem\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#ccarouselitem\",\n    \"aria-label\": \"ccarouselitem permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CCarouselItem } from '@coreui/react'\\n// or\\nimport CCarouselItem from '@coreui/react/src/components/carousel/CCarouselItem'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the base component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"interval\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The amount of time to delay between automatically cycling an item.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"false\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"React Carousel Component","description":"React carousel is a slideshow component for cycling through elements—images or slides of text—like a carousel.","route":"/components/carousel"},"tableOfContents":{"items":[{"url":"#how-it-works","title":"How it works"},{"url":"#example","title":"Example","items":[{"url":"#slides-only","title":"Slides only"},{"url":"#with-controls","title":"With controls"},{"url":"#with-indicators","title":"With indicators"},{"url":"#with-captions","title":"With captions"},{"url":"#crossfade","title":"Crossfade"}]},{"url":"#dark-variant","title":"Dark variant"},{"url":"#api","title":"API","items":[{"url":"#ccarousel","title":"CCarousel"},{"url":"#ccarouselcaption","title":"CCarouselCaption"},{"url":"#ccarouselitem","title":"CCarouselItem"}]}]}}},"pageContext":{"id":"8b5ffbfc-85e2-59d0-b9a6-1bb40c59cc47"}},
    "staticQueryHashes": ["4202924991"]}