{"componentChunkName":"component---src-templates-docs-tsx","path":"/components/table/","result":{"data":{"site":{"siteMetadata":{"title":"CoreUI for React.js"}},"mdx":{"id":"1f32fe7a-a1ac-576b-b7a2-7400af6fec35","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar TableExample = function TableExample() {\n  var columns = [{\n    key: 'id',\n    label: '#',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'class',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_1',\n    label: 'Heading',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_2',\n    label: 'Heading',\n    _props: {\n      scope: 'col'\n    }\n  }];\n  var items = [{\n    id: 1,\n    \"class\": 'Mark',\n    heading_1: 'Otto',\n    heading_2: '@mdo',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      }\n    }\n  }, {\n    id: 2,\n    \"class\": 'Jacob',\n    heading_1: 'Thornton',\n    heading_2: '@fat',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      }\n    }\n  }, {\n    id: 3,\n    \"class\": 'Larry the Bird',\n    heading_2: '@twitter',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      },\n      \"class\": {\n        colSpan: 2\n      }\n    }\n  }];\n  return mdx(CTable, {\n    columns: columns,\n    items: items,\n    mdxType: \"CTable\"\n  });\n};\n\nvar VariantExample = function VariantExample() {\n  var columns = [{\n    key: 'class',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_1',\n    label: 'Heading',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_2',\n    label: 'Heading',\n    _props: {\n      scope: 'col'\n    }\n  }];\n  var items = [{\n    \"class\": 'Default',\n    heading_1: 'Cell',\n    heading_2: 'Cell',\n    _cellProps: {\n      \"class\": {\n        scope: 'row'\n      }\n    }\n  }, {\n    \"class\": 'Primary',\n    heading_1: 'Cell',\n    heading_2: 'Cell',\n    _cellProps: {\n      \"class\": {\n        scope: 'row'\n      }\n    },\n    _props: {\n      color: 'primary'\n    }\n  }, {\n    \"class\": 'Secondary',\n    heading_1: 'Cell',\n    heading_2: 'Cell',\n    _cellProps: {\n      \"class\": {\n        scope: 'row'\n      }\n    },\n    _props: {\n      color: 'secondary'\n    }\n  }, {\n    \"class\": 'Success',\n    heading_1: 'Cell',\n    heading_2: 'Cell',\n    _cellProps: {\n      \"class\": {\n        scope: 'row'\n      }\n    },\n    _props: {\n      color: 'success'\n    }\n  }, {\n    \"class\": 'Danger',\n    heading_1: 'Cell',\n    heading_2: 'Cell',\n    _cellProps: {\n      \"class\": {\n        scope: 'row'\n      }\n    },\n    _props: {\n      color: 'danger'\n    }\n  }, {\n    \"class\": 'Warning',\n    heading_1: 'Cell',\n    heading_2: 'Cell',\n    _cellProps: {\n      \"class\": {\n        scope: 'row'\n      }\n    },\n    _props: {\n      color: 'warning'\n    }\n  }, {\n    \"class\": 'Info',\n    heading_1: 'Cell',\n    heading_2: 'Cell',\n    _cellProps: {\n      \"class\": {\n        scope: 'row'\n      }\n    },\n    _props: {\n      color: 'info'\n    }\n  }, {\n    \"class\": 'Light',\n    heading_1: 'Cell',\n    heading_2: 'Cell',\n    _cellProps: {\n      \"class\": {\n        scope: 'row'\n      }\n    },\n    _props: {\n      color: 'light'\n    }\n  }, {\n    \"class\": 'Dark',\n    heading_1: 'Cell',\n    heading_2: 'Cell',\n    _cellProps: {\n      \"class\": {\n        scope: 'row'\n      }\n    },\n    _props: {\n      color: 'dark'\n    }\n  }];\n  return mdx(CTable, {\n    columns: columns,\n    items: items,\n    mdxType: \"CTable\"\n  });\n};\n\nvar ActiveTableExample = function ActiveTableExample() {\n  var columns = [{\n    key: 'id',\n    label: '#',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'class',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_1',\n    label: 'Heading',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_2',\n    label: 'Heading',\n    _props: {\n      scope: 'col'\n    }\n  }];\n  var items = [{\n    id: 1,\n    \"class\": 'Mark',\n    heading_1: 'Otto',\n    heading_2: '@mdo',\n    _props: {\n      active: true\n    },\n    _cellProps: {\n      id: {\n        scope: 'row'\n      }\n    }\n  }, {\n    id: 2,\n    \"class\": 'Jacob',\n    heading_1: 'Thornton',\n    heading_2: '@fat',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      }\n    }\n  }, {\n    id: 3,\n    \"class\": 'Larry the Bird',\n    heading_2: '@twitter',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      },\n      \"class\": {\n        active: true,\n        colSpan: 2\n      }\n    }\n  }];\n  return mdx(CTable, {\n    columns: columns,\n    items: items,\n    mdxType: \"CTable\"\n  });\n};\n\nvar ActiveTableDarkExample = function ActiveTableDarkExample() {\n  var columns = [{\n    key: 'id',\n    label: '#',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'class',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_1',\n    label: 'Heading',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_2',\n    label: 'Heading',\n    _props: {\n      scope: 'col'\n    }\n  }];\n  var items = [{\n    id: 1,\n    \"class\": 'Mark',\n    heading_1: 'Otto',\n    heading_2: '@mdo',\n    _props: {\n      active: true\n    },\n    _cellProps: {\n      id: {\n        scope: 'row'\n      }\n    }\n  }, {\n    id: 2,\n    \"class\": 'Jacob',\n    heading_1: 'Thornton',\n    heading_2: '@fat',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      }\n    }\n  }, {\n    id: 3,\n    \"class\": 'Larry the Bird',\n    heading_2: '@twitter',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      },\n      \"class\": {\n        active: true,\n        colSpan: 2\n      }\n    }\n  }];\n  return mdx(CTable, {\n    color: \"dark\",\n    columns: columns,\n    items: items,\n    mdxType: \"CTable\"\n  });\n};\n\nvar VerticalAlignmentExample = function VerticalAlignmentExample() {\n  var columns = [{\n    key: 'heading_1',\n    _props: {\n      className: 'w-25',\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_2',\n    _props: {\n      className: 'w-25',\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_3',\n    _props: {\n      className: 'w-25',\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_4',\n    _props: {\n      className: 'w-25',\n      scope: 'col'\n    }\n  }];\n  var items = [{\n    heading_1: mdx(React.Fragment, null, \"This cell inherits \", mdx(\"code\", null, \"vertical-align: middle;\"), \" from the table\"),\n    heading_2: mdx(React.Fragment, null, \"This cell inherits \", mdx(\"code\", null, \"vertical-align: middle;\"), \" from the table\"),\n    heading_3: mdx(React.Fragment, null, \"This cell inherits \", mdx(\"code\", null, \"vertical-align: middle;\"), \" from the table\"),\n    heading_4: 'This here is some placeholder text, intended to take up quite a bit of vertical space, to demonstrate how the vertical alignment works in the preceding cells.'\n  }, {\n    heading_1: mdx(React.Fragment, null, \"This cell inherits \", mdx(\"code\", null, \"vertical-align: bottom;\"), \" from the table row\"),\n    heading_2: mdx(React.Fragment, null, \"This cell inherits \", mdx(\"code\", null, \"vertical-align: bottom;\"), \" from the table row\"),\n    heading_3: mdx(React.Fragment, null, \"This cell inherits \", mdx(\"code\", null, \"vertical-align: bottom;\"), \" from the table row\"),\n    heading_4: 'This here is some placeholder text, intended to take up quite a bit of vertical space, to demonstrate how the vertical alignment works in the preceding cells.',\n    _props: {\n      align: 'bottom'\n    }\n  }, {\n    heading_1: mdx(React.Fragment, null, \"This cell inherits \", mdx(\"code\", null, \"vertical-align: middle;\"), \" from the table\"),\n    heading_2: mdx(React.Fragment, null, \"This cell inherits \", mdx(\"code\", null, \"vertical-align: middle;\"), \" from the table\"),\n    heading_3: 'This cell is aligned to the top.',\n    heading_4: 'This here is some placeholder text, intended to take up quite a bit of vertical space, to demonstrate how the vertical alignment works in the preceding cells.',\n    _cellProps: {\n      heading_3: {\n        align: 'top'\n      }\n    }\n  }];\n  return mdx(CTable, {\n    align: \"middle\",\n    columns: columns,\n    items: items,\n    mdxType: \"CTable\"\n  });\n};\n\nvar TableHeadExample = function TableHeadExample() {\n  var columns = [{\n    key: 'id',\n    label: '#',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'class',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_1',\n    label: 'Heading',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_2',\n    label: 'Heading',\n    _props: {\n      scope: 'col'\n    }\n  }];\n  var items = [{\n    id: 1,\n    \"class\": 'Mark',\n    heading_1: 'Otto',\n    heading_2: '@mdo',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      }\n    }\n  }, {\n    id: 2,\n    \"class\": 'Jacob',\n    heading_1: 'Thornton',\n    heading_2: '@fat',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      }\n    }\n  }, {\n    id: 3,\n    \"class\": 'Larry the Bird',\n    heading_2: '@twitter',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      },\n      \"class\": {\n        colSpan: 2\n      }\n    }\n  }];\n  return mdx(CTable, {\n    columns: columns,\n    items: items,\n    tableHeadProps: {\n      color: 'light'\n    },\n    mdxType: \"CTable\"\n  });\n};\n\nvar TableFoodExample = function TableFoodExample() {\n  var columns = [{\n    key: 'id',\n    label: '#',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'class',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_1',\n    label: 'Heading',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_2',\n    label: 'Heading',\n    _props: {\n      scope: 'col'\n    }\n  }];\n  var footer = ['Footer', 'Footer', 'Footer', 'Footer'];\n  var items = [{\n    id: 1,\n    \"class\": 'Mark',\n    heading_1: 'Otto',\n    heading_2: '@mdo',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      }\n    }\n  }, {\n    id: 2,\n    \"class\": 'Jacob',\n    heading_1: 'Thornton',\n    heading_2: '@fat',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      }\n    }\n  }, {\n    id: 3,\n    \"class\": 'Larry the Bird',\n    heading_2: '@twitter',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      },\n      \"class\": {\n        colSpan: 2\n      }\n    }\n  }];\n  return mdx(CTable, {\n    columns: columns,\n    footer: footer,\n    items: items,\n    tableHeadProps: {\n      color: 'light'\n    },\n    mdxType: \"CTable\"\n  });\n};\n\nvar TableCaptionExample = function TableCaptionExample() {\n  var columns = [{\n    key: 'id',\n    label: '#',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'class',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_1',\n    label: 'Heading',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_2',\n    label: 'Heading',\n    _props: {\n      scope: 'col'\n    }\n  }];\n  var footer = ['Footer', 'Footer', 'Footer', 'Footer'];\n  var items = [{\n    id: 1,\n    \"class\": 'Mark',\n    heading_1: 'Otto',\n    heading_2: '@mdo',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      }\n    }\n  }, {\n    id: 2,\n    \"class\": 'Jacob',\n    heading_1: 'Thornton',\n    heading_2: '@fat',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      }\n    }\n  }, {\n    id: 3,\n    \"class\": 'Larry the Bird',\n    heading_2: '@twitter',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      },\n      \"class\": {\n        colSpan: 2\n      }\n    }\n  }];\n  return mdx(CTable, {\n    caption: \"List of users\",\n    columns: columns,\n    items: items,\n    mdxType: \"CTable\"\n  });\n};\n\nvar TableCaptionTopExample = function TableCaptionTopExample() {\n  var columns = [{\n    key: 'id',\n    label: '#',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'class',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_1',\n    label: 'Heading',\n    _props: {\n      scope: 'col'\n    }\n  }, {\n    key: 'heading_2',\n    label: 'Heading',\n    _props: {\n      scope: 'col'\n    }\n  }];\n  var footer = ['Footer', 'Footer', 'Footer', 'Footer'];\n  var items = [{\n    id: 1,\n    \"class\": 'Mark',\n    heading_1: 'Otto',\n    heading_2: '@mdo',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      }\n    }\n  }, {\n    id: 2,\n    \"class\": 'Jacob',\n    heading_1: 'Thornton',\n    heading_2: '@fat',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      }\n    }\n  }, {\n    id: 3,\n    \"class\": 'Larry the Bird',\n    heading_2: '@twitter',\n    _cellProps: {\n      id: {\n        scope: 'row'\n      },\n      \"class\": {\n        colSpan: 2\n      }\n    }\n  }];\n  return mdx(CTable, {\n    captionTop: \"List of users\",\n    columns: columns,\n    items: items,\n    mdxType: \"CTable\"\n  });\n};\n\nvar _frontmatter = {\n  \"title\": \"React Table Component\",\n  \"name\": \"Table\",\n  \"description\": \"Documentation and examples for opt-in styling of tables.\",\n  \"menu\": \"Components\",\n  \"route\": \"/components/table\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  TableExample: TableExample,\n  VariantExample: VariantExample,\n  ActiveTableExample: ActiveTableExample,\n  ActiveTableDarkExample: ActiveTableDarkExample,\n  VerticalAlignmentExample: VerticalAlignmentExample,\n  TableHeadExample: TableHeadExample,\n  TableFoodExample: TableFoodExample,\n  TableCaptionExample: TableCaptionExample,\n  TableCaptionTopExample: TableCaptionTopExample,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"how-to-use-react-table-component\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"How to use React Table Component\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#how-to-use-react-table-component\",\n    \"aria-label\": \"how to use react table component permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Due to the widespread use of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CTable>\"), \" elements across third-party widgets like calendars and date pickers, CoreUI's react tables are \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"opt-in\"), \". All table styles are not inherited in CoreUI, meaning any nested tables can be styled independent from the parent.\"), mdx(\"p\", null, \"Using the most basic table CoreUI, here's how \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CTable>\"), \"-based tables look in CoreUI.\"), mdx(Example, {\n    className: \"rounded\",\n    mdxType: \"Example\"\n  }, mdx(TableExample, {\n    mdxType: \"TableExample\"\n  })), mdx(\"p\", null, \"In version \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"4.3.0\"), \" we introduced a new way to create a table, similarly to our \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://coreui.io/react/docs/components/smart-table/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"Smart Table component\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const columns = [\\n  {\\n    key: 'id',\\n    label: '#',\\n    _props: { scope: 'col' },\\n  },\\n  {\\n    key: 'class',\\n    _props: { scope: 'col' },\\n  },\\n  {\\n    key: 'heading_1',\\n    label: 'Heading',\\n    _props: { scope: 'col' },\\n  },\\n  {\\n    key: 'heading_2',\\n    label: 'Heading',\\n    _props: { scope: 'col' },\\n  },\\n]\\nconst items = [\\n  {\\n    id: 1,\\n    class: 'Mark',\\n    heading_1: 'Otto',\\n    heading_2: '@mdo',\\n    _cellProps: { id: { scope: 'row' } },\\n  },\\n  {\\n    id: 2,\\n    class: 'Jacob',\\n    heading_1: 'Thornton',\\n    heading_2: '@fat',\\n    _cellProps: { id: { scope: 'row' } },\\n  },\\n  {\\n    id: 3,\\n    class: 'Larry the Bird',\\n    heading_2: '@twitter',\\n    _cellProps: { id: { scope: 'row' }, class: { colSpan: 2 } },\\n  },\\n]\\nreturn <CTable columns={columns} items={items} />\\n\")), mdx(\"p\", null, \"You can also put all table components together manually as hitherto.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable>\\n  <CTableHead>\\n    <CTableRow>\\n      <CTableHeaderCell scope=\\\"col\\\">#</CTableHeaderCell>\\n      <CTableHeaderCell scope=\\\"col\\\">Class</CTableHeaderCell>\\n      <CTableHeaderCell scope=\\\"col\\\">Heading</CTableHeaderCell>\\n      <CTableHeaderCell scope=\\\"col\\\">Heading</CTableHeaderCell>\\n    </CTableRow>\\n  </CTableHead>\\n  <CTableBody>\\n    <CTableRow>\\n      <CTableHeaderCell scope=\\\"row\\\">1</CTableHeaderCell>\\n      <CTableDataCell>Mark</CTableDataCell>\\n      <CTableDataCell>Otto</CTableDataCell>\\n      <CTableDataCell>@mdo</CTableDataCell>\\n    </CTableRow>\\n    <CTableRow>\\n      <CTableHeaderCell scope=\\\"row\\\">2</CTableHeaderCell>\\n      <CTableDataCell>Jacob</CTableDataCell>\\n      <CTableDataCell>Thornton</CTableDataCell>\\n      <CTableDataCell>@fat</CTableDataCell>\\n    </CTableRow>\\n    <CTableRow>\\n      <CTableHeaderCell scope=\\\"row\\\">3</CTableHeaderCell>\\n      <CTableDataCell colSpan=\\\"2\\\">Larry the Bird</CTableDataCell>\\n      <CTableDataCell>@twitter</CTableDataCell>\\n    </CTableRow>\\n  </CTableBody>\\n</CTable>\\n\")), mdx(\"p\", null, \"Both methods produce the same html code.\"), mdx(\"h2\", {\n    \"id\": \"variants\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Variants\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#variants\",\n    \"aria-label\": \"variants permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Use contextual classes to color react tables, table rows or individual cells.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(VariantExample, {\n    mdxType: \"VariantExample\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable>\\n  <CTableHead>\\n    <CTableRow>\\n      <CTableHeaderCell scope=\\\"col\\\">Class</CTableHeaderCell>\\n      <CTableHeaderCell scope=\\\"col\\\">Heading</CTableHeaderCell>\\n      <CTableHeaderCell scope=\\\"col\\\">Heading</CTableHeaderCell>\\n    </CTableRow>\\n  </CTableHead>\\n  <CTableBody>\\n    <CTableRow>\\n      <CTableHeaderCell scope=\\\"row\\\">Default</CTableHeaderCell>\\n      <CTableDataCell>Cell</CTableDataCell>\\n      <CTableDataCell>Cell</CTableDataCell>\\n    </CTableRow>\\n    <CTableRow color=\\\"primary\\\">\\n      <CTableHeaderCell scope=\\\"row\\\">Primary</CTableHeaderCell>\\n      <CTableDataCell>Cell</CTableDataCell>\\n      <CTableDataCell>Cell</CTableDataCell>\\n    </CTableRow>\\n    <CTableRow color=\\\"secondary\\\">\\n      <CTableHeaderCell scope=\\\"row\\\">Secondary</CTableHeaderCell>\\n      <CTableDataCell>Cell</CTableDataCell>\\n      <CTableDataCell>Cell</CTableDataCell>\\n    </CTableRow>\\n    <CTableRow color=\\\"success\\\">\\n      <CTableHeaderCell scope=\\\"row\\\">Success</CTableHeaderCell>\\n      <CTableDataCell>Cell</CTableDataCell>\\n      <CTableDataCell>Cell</CTableDataCell>\\n    </CTableRow>\\n    <CTableRow color=\\\"danger\\\">\\n      <CTableHeaderCell scope=\\\"row\\\">Danger</CTableHeaderCell>\\n      <CTableDataCell>Cell</CTableDataCell>\\n      <CTableDataCell>Cell</CTableDataCell>\\n    </CTableRow>\\n    <CTableRow color=\\\"warning\\\">\\n      <CTableHeaderCell scope=\\\"row\\\">Warning</CTableHeaderCell>\\n      <CTableDataCell>Cell</CTableDataCell>\\n      <CTableDataCell>Cell</CTableDataCell>\\n    </CTableRow>\\n    <CTableRow color=\\\"info\\\">\\n      <CTableHeaderCell scope=\\\"row\\\">Info</CTableHeaderCell>\\n      <CTableDataCell>Cell</CTableDataCell>\\n      <CTableDataCell>Cell</CTableDataCell>\\n    </CTableRow>\\n    <CTableRow color=\\\"light\\\">\\n      <CTableHeaderCell scope=\\\"row\\\">Light</CTableHeaderCell>\\n      <CTableDataCell>Cell</CTableDataCell>\\n      <CTableDataCell>Cell</CTableDataCell>\\n    </CTableRow>\\n    <CTableRow color=\\\"dark\\\">\\n      <CTableHeaderCell scope=\\\"row\\\">Dark</CTableHeaderCell>\\n      <CTableDataCell>Cell</CTableDataCell>\\n      <CTableDataCell>Cell</CTableDataCell>\\n    </CTableRow>\\n  </CTableBody>\\n</CTable>\\n\")), mdx(\"p\", null, \"Since version \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"4.3.0\"), \" also this way.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const columns = [\\n  { key: 'class', _props: { scope: 'col' } },\\n  { key: 'heading_1', label: 'Heading', _props: { scope: 'col' } },\\n  { key: 'heading_2', label: 'Heading', _props: { scope: 'col' } },\\n]\\nconst items = [\\n  {\\n    class: 'Default',\\n    heading_1: 'Cell',\\n    heading_2: 'Cell',\\n    _cellProps: { class: { scope: 'row' } },\\n  },\\n  {\\n    class: 'Primary',\\n    heading_1: 'Cell',\\n    heading_2: 'Cell',\\n    _cellProps: { class: { scope: 'row' } },\\n    _props: { color: 'primary' },\\n  },\\n  {\\n    class: 'Secondary',\\n    heading_1: 'Cell',\\n    heading_2: 'Cell',\\n    _cellProps: { class: { scope: 'row' } },\\n    _props: { color: 'secondary' },\\n  },\\n  {\\n    class: 'Success',\\n    heading_1: 'Cell',\\n    heading_2: 'Cell',\\n    _cellProps: { class: { scope: 'row' } },\\n    _props: { color: 'success' },\\n  },\\n  {\\n    class: 'Danger',\\n    heading_1: 'Cell',\\n    heading_2: 'Cell',\\n    _cellProps: { class: { scope: 'row' } },\\n    _props: { color: 'danger' },\\n  },\\n  {\\n    class: 'Warning',\\n    heading_1: 'Cell',\\n    heading_2: 'Cell',\\n    _cellProps: { class: { scope: 'row' } },\\n    _props: { color: 'warning' },\\n  },\\n  {\\n    class: 'Info',\\n    heading_1: 'Cell',\\n    heading_2: 'Cell',\\n    _cellProps: { class: { scope: 'row' } },\\n    _props: { color: 'info' },\\n  },\\n  {\\n    class: 'Light',\\n    heading_1: 'Cell',\\n    heading_2: 'Cell',\\n    _cellProps: { class: { scope: 'row' } },\\n    _props: { color: 'light' },\\n  },\\n  {\\n    class: 'Dark',\\n    heading_1: 'Cell',\\n    heading_2: 'Cell',\\n    _cellProps: { class: { scope: 'row' } },\\n    _props: { color: 'dark' },\\n  },\\n]\\nreturn <CTable columns={columns} items={items} />\\n\")), mdx(\"h2\", {\n    \"id\": \"accented-tables\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Accented tables\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#accented-tables\",\n    \"aria-label\": \"accented tables permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"striped-rows\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Striped rows\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#striped-rows\",\n    \"aria-label\": \"striped rows permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"striped\"), \" property to add zebra-striping to any react table row within the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CTableBody>\"), \".\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    striped: true,\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Class\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Mark\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Otto\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@mdo\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Jacob\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Thornton\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@fat\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    colSpan: \"2\",\n    mdxType: \"CTableDataCell\"\n  }, \"Larry the Bird\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@twitter\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable striped>\\n  ...\\n</CTable>\\n\")), mdx(\"h3\", {\n    \"id\": \"striped-columns\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Striped columns\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#striped-columns\",\n    \"aria-label\": \"striped columns permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stripedColumns\"), \" boolean property to add zebra-striping to any table column.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    stripedColumns: true,\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Class\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Mark\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Otto\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@mdo\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Jacob\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Thornton\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@fat\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    colSpan: \"2\",\n    mdxType: \"CTableDataCell\"\n  }, \"Larry the Bird\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@twitter\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable stripedColumns>\\n  ...\\n</CTable>\\n\")), mdx(\"p\", null, \"These classes can also be added to react table variants:\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    color: \"dark\",\n    striped: true,\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Class\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Mark\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Otto\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@mdo\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Jacob\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Thornton\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@fat\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    colSpan: \"2\",\n    mdxType: \"CTableDataCell\"\n  }, \"Larry the Bird\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@twitter\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable color=\\\"dark\\\" striped>\\n  ...\\n</CTable>\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    color: \"dark\",\n    stripedColumns: true,\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Class\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Mark\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Otto\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@mdo\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Jacob\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Thornton\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@fat\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    colSpan: \"2\",\n    mdxType: \"CTableDataCell\"\n  }, \"Larry the Bird\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@twitter\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable color=\\\"dark\\\" stripedColumns>\\n  ...\\n</CTable>\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    color: \"success\",\n    striped: true,\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Class\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Mark\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Otto\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@mdo\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Jacob\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Thornton\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@fat\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    colSpan: \"2\",\n    mdxType: \"CTableDataCell\"\n  }, \"Larry the Bird\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@twitter\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable color=\\\"success\\\" striped>\\n  ...\\n</CTable>\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    color: \"success\",\n    stripedColumns: true,\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Class\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Mark\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Otto\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@mdo\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Jacob\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Thornton\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@fat\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    colSpan: \"2\",\n    mdxType: \"CTableDataCell\"\n  }, \"Larry the Bird\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@twitter\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable color=\\\"success\\\" stripedColumns>\\n  ...\\n</CTable>\\n\")), mdx(\"h3\", {\n    \"id\": \"hoverable-rows\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Hoverable rows\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#hoverable-rows\",\n    \"aria-label\": \"hoverable rows permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hover\"), \" property to enable a hover state on react table rows within a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CTableBody>\"), \".\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    hover: true,\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Class\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Mark\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Otto\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@mdo\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Jacob\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Thornton\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@fat\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    colSpan: \"2\",\n    mdxType: \"CTableDataCell\"\n  }, \"Larry the Bird\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@twitter\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable hover>\\n  ...\\n</CTable>\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    color: \"dark\",\n    hover: true,\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Class\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Mark\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Otto\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@mdo\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Jacob\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Thornton\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@fat\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    colSpan: \"2\",\n    mdxType: \"CTableDataCell\"\n  }, \"Larry the Bird\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@twitter\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable color=\\\"dark\\\" hover>\\n  ...\\n</CTable>\\n\")), mdx(\"p\", null, \"These hoverable rows can also be combined with the striped variant:\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    striped: true,\n    hover: true,\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Class\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Mark\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Otto\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@mdo\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Jacob\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Thornton\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@fat\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    colSpan: \"2\",\n    mdxType: \"CTableDataCell\"\n  }, \"Larry the Bird\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@twitter\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable striped hover>\\n  ...\\n</CTable>\\n\")), mdx(\"h3\", {\n    \"id\": \"active-tables\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Active tables\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#active-tables\",\n    \"aria-label\": \"active tables permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Highlight a table row or cell by adding a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"active\"), \" property.\"), mdx(Example, {\n    className: \"rounded\",\n    mdxType: \"Example\"\n  }, mdx(ActiveTableExample, {\n    mdxType: \"ActiveTableExample\"\n  })), mdx(\"p\", null, \"As mentioned before since version \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"4.3.0\"), \" we have two ways to generate tables, also with custom properties for rows, and cells.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const columns = [\\n  {\\n    key: 'id',\\n    label: '#',\\n    _props: { scope: 'col' },\\n  },\\n  {\\n    key: 'class',\\n    _props: { scope: 'col' },\\n  },\\n  {\\n    key: 'heading_1',\\n    label: 'Heading',\\n    _props: { scope: 'col' },\\n  },\\n  {\\n    key: 'heading_2',\\n    label: 'Heading',\\n    _props: { scope: 'col' },\\n  },\\n]\\nconst items = [\\n  {\\n    id: 1,\\n    class: 'Mark',\\n    heading_1: 'Otto',\\n    heading_2: '@mdo',\\n    _props: { active: true },\\n    _cellProps: { id: { scope: 'row' } },\\n  },\\n  {\\n    id: 2,\\n    class: 'Jacob',\\n    heading_1: 'Thornton',\\n    heading_2: '@fat',\\n    _cellProps: { id: { scope: 'row' } },\\n  },\\n  {\\n    id: 3,\\n    class: 'Larry the Bird',\\n    heading_2: '@twitter',\\n    _cellProps: { id: { scope: 'row' }, class: { active: true, colSpan: 2 } },\\n  },\\n]\\nreturn <CTable columns={columns} items={items} />\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable>\\n  <CTableHead>\\n    <CTableRow>\\n      <CTableHeaderCell scope=\\\"col\\\">#</CTableHeaderCell>\\n      <CTableHeaderCell scope=\\\"col\\\">Class</CTableHeaderCell>\\n      <CTableHeaderCell scope=\\\"col\\\">Heading</CTableHeaderCell>\\n      <CTableHeaderCell scope=\\\"col\\\">Heading</CTableHeaderCell>\\n    </CTableRow>\\n  </CTableHead>\\n  <CTableBody>\\n    <CTableRow active>\\n      <CTableHeaderCell scope=\\\"row\\\">1</CTableHeaderCell>\\n      <CTableDataCell>Mark</CTableDataCell>\\n      <CTableDataCell>Otto</CTableDataCell>\\n      <CTableDataCell>@mdo</CTableDataCell>\\n    </CTableRow>\\n    <CTableRow>\\n      <CTableHeaderCell scope=\\\"row\\\">2</CTableHeaderCell>\\n      <CTableDataCell>Jacob</CTableDataCell>\\n      <CTableDataCell>Thornton</CTableDataCell>\\n      <CTableDataCell>@fat</CTableDataCell>\\n    </CTableRow>\\n    <CTableRow>\\n      <CTableHeaderCell scope=\\\"row\\\">3</CTableHeaderCell>\\n      <CTableDataCell colSpan=\\\"2\\\" active>\\n        Larry the Bird\\n      </CTableDataCell>\\n      <CTableDataCell>@twitter</CTableDataCell>\\n    </CTableRow>\\n  </CTableBody>\\n</CTable>\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(ActiveTableDarkExample, {\n    mdxType: \"ActiveTableDarkExample\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const columns = [\\n  {\\n    key: 'id',\\n    label: '#',\\n    _props: { scope: 'col' },\\n  },\\n  {\\n    key: 'class',\\n    _props: { scope: 'col' },\\n  },\\n  {\\n    key: 'heading_1',\\n    label: 'Heading',\\n    _props: { scope: 'col' },\\n  },\\n  {\\n    key: 'heading_2',\\n    label: 'Heading',\\n    _props: { scope: 'col' },\\n  },\\n]\\nconst items = [\\n  {\\n    id: 1,\\n    class: 'Mark',\\n    heading_1: 'Otto',\\n    heading_2: '@mdo',\\n    _props: { active: true },\\n    _cellProps: { id: { scope: 'row' } },\\n  },\\n  {\\n    id: 2,\\n    class: 'Jacob',\\n    heading_1: 'Thornton',\\n    heading_2: '@fat',\\n    _cellProps: { id: { scope: 'row' } },\\n  },\\n  {\\n    id: 3,\\n    class: 'Larry the Bird',\\n    heading_2: '@twitter',\\n    _cellProps: { id: { scope: 'row' }, class: { active: true, colSpan: 2 } },\\n  },\\n]\\nreturn <CTable color=\\\"dark\\\" columns={columns} items={items} />\\n\")), mdx(\"h2\", {\n    \"id\": \"table-borders\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Table borders\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#table-borders\",\n    \"aria-label\": \"table borders permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"bordered-tables\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Bordered tables\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#bordered-tables\",\n    \"aria-label\": \"bordered tables permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bordered\"), \" property for borders on all sides of the table and cells.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    bordered: true,\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Class\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Mark\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Otto\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@mdo\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Jacob\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Thornton\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@fat\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    colSpan: \"2\",\n    mdxType: \"CTableDataCell\"\n  }, \"Larry the Bird\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@twitter\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable bordered>\\n  ...\\n</CTable>\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://coreui.io/docs/utilities/borders#border-color\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"Border color utilities\"), \" can be added to change colors:\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    bordered: true,\n    borderColor: \"primary\",\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Class\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Mark\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Otto\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@mdo\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Jacob\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Thornton\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@fat\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    colSpan: \"2\",\n    mdxType: \"CTableDataCell\"\n  }, \"Larry the Bird\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@twitter\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable bordered borderColor=\\\"primary\\\">\\n  ...\\n</CTable>\\n\")), mdx(\"h3\", {\n    \"id\": \"tables-without-borders\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Tables without borders\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#tables-without-borders\",\n    \"aria-label\": \"tables without borders permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"borderless\"), \" property for a react table without borders.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    borderless: true,\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Class\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Mark\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Otto\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@mdo\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Jacob\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Thornton\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@fat\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    colSpan: \"2\",\n    mdxType: \"CTableDataCell\"\n  }, \"Larry the Bird\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@twitter\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable borderless>\\n  ...\\n</CTable>\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    color: \"dark\",\n    borderless: true,\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Class\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Mark\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Otto\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@mdo\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Jacob\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Thornton\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@fat\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    colSpan: \"2\",\n    mdxType: \"CTableDataCell\"\n  }, \"Larry the Bird\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@twitter\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable color=\\\"dark\\\" borderless>\\n  ...\\n</CTable>\\n\")), mdx(\"h2\", {\n    \"id\": \"small-tables\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Small tables\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#small-tables\",\n    \"aria-label\": \"small tables permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"small\"), \" property to make any \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CTable>\"), \" more compact by cutting all cell \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"padding\"), \" in half.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    small: true,\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Class\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Mark\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Otto\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@mdo\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Jacob\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Thornton\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@fat\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    colSpan: \"2\",\n    mdxType: \"CTableDataCell\"\n  }, \"Larry the Bird\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@twitter\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable small>\\n  ...\\n</CTable>\\n\")), mdx(\"h2\", {\n    \"id\": \"vertical-alignment\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Vertical alignment\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#vertical-alignment\",\n    \"aria-label\": \"vertical alignment permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Table cells of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CTableHead>\"), \" are always vertical aligned to the bottom. Table cells in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CTableBody>\"), \" inherit their alignment from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CTable>\"), \" and are aligned to the the top by default. Use the align property to re-align where needed.\"), mdx(Example, {\n    className: \"rounded\",\n    mdxType: \"Example\"\n  }, mdx(VerticalAlignmentExample, {\n    mdxType: \"VerticalAlignmentExample\"\n  })), mdx(\"p\", null, \"In version \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"4.3.0\"), \" we introduced a new way to create a table, similarly to our \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://coreui.io/react/docs/components/smart-table/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"Smart Table component\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const columns = [\\n  {\\n    key: 'heading_1',\\n    _props: { className: 'w-25', scope: 'col' },\\n  },\\n  {\\n    key: 'heading_2',\\n    _props: { className: 'w-25', scope: 'col' },\\n  },\\n  {\\n    key: 'heading_3',\\n    _props: { className: 'w-25', scope: 'col' },\\n  },\\n  {\\n    key: 'heading_4',\\n    _props: { className: 'w-25', scope: 'col' },\\n  },\\n]\\nconst items = [\\n  {\\n    heading_1: <>This cell inherits <code>vertical-align: middle;</code> from the table</>,\\n    heading_2: <>This cell inherits <code>vertical-align: middle;</code> from the table</>,\\n    heading_3: <>This cell inherits <code>vertical-align: middle;</code> from the table</>,\\n    heading_4: 'This here is some placeholder text, intended to take up quite a bit of vertical space, to demonstrate how the vertical alignment works in the preceding cells.',\\n  },\\n  {\\n    heading_1: <>This cell inherits <code>vertical-align: bottom;</code> from the table row</>,\\n    heading_2: <>This cell inherits <code>vertical-align: bottom;</code> from the table row</>,\\n    heading_3: <>This cell inherits <code>vertical-align: bottom;</code> from the table row</>,\\n    heading_4: 'This here is some placeholder text, intended to take up quite a bit of vertical space, to demonstrate how the vertical alignment works in the preceding cells.',\\n    _props: { align: 'bottom' }\\n  },\\n  {\\n    heading_1: <>This cell inherits <code>vertical-align: middle;</code> from the table</>,\\n    heading_2: <>This cell inherits <code>vertical-align: middle;</code> from the table</>,\\n    heading_3: 'This cell is aligned to the top.',\\n    heading_4: 'This here is some placeholder text, intended to take up quite a bit of vertical space, to demonstrate how the vertical alignment works in the preceding cells.',\\n      _cellProps: { heading_3: { align: 'top' }},\\n  },\\n]\\nreturn <CTable align=\\\"middle\\\" columns={columns} items={items} />\\n\")), mdx(\"p\", null, \"You can also put all table components together manually as hitherto.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable align=\\\"middle\\\" responsive>\\n  <CTableHead>\\n    <CTableRow>\\n      <CTableHeaderCell scope=\\\"col\\\" className=\\\"w-25\\\">\\n        Heading 1\\n      </CTableHeaderCell>\\n      <CTableHeaderCell scope=\\\"col\\\" className=\\\"w-25\\\">\\n        Heading 2\\n      </CTableHeaderCell>\\n      <CTableHeaderCell scope=\\\"col\\\" className=\\\"w-25\\\">\\n        Heading 3\\n      </CTableHeaderCell>\\n      <CTableHeaderCell scope=\\\"col\\\" className=\\\"w-25\\\">\\n        Heading 4\\n      </CTableHeaderCell>\\n    </CTableRow>\\n  </CTableHead>\\n  <CTableBody>\\n    <CTableRow>\\n      <CTableDataCell>\\n        This cell inherits <code>vertical-align: middle;</code> from the table\\n      </CTableDataCell>\\n      <CTableDataCell>\\n        This cell inherits <code>vertical-align: middle;</code> from the table\\n      </CTableDataCell>\\n      <CTableDataCell>\\n        This cell inherits <code>vertical-align: middle;</code> from the table\\n      </CTableDataCell>\\n      <CTableDataCell>\\n        This here is some placeholder text, intended to take up quite a bit of vertical space, to\\n        demonstrate how the vertical alignment works in the preceding cells.\\n      </CTableDataCell>\\n    </CTableRow>\\n    <CTableRow align=\\\"bottom\\\">\\n      <CTableDataCell>\\n        This cell inherits <code>vertical-align: bottom;</code> from the table row\\n      </CTableDataCell>\\n      <CTableDataCell>\\n        This cell inherits <code>vertical-align: bottom;</code> from the table row\\n      </CTableDataCell>\\n      <CTableDataCell>\\n        This cell inherits <code>vertical-align: bottom;</code> from the table row\\n      </CTableDataCell>\\n      <CTableDataCell>\\n        This here is some placeholder text, intended to take up quite a bit of vertical space, to\\n        demonstrate how the vertical alignment works in the preceding cells.\\n      </CTableDataCell>\\n    </CTableRow>\\n    <CTableRow>\\n      <CTableDataCell>\\n        This cell inherits <code>vertical-align: middle;</code> from the table\\n      </CTableDataCell>\\n      <CTableDataCell>\\n        This cell inherits <code>vertical-align: middle;</code> from the table\\n      </CTableDataCell>\\n      <CTableDataCell align=\\\"top\\\">This cell is aligned to the top.</CTableDataCell>\\n      <CTableDataCell>\\n        This here is some placeholder text, intended to take up quite a bit of vertical space, to\\n        demonstrate how the vertical alignment works in the preceding cells.\\n      </CTableDataCell>\\n    </CTableRow>\\n  </CTableBody>\\n</CTable>\\n\")), mdx(\"h2\", {\n    \"id\": \"nesting\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Nesting\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#nesting\",\n    \"aria-label\": \"nesting permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Border styles, active styles, and react table component variants are not inherited by nested tables.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    striped: true,\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Class\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Mark\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Otto\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@mdo\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    colSpan: \"4\",\n    mdxType: \"CTableHeaderCell\"\n  }, mdx(CTable, {\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Header\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Header\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Header\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"A\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"First\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Last\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"B\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"First\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Last\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"C\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"First\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Last\")))))), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    colSpan: \"2\",\n    mdxType: \"CTableDataCell\"\n  }, \"Larry the Bird\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@twitter\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable striped>\\n  <CTableHead>\\n    <CTableRow>\\n      <CTableHeaderCell scope=\\\"col\\\">#</CTableHeaderCell>\\n      <CTableHeaderCell scope=\\\"col\\\">Class</CTableHeaderCell>\\n      <CTableHeaderCell scope=\\\"col\\\">Heading</CTableHeaderCell>\\n      <CTableHeaderCell scope=\\\"col\\\">Heading</CTableHeaderCell>\\n    </CTableRow>\\n  </CTableHead>\\n  <CTableBody>\\n    <CTableRow>\\n      <CTableHeaderCell scope=\\\"row\\\">1</CTableHeaderCell>\\n      <CTableDataCell>Mark</CTableDataCell>\\n      <CTableDataCell>Otto</CTableDataCell>\\n      <CTableDataCell>@mdo</CTableDataCell>\\n    </CTableRow>\\n    <CTableRow>\\n      <CTableHeaderCell colSpan=\\\"4\\\">\\n        <CTable>\\n          <CTableHead>\\n            <CTableRow>\\n              <CTableHeaderCell scope=\\\"col\\\">Header</CTableHeaderCell>\\n              <CTableHeaderCell scope=\\\"col\\\">Header</CTableHeaderCell>\\n              <CTableHeaderCell scope=\\\"col\\\">Header</CTableHeaderCell>\\n            </CTableRow>\\n          </CTableHead>\\n          <CTableBody>\\n            <CTableRow>\\n              <CTableHeaderCell scope=\\\"row\\\">A</CTableHeaderCell>\\n              <CTableDataCell>First</CTableDataCell>\\n              <CTableDataCell>Last</CTableDataCell>\\n            </CTableRow>\\n            <CTableRow>\\n              <CTableHeaderCell scope=\\\"row\\\">B</CTableHeaderCell>\\n              <CTableDataCell>First</CTableDataCell>\\n              <CTableDataCell>Last</CTableDataCell>\\n            </CTableRow>\\n            <CTableRow>\\n              <CTableHeaderCell scope=\\\"row\\\">C</CTableHeaderCell>\\n              <CTableDataCell>First</CTableDataCell>\\n              <CTableDataCell>Last</CTableDataCell>\\n            </CTableRow>\\n          </CTableBody>\\n        </CTable>\\n      </CTableHeaderCell>\\n    </CTableRow>\\n    <CTableRow>\\n      <CTableHeaderCell scope=\\\"row\\\">3</CTableHeaderCell>\\n      <CTableDataCell colSpan=\\\"2\\\">Larry the Bird</CTableDataCell>\\n      <CTableDataCell>@twitter</CTableDataCell>\\n    </CTableRow>\\n  </CTableBody>\\n</CTable>\\n\")), mdx(\"h2\", {\n    \"id\": \"anatomy\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Anatomy\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#anatomy\",\n    \"aria-label\": \"anatomy permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"table-head\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Table head\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#table-head\",\n    \"aria-label\": \"table head permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Similar to tables and dark tables, use the modifier prop \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color=\\\"light\\\"\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color=\\\"dark\\\"\"), \" to make \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CTableHead>\"), \"s appear light or dark gray.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(TableHeadExample, {\n    mdxType: \"TableHeadExample\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable>\\n  <CTableHead color=\\\"light\\\">\\n    ...\\n  </CTableHead>\\n  <CTableBody>\\n    ...\\n  </CTableBody>\\n</CTable>\\n\")), mdx(\"p\", null, \"If you generate a table using the new method incorporated in version \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"4.3.0\"), \", you have to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tableHeadProps\"), \" property to pass properties to the table header component.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const columns = [...]\\nconst items = [...]\\n\\nreturn <CTable columns={columns} items={items} tableHeadProps={{ color: 'light' }} />\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    color: \"dark\",\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Class\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Mark\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Otto\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@mdo\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Jacob\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Thornton\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@fat\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    colSpan: \"2\",\n    mdxType: \"CTableDataCell\"\n  }, \"Larry the Bird\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"@twitter\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable>\\n  <CTableHead color=\\\"dark\\\">\\n    ...\\n  </CTableHead>\\n  <CTableBody>\\n    ...\\n  </CTableBody>\\n</CTable>\\n\")), mdx(\"p\", null, \"Starting from version \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"4.3.0\"), \" also this way.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const columns = [...]\\nconst items = [...]\\n\\nreturn <CTable columns={columns} items={items} tableHeadProps={{ color: 'light' }} />\\n\")), mdx(\"h3\", {\n    \"id\": \"table-foot\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Table foot\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#table-foot\",\n    \"aria-label\": \"table foot permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(TableFoodExample, {\n    mdxType: \"TableFoodExample\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable>\\n  <CTableHead color=\\\"light\\\">\\n    ...\\n  </CTableHead>\\n  <CTableBody>\\n    ...\\n  <CTableHead>\\n    <CTableRow>\\n      <CTableDataCell>Footer</CTableDataCell>\\n      <CTableDataCell>Footer</CTableDataCell>\\n      <CTableDataCell>Footer</CTableDataCell>\\n      <CTableDataCell>Footer</CTableDataCell>\\n    </CTableRow>\\n  </CTableHead>\\n</CTable>\\n\")), mdx(\"p\", null, \"Starting from version \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"4.3.0\"), \" also this way.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const columns = [...]\\nconst footer = [\\n  'Footer',\\n  'Footer',\\n  'Footer',\\n  'Footer',\\n]\\nconst items = [...]\\n\\nreturn <CTable columns={columns} footer={footer} items={items} tableHeadProps={{ color: 'light' }}/>\\n\")), mdx(\"h3\", {\n    \"id\": \"captions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Captions\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#captions\",\n    \"aria-label\": \"captions permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CTableCaption>\"), \" functions like a heading for a table. It helps users with screen readers to find a table and understand what it's about and decide if they want to read it.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(TableCaptionExample, {\n    mdxType: \"TableCaptionExample\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable>\\n  <CTableCaption>List of users</CTableCaption>\\n  <CTableHead>\\n    ...\\n  </CTableHead>\\n  <CTableBody>\\n    ...\\n  </CTableBody>\\n</CTable>\\n\")), mdx(\"p\", null, \"Starting from version \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"4.3.0\"), \" also this way.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const columns = [...]\\nconst items = [...]\\n\\nreturn <CTable caption=\\\"List of users\\\" columns={columns} items={items} />\\n\")), mdx(\"p\", null, \"You can also put the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CTableCaption>\"), \" on the top of the table with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"caption=\\\"top\\\"\"), \".\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(TableCaptionTopExample, {\n    mdxType: \"TableCaptionTopExample\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable caption=\\\"top\\\">\\n  <CTableCaption>List of users</CTableCaption>\\n  <CTableHead>\\n    ...\\n  </CTableHead>\\n  <CTableBody>\\n    ...\\n  </CTableBody>\\n</CTable>\\n\")), mdx(\"p\", null, \"Since version \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"4.3.0\"), \" also this way.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const columns = [...]\\nconst items = [...]\\n\\nreturn <CTable captionTop=\\\"List of users\\\" columns={columns} items={items} />\\n\")), mdx(\"h2\", {\n    \"id\": \"responsive-tables\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Responsive tables\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#responsive-tables\",\n    \"aria-label\": \"responsive tables permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Responsive tables allow tables to be scrolled horizontally with ease. Make any table responsive across all viewports by adding a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"responsive\"), \" property. Or, pick a maximum breakpoint with which to have a responsive table up to by using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"responsive=\\\"{-sm|-md|-lg|-xl|-xxl}\\\"\"), \".\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    responsive: true,\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable responsive>\\n  ...\\n</CTable>\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    responsive: \"sm\",\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable responsive=\\\"sm\\\">\\n  ...\\n</CTable>\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    responsive: \"md\",\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable responsive=\\\"md\\\">\\n  ...\\n</CTable>\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    responsive: \"lg\",\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable responsive=\\\"lg\\\">\\n  ...\\n</CTable>\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    responsive: \"xl\",\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable responsive=\\\"xl\\\">\\n  ...\\n</CTable>\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CTable, {\n    responsive: \"xxl\",\n    mdxType: \"CTable\"\n  }, mdx(CTableHead, {\n    mdxType: \"CTableHead\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"#\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"), mdx(CTableHeaderCell, {\n    scope: \"col\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"Heading\"))), mdx(CTableBody, {\n    mdxType: \"CTableBody\"\n  }, mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"1\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"2\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\")), mdx(CTableRow, {\n    mdxType: \"CTableRow\"\n  }, mdx(CTableHeaderCell, {\n    scope: \"row\",\n    mdxType: \"CTableHeaderCell\"\n  }, \"3\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"), mdx(CTableDataCell, {\n    mdxType: \"CTableDataCell\"\n  }, \"Cell\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CTable responsive=\\\"xxl\\\">\\n  ...\\n</CTable>\\n\")), mdx(\"h2\", {\n    \"id\": \"api\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"API\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#api\",\n    \"aria-label\": \"api permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"ctable\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CTable\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#ctable\",\n    \"aria-label\": \"ctable permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CTable } from '@coreui/react'\\n// or\\nimport CTable from '@coreui/react-pro/src/components/table/CTable'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"align\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set the vertical aligment.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'bottom'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'middle'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'top'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"borderColor\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Sets the border color of the component to one of CoreUI\\u2019s themed colors.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'primary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'secondary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'success'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'danger'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'warning'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'info'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'dark'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'light'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"bordered\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Add borders on all sides of the table and cells.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"borderless\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Remove borders on all sides of the table and cells.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"caption\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Put the caption on the top if you set \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"caption=\\\"top\\\"\"), \" of the table or set the text of the table caption.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"captionTop\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.3.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set the text of the table caption and the caption on the top of the table.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"color\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Sets the color context of the component to one of CoreUI\\u2019s themed colors.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'primary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'secondary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'success'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'danger'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'warning'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'info'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'dark'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'light'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"columns\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.3.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Prop for table columns configuration. If prop is not defined, table will display columns based on the first item keys, omitting keys that begins with underscore (e.g. '_props')\", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"br\", {\n    parentName: \"td\"\n  }), \"In columns prop each array item represents one column. Item might be specified in two ways:\", mdx(\"br\", {\n    parentName: \"td\"\n  }), \"String: each item define column name equal to item value.\", mdx(\"br\", {\n    parentName: \"td\"\n  }), \"Object: item is object with following keys available as column configuration:\", mdx(\"br\", {\n    parentName: \"td\"\n  }), \"- key (required)(String) - define column name equal to item key.\", mdx(\"br\", {\n    parentName: \"td\"\n  }), \"- label (String) - define visible label of column. If not defined, label will be generated automatically based on column name, by converting kebab-case and snake_case to individual words and capitalization of each word.\", mdx(\"br\", {\n    parentName: \"td\"\n  }), \"- _props (Object) - adds classes to all cels in column, ex. _props: { scope: 'col', className: 'custom-class' },\", mdx(\"br\", {\n    parentName: \"td\"\n  }), \"- _style (Object) - adds styles to the column header (useful for defining widths)\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"(string\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"Column)[]\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"footer\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.3.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Array of objects or strings, where each element represents one cell in the table footer.\", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"br\", {\n    parentName: \"td\"\n  }), \"Example items:\", mdx(\"br\", {\n    parentName: \"td\"\n  }), \"['FooterCell', 'FooterCell', 'FooterCell']\", mdx(\"br\", {\n    parentName: \"td\"\n  }), \"or\", mdx(\"br\", {\n    parentName: \"td\"\n  }), \"[{ label: 'FooterCell', _props: { color: 'success' }, ...]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"FooterItem[]\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"hover\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Enable a hover state on table rows within a \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"<CTableBody>\"), \".\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"items\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.3.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Array of objects, where each object represents one item - row in table. Additionally, you can add style classes to each row by passing them by '_props' key and to single cell by '_cellProps'.\", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"br\", {\n    parentName: \"td\"\n  }), \"Example item:\", mdx(\"br\", {\n    parentName: \"td\"\n  }), \"{ name: 'John' , age: 12, _props: { color: 'success' }, _cellProps: { age: { className: 'fw-bold'}}}\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"Item[]\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"[]\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"responsive\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Make any table responsive across all viewports or pick a maximum breakpoint with which to have a responsive table up to.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'sm'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'md'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'lg'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'xl'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'xxl'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"small\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Make table more compact by cutting all cell \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"padding\"), \" in half.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"striped\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Add zebra-striping to any table row within the \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"<CTableBody>\"), \".\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"stripedColumns\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.3.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Add zebra-striping to any table column.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"tableFootProps\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.3.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Properties that will be passed to the table footer component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"CTableFootProps\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"tableHeadProps\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.3.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Properties that will be passed to the table head component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"CTableHeadProps\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))), mdx(\"h3\", {\n    \"id\": \"ctablebody\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CTableBody\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#ctablebody\",\n    \"aria-label\": \"ctablebody permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CTableBody } from '@coreui/react'\\n// or\\nimport CTableBody from '@coreui/react-pro/src/components/table/CTableBody'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"color\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Sets the color context of the component to one of CoreUI\\u2019s themed colors.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'primary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'secondary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'success'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'danger'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'warning'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'info'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'dark'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'light'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))), mdx(\"h3\", {\n    \"id\": \"ctabledatacell\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CTableDataCell\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#ctabledatacell\",\n    \"aria-label\": \"ctabledatacell permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CTableDataCell } from '@coreui/react'\\n// or\\nimport CTableDataCell from '@coreui/react-pro/src/components/table/CTableDataCell'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"active\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Highlight a table row or cell.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"align\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set the vertical aligment.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'bottom'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'middle'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'top'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"color\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Sets the color context of the component to one of CoreUI\\u2019s themed colors.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'primary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'secondary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'success'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'danger'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'warning'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'info'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'dark'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'light'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))), mdx(\"h3\", {\n    \"id\": \"ctablefoot\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CTableFoot\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#ctablefoot\",\n    \"aria-label\": \"ctablefoot permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CTableFoot } from '@coreui/react'\\n// or\\nimport CTableFoot from '@coreui/react-pro/src/components/table/CTableFoot'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"color\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Sets the color context of the component to one of CoreUI\\u2019s themed colors.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'primary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'secondary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'success'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'danger'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'warning'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'info'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'dark'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'light'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))), mdx(\"h3\", {\n    \"id\": \"ctablehead\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CTableHead\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#ctablehead\",\n    \"aria-label\": \"ctablehead permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CTableHead } from '@coreui/react'\\n// or\\nimport CTableHead from '@coreui/react-pro/src/components/table/CTableHead'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"color\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Sets the color context of the component to one of CoreUI\\u2019s themed colors.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'primary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'secondary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'success'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'danger'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'warning'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'info'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'dark'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'light'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))), mdx(\"h3\", {\n    \"id\": \"ctableheadercell\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CTableHeaderCell\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#ctableheadercell\",\n    \"aria-label\": \"ctableheadercell permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CTableHeaderCell } from '@coreui/react'\\n// or\\nimport CTableHeaderCell from '@coreui/react-pro/src/components/table/CTableHeaderCell'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"color\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Sets the color context of the component to one of CoreUI\\u2019s themed colors.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'primary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'secondary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'success'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'danger'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'warning'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'info'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'dark'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'light'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))), mdx(\"h3\", {\n    \"id\": \"ctablerow\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CTableRow\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#ctablerow\",\n    \"aria-label\": \"ctablerow permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CTableRow } from '@coreui/react'\\n// or\\nimport CTableRow from '@coreui/react-pro/src/components/table/CTableRow'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"active\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Highlight a table row or cell..\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"align\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set the vertical aligment.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'bottom'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'middle'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'top'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"color\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Sets the color context of the component to one of CoreUI\\u2019s themed colors.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'primary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'secondary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'success'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'danger'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'warning'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'info'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'dark'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'light'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"React Table Component","description":"Documentation and examples for opt-in styling of tables.","name":"Table","route":"/components/table"},"tableOfContents":{"items":[{"url":"#how-to-use-react-table-component","title":"How to use React Table Component"},{"url":"#variants","title":"Variants"},{"url":"#accented-tables","title":"Accented tables","items":[{"url":"#striped-rows","title":"Striped rows"},{"url":"#striped-columns","title":"Striped columns"},{"url":"#hoverable-rows","title":"Hoverable rows"},{"url":"#active-tables","title":"Active tables"}]},{"url":"#table-borders","title":"Table borders","items":[{"url":"#bordered-tables","title":"Bordered tables"},{"url":"#tables-without-borders","title":"Tables without borders"}]},{"url":"#small-tables","title":"Small tables"},{"url":"#vertical-alignment","title":"Vertical alignment"},{"url":"#nesting","title":"Nesting"},{"url":"#anatomy","title":"Anatomy","items":[{"url":"#table-head","title":"Table head"},{"url":"#table-foot","title":"Table foot"},{"url":"#captions","title":"Captions"}]},{"url":"#responsive-tables","title":"Responsive tables"},{"url":"#api","title":"API","items":[{"url":"#ctable","title":"CTable"},{"url":"#ctablebody","title":"CTableBody"},{"url":"#ctabledatacell","title":"CTableDataCell"},{"url":"#ctablefoot","title":"CTableFoot"},{"url":"#ctablehead","title":"CTableHead"},{"url":"#ctableheadercell","title":"CTableHeaderCell"},{"url":"#ctablerow","title":"CTableRow"}]}]}}},"pageContext":{"id":"1f32fe7a-a1ac-576b-b7a2-7400af6fec35"}},"staticQueryHashes":["4202924991"]}