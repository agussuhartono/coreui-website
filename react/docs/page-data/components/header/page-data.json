{
    "componentChunkName": "component---src-templates-docs-tsx",
    "path": "/components/header/",
    "result": {"data":{"site":{"siteMetadata":{"title":"CoreUI for React.js"}},"mdx":{"id":"ae7b8915-5935-550b-8159-4e0d422ab96e","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar BasicUsageExample = function BasicUsageExample() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  return mdx(React.Fragment, null, mdx(CHeader, {\n    mdxType: \"CHeader\"\n  }, mdx(CContainer, {\n    fluid: true,\n    mdxType: \"CContainer\"\n  }, mdx(CHeaderBrand, {\n    href: \"#\",\n    mdxType: \"CHeaderBrand\"\n  }, \"Header\"), mdx(CHeaderToggler, {\n    onClick: function onClick() {\n      return setVisible(!visible);\n    },\n    mdxType: \"CHeaderToggler\"\n  }), mdx(CCollapse, {\n    className: \"header-collapse\",\n    visible: visible,\n    mdxType: \"CCollapse\"\n  }, mdx(CHeaderNav, {\n    mdxType: \"CHeaderNav\"\n  }, mdx(CNavItem, {\n    mdxType: \"CNavItem\"\n  }, mdx(CNavLink, {\n    href: \"#\",\n    active: true,\n    mdxType: \"CNavLink\"\n  }, \"Home\")), mdx(CNavItem, {\n    mdxType: \"CNavItem\"\n  }, mdx(CNavLink, {\n    href: \"#\",\n    mdxType: \"CNavLink\"\n  }, \"Link\")), mdx(CDropdown, {\n    variant: \"nav-item\",\n    mdxType: \"CDropdown\"\n  }, mdx(CDropdownToggle, {\n    color: \"secondary\",\n    mdxType: \"CDropdownToggle\"\n  }, \"Dropdown button\"), mdx(CDropdownMenu, {\n    mdxType: \"CDropdownMenu\"\n  }, mdx(CDropdownItem, {\n    href: \"#\",\n    mdxType: \"CDropdownItem\"\n  }, \"Action\"), mdx(CDropdownItem, {\n    href: \"#\",\n    mdxType: \"CDropdownItem\"\n  }, \"Another action\"), mdx(CDropdownDivider, {\n    mdxType: \"CDropdownDivider\"\n  }), mdx(CDropdownItem, {\n    href: \"#\",\n    mdxType: \"CDropdownItem\"\n  }, \"Something else here\"))), mdx(CNavItem, {\n    mdxType: \"CNavItem\"\n  }, mdx(CNavLink, {\n    href: \"#\",\n    disabled: true,\n    mdxType: \"CNavLink\"\n  }, \"Disabled\"))), mdx(CForm, {\n    className: \"d-flex\",\n    mdxType: \"CForm\"\n  }, mdx(CFormInput, {\n    className: \"me-2\",\n    type: \"search\",\n    placeholder: \"Search\",\n    mdxType: \"CFormInput\"\n  }), mdx(CButton, {\n    type: \"submit\",\n    color: \"success\",\n    variant: \"outline\",\n    mdxType: \"CButton\"\n  }, \"Search\"))))));\n};\n\nvar _frontmatter = {\n  \"title\": \"React Header Component\",\n  \"name\": \"Header\",\n  \"description\": \"Documentation and examples for the Header powerful, responsive navigation header. Includes support for branding, links, dropdowns, and more.\",\n  \"menu\": \"Components\",\n  \"route\": \"/components/header\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  BasicUsageExample: BasicUsageExample,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"supported-content\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Supported content\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#supported-content\",\n    \"aria-label\": \"supported content permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Headers come with built-in support for a handful of sub-components. Choose from the following as needed:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<CHeaderBrand>\"), \" for your company, product, or project name.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<CHeaderNav>\"), \" for a full-height and lightweight navigation (including support for dropdowns).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<CHeaderToggler>\"), \" for use with our collapse plugin and other \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#responsive-behaviors\"\n  }, \"navigation toggling\"), \" behaviors.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Flex and spacing utilities for any form controls and actions.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<CHeaderText>\"), \" for adding vertically centered strings of text.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<CCollapse className=\\\"header-collapse\\\">\"), \" for grouping and hiding header contents by a parent breakpoint.\")), mdx(\"p\", null, \"Here's an example of all the sub-components included in a responsive light-themed header that automatically collapses at the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lg\"), \" (large) breakpoint.\"), mdx(\"h2\", {\n    \"id\": \"basic-usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Basic usage\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#basic-usage\",\n    \"aria-label\": \"basic usage permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(BasicUsageExample, {\n    mdxType: \"BasicUsageExample\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const [visible, setVisible] = useState(false)\\nreturn (\\n  <>\\n    <CHeader>\\n      <CContainer fluid>\\n        <CHeaderBrand href=\\\"#\\\">Header</CHeaderBrand>\\n        <CHeaderToggler onClick={() => setVisible(!visible)} />\\n        <CCollapse className=\\\"header-collapse\\\" visible={visible}>\\n          <CHeaderNav>\\n            <CNavItem>\\n              <CNavLink href=\\\"#\\\" active>\\n                Home\\n              </CNavLink>\\n            </CNavItem>\\n            <CNavItem>\\n              <CNavLink href=\\\"#\\\">Link</CNavLink>\\n            </CNavItem>\\n            <CDropdown variant=\\\"nav-item\\\">\\n              <CDropdownToggle color=\\\"secondary\\\">Dropdown button</CDropdownToggle>\\n              <CDropdownMenu>\\n                <CDropdownItem href=\\\"#\\\">Action</CDropdownItem>\\n                <CDropdownItem href=\\\"#\\\">Another action</CDropdownItem>\\n                <CDropdownDivider />\\n                <CDropdownItem href=\\\"#\\\">Something else here</CDropdownItem>\\n              </CDropdownMenu>\\n            </CDropdown>\\n            <CNavItem>\\n              <CNavLink href=\\\"#\\\" disabled>\\n                Disabled\\n              </CNavLink>\\n            </CNavItem>\\n          </CHeaderNav>\\n          <CForm className=\\\"d-flex\\\">\\n            <CFormInput className=\\\"me-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" />\\n            <CButton type=\\\"submit\\\" color=\\\"success\\\" variant=\\\"outline\\\">\\n              Search\\n            </CButton>\\n          </CForm>\\n        </CCollapse>\\n      </CContainer>\\n    </CHeader>\\n  </>\\n)\\n\")), mdx(\"h2\", {\n    \"id\": \"api\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"API\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#api\",\n    \"aria-label\": \"api permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"cheader\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CHeader\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cheader\",\n    \"aria-label\": \"cheader permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CHeader } from '@coreui/react'\\n// or\\nimport CHeader from '@coreui/react/src/components/header/CHeader'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"container\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Defines optional container wrapping children elements.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'sm'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'md'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'lg'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'xl'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'xxl'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'fluid'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"position\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Place header in non-static positions.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'fixed'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'sticky'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))), mdx(\"h3\", {\n    \"id\": \"cheaderbrand\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CHeaderBrand\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cheaderbrand\",\n    \"aria-label\": \"cheaderbrand permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CHeaderBrand } from '@coreui/react'\\n// or\\nimport CHeaderBrand from '@coreui/react/src/components/header/CHeaderBrand'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"component\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Component used for the root node. Either a string to use a HTML element or a component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ComponentClass<any, any>\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"FunctionComponent<any>\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))), mdx(\"h3\", {\n    \"id\": \"cheaderdivider\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CHeaderDivider\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cheaderdivider\",\n    \"aria-label\": \"cheaderdivider permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CHeaderDivider } from '@coreui/react'\\n// or\\nimport CHeaderDivider from '@coreui/react/src/components/header/CHeaderDivider'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))), mdx(\"h3\", {\n    \"id\": \"cheadernav\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CHeaderNav\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cheadernav\",\n    \"aria-label\": \"cheadernav permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CHeaderNav } from '@coreui/react'\\n// or\\nimport CHeaderNav from '@coreui/react/src/components/header/CHeaderNav'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"component\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Component used for the root node. Either a string to use a HTML element or a component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ComponentClass<any, any>\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"FunctionComponent<any>\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))), mdx(\"h3\", {\n    \"id\": \"cheadertext\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CHeaderText\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cheadertext\",\n    \"aria-label\": \"cheadertext permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CHeaderText } from '@coreui/react'\\n// or\\nimport CHeaderText from '@coreui/react/src/components/header/CHeaderText'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the base component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))), mdx(\"h3\", {\n    \"id\": \"cheadertoggler\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CHeaderToggler\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cheadertoggler\",\n    \"aria-label\": \"cheadertoggler permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CHeaderToggler } from '@coreui/react'\\n// or\\nimport CHeaderToggler from '@coreui/react/src/components/header/CHeaderToggler'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the base component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"React Header Component","description":"Documentation and examples for the Header powerful, responsive navigation header. Includes support for branding, links, dropdowns, and more.","route":"/components/header"},"tableOfContents":{"items":[{"url":"#supported-content","title":"Supported content"},{"url":"#basic-usage","title":"Basic usage"},{"url":"#api","title":"API","items":[{"url":"#cheader","title":"CHeader"},{"url":"#cheaderbrand","title":"CHeaderBrand"},{"url":"#cheaderdivider","title":"CHeaderDivider"},{"url":"#cheadernav","title":"CHeaderNav"},{"url":"#cheadertext","title":"CHeaderText"},{"url":"#cheadertoggler","title":"CHeaderToggler"}]}]}}},"pageContext":{"id":"ae7b8915-5935-550b-8159-4e0d422ab96e"}},
    "staticQueryHashes": ["4202924991"]}