{"componentChunkName":"component---src-templates-docs-tsx","path":"/forms/switch/","result":{"data":{"site":{"siteMetadata":{"title":"CoreUI for React.js"}},"mdx":{"id":"f6d0f156-56f6-55ad-a5af-bf559e74c29c","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React Switch Components\",\n  \"name\": \"Switch\",\n  \"description\": \"Create consistent cross-browser and cross-device switch component.\",\n  \"menu\": \"Forms\",\n  \"route\": \"/forms/checks-radios\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"switches\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Switches\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#switches\",\n    \"aria-label\": \"switches permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CFormSwitch, {\n    label: \"Default switch checkbox input\",\n    id: \"formSwitchCheckDefault\",\n    mdxType: \"CFormSwitch\"\n  }), mdx(CFormSwitch, {\n    label: \"Checked switch checkbox input\",\n    id: \"formSwitchCheckChecked\",\n    defaultChecked: true,\n    mdxType: \"CFormSwitch\"\n  }), mdx(CFormSwitch, {\n    label: \"Disabled switch checkbox input\",\n    id: \"formSwitchCheckDisabled\",\n    disabled: true,\n    mdxType: \"CFormSwitch\"\n  }), mdx(CFormSwitch, {\n    label: \"Disabled checked switch checkbox input\",\n    id: \"formSwitchCheckCheckedDisabled\",\n    defaultChecked: true,\n    disabled: true,\n    mdxType: \"CFormSwitch\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CFormSwitch label=\\\"Default switch checkbox input\\\" id=\\\"formSwitchCheckDefault\\\"/>\\n<CFormSwitch label=\\\"Checked switch checkbox input\\\" id=\\\"formSwitchCheckChecked\\\" defaultChecked/>\\n<CFormSwitch label=\\\"Disabled switch checkbox input\\\" id=\\\"formSwitchCheckDisabled\\\" disabled/>\\n<CFormSwitch label=\\\"Disabled checked switch checkbox input\\\" id=\\\"formSwitchCheckCheckedDisabled\\\" defaultChecked disabled/>\\n\")), mdx(\"h3\", {\n    \"id\": \"sizes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Sizes\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#sizes\",\n    \"aria-label\": \"sizes permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CFormSwitch, {\n    label: \"Default switch checkbox input\",\n    id: \"formSwitchCheckDefaultNormal\",\n    mdxType: \"CFormSwitch\"\n  }), mdx(CFormSwitch, {\n    size: \"lg\",\n    label: \"Large switch checkbox input\",\n    id: \"formSwitchCheckDefaultLg\",\n    mdxType: \"CFormSwitch\"\n  }), mdx(CFormSwitch, {\n    size: \"xl\",\n    label: \"Extra large switch checkbox input\",\n    id: \"formSwitchCheckDefaultXL\",\n    mdxType: \"CFormSwitch\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CFormSwitch label=\\\"Default switch checkbox input\\\" id=\\\"formSwitchCheckDefaultNormal\\\"/>\\n<CFormSwitch size=\\\"lg\\\" label=\\\"Large switch checkbox input\\\" id=\\\"formSwitchCheckDefaultLg\\\"/>\\n<CFormSwitch size=\\\"xl\\\" label=\\\"Extra large switch checkbox input\\\" id=\\\"formSwitchCheckDefaultXL\\\"/>\\n\")), mdx(\"h2\", {\n    \"id\": \"api\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"API\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#api\",\n    \"aria-label\": \"api permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"cformswitch\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CFormSwitch\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cformswitch\",\n    \"aria-label\": \"cformswitch permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CFormSwitch } from '@coreui/react'\\n// or\\nimport CFormSwitch from '@coreui/react/src/components/form/CFormSwitch'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"id\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The id global attribute defines an identifier (ID) that must be unique in the whole document.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"invalid\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set component validation state to invalid.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"label\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The element represents a caption for a component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"size\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Size the component large or extra large. Works only with \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"switch\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'lg'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'xl'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"type\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Specifies the type of component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'checkbox'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'radio'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"checkbox\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"valid\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set component validation state to valid.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"React Switch Components","description":"Create consistent cross-browser and cross-device switch component.","name":"Switch","route":"/forms/checks-radios"},"tableOfContents":{"items":[{"url":"#switches","title":"Switches","items":[{"url":"#sizes","title":"Sizes"}]},{"url":"#api","title":"API","items":[{"url":"#cformswitch","title":"CFormSwitch"}]}]}}},"pageContext":{"id":"f6d0f156-56f6-55ad-a5af-bf559e74c29c"}},"staticQueryHashes":["4202924991"]}