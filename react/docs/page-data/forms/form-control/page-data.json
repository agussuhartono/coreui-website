{
    "componentChunkName": "component---src-templates-docs-tsx",
    "path": "/forms/form-control/",
    "result": {"data":{"site":{"siteMetadata":{"title":"CoreUI for React.js"}},"mdx":{"id":"34258f0e-af5d-57e2-9a62-c945f2342080","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React Form Controls\",\n  \"name\": \"Form control\",\n  \"description\": \"React input and textarea components. Give textual form controls like `<input>`s and `<textarea>`s an upgrade with custom styles, sizing, focus states, and more.\",\n  \"menu\": \"Forms\",\n  \"route\": \"/forms/form-control\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"example\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Example\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#example\",\n    \"aria-label\": \"example permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CForm, {\n    mdxType: \"CForm\"\n  }, mdx(\"div\", {\n    className: \"mb-3\"\n  }, mdx(CFormLabel, {\n    htmlFor: \"exampleFormControlInput1\",\n    mdxType: \"CFormLabel\"\n  }, \"Email address\"), mdx(CFormInput, {\n    type: \"email\",\n    id: \"exampleFormControlInput1\",\n    placeholder: \"name@example.com\",\n    mdxType: \"CFormInput\"\n  })), mdx(\"div\", {\n    className: \"mb-3\"\n  }, mdx(CFormLabel, {\n    htmlFor: \"exampleFormControlTextarea1\",\n    mdxType: \"CFormLabel\"\n  }, \"Example textarea\"), mdx(CFormTextarea, {\n    id: \"exampleFormControlTextarea1\",\n    rows: \"3\",\n    mdxType: \"CFormTextarea\"\n  }))), mdx(CForm, {\n    mdxType: \"CForm\"\n  }, mdx(\"div\", {\n    className: \"mb-3\"\n  }, mdx(CFormInput, {\n    type: \"email\",\n    id: \"exampleFormControlInput1\",\n    label: \"Email address\",\n    placeholder: \"name@example.com\",\n    mdxType: \"CFormInput\"\n  })), mdx(\"div\", {\n    className: \"mb-3\"\n  }, mdx(CFormLabel, {\n    htmlFor: \"exampleFormControlTextarea1\",\n    mdxType: \"CFormLabel\"\n  }, \"Example textarea\"), mdx(CFormTextarea, {\n    id: \"exampleFormControlTextarea1\",\n    rows: \"3\",\n    mdxType: \"CFormTextarea\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CForm>\\n  <div className=\\\"mb-3\\\">\\n    <CFormLabel htmlFor=\\\"exampleFormControlInput1\\\">Email address</CFormLabel>\\n    <CFormInput type=\\\"email\\\" id=\\\"exampleFormControlInput1\\\" placeholder=\\\"name@example.com\\\"/>\\n  </div>\\n  <div className=\\\"mb-3\\\">\\n    <CFormLabel htmlFor=\\\"exampleFormControlTextarea1\\\">Example textarea</CFormLabel>\\n    <CFormTextarea id=\\\"exampleFormControlTextarea1\\\" rows=\\\"3\\\"></CFormTextarea>\\n  </div>\\n</CForm>\\n\")), mdx(\"h2\", {\n    \"id\": \"sizing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Sizing\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#sizing\",\n    \"aria-label\": \"sizing permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Set heights using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \" property like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size=\\\"lg\\\"\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size=\\\"sm\\\"\"), \".\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CFormInput, {\n    type: \"text\",\n    size: \"lg\",\n    placeholder: \"Large input\",\n    \"aria-label\": \"lg input example\",\n    mdxType: \"CFormInput\"\n  }), mdx(\"br\", null), mdx(CFormInput, {\n    type: \"text\",\n    placeholder: \"Default input\",\n    \"aria-label\": \"default input example\",\n    mdxType: \"CFormInput\"\n  }), mdx(\"br\", null), mdx(CFormInput, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Small input\",\n    \"aria-label\": \"sm input example\",\n    mdxType: \"CFormInput\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CFormInput type=\\\"text\\\" size=\\\"lg\\\" placeholder=\\\"Large input\\\" aria-label=\\\"lg input example\\\"/>\\n<CFormInput type=\\\"text\\\" placeholder=\\\"Default input\\\" aria-label=\\\"default input example\\\"/>\\n<CFormInput type=\\\"text\\\" size=\\\"sm\\\" placeholder=\\\"Small input\\\" aria-label=\\\"sm input example\\\"/>\\n\")), mdx(\"h2\", {\n    \"id\": \"disabled\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Disabled\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#disabled\",\n    \"aria-label\": \"disabled permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"disabled\"), \" boolean attribute on an input to give it a grayed out appearance and remove pointer events.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CFormInput, {\n    type: \"text\",\n    placeholder: \"Disabled input\",\n    \"aria-label\": \"Disabled input example\",\n    disabled: true,\n    mdxType: \"CFormInput\"\n  }), mdx(\"br\", null), mdx(CFormInput, {\n    type: \"text\",\n    placeholder: \"Disabled readonly input\",\n    \"aria-label\": \"Disabled input example\",\n    disabled: true,\n    readOnly: true,\n    mdxType: \"CFormInput\"\n  }), mdx(\"br\", null)), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CFormInput type=\\\"text\\\" placeholder=\\\"Disabled input\\\" aria-label=\\\"Disabled input example\\\" disabled/>\\n<CFormInput type=\\\"text\\\" placeholder=\\\"Disabled readonly input\\\" aria-label=\\\"Disabled input example\\\" disabled readOnly/>\\n\")), mdx(\"h2\", {\n    \"id\": \"readonly\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Readonly\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#readonly\",\n    \"aria-label\": \"readonly permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"readOnly\"), \" boolean attribute on an input to prevent modification of the input's value. Read-only inputs appear lighter (just like disabled inputs), but retain the standard cursor.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CFormInput, {\n    type: \"text\",\n    placeholder: \"Readonly input here...\",\n    \"aria-label\": \"readonly input example\",\n    readOnly: true,\n    mdxType: \"CFormInput\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CFormInput type=\\\"text\\\" placeholder=\\\"Readonly input here...\\\" aria-label=\\\"readonly input example\\\" readOnly/>\\n\")), mdx(\"h2\", {\n    \"id\": \"readonly-plain-text\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Readonly plain text\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#readonly-plain-text\",\n    \"aria-label\": \"readonly plain text permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"If you want to have \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<input readonly>\"), \" elements in your form styled as plain text, use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"plainText\"), \" boolean property to remove the default form field styling and preserve the correct margin and padding.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CRow, {\n    className: \"mb-3\",\n    mdxType: \"CRow\"\n  }, mdx(CFormLabel, {\n    htmlFor: \"staticEmail\",\n    className: \"col-sm-2 col-form-label\",\n    mdxType: \"CFormLabel\"\n  }, \"Email\"), mdx(CCol, {\n    sm: 10,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    type: \"text\",\n    id: \"staticEmail\",\n    defaultValue: \"email@example.com\",\n    readOnly: true,\n    plainText: true,\n    mdxType: \"CFormInput\"\n  }))), mdx(CRow, {\n    className: \"mb-3\",\n    mdxType: \"CRow\"\n  }, mdx(CFormLabel, {\n    htmlFor: \"inputPassword\",\n    className: \"col-sm-2 col-form-label\",\n    mdxType: \"CFormLabel\"\n  }, \"Password\"), mdx(CCol, {\n    sm: 10,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    type: \"password\",\n    id: \"inputPassword\",\n    mdxType: \"CFormInput\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CRow className=\\\"mb-3\\\">\\n  <CFormLabel htmlFor=\\\"staticEmail\\\" className=\\\"col-sm-2 col-form-label\\\">Email</CFormLabel>\\n  <CCol sm={10}>\\n    <CFormInput type=\\\"text\\\" id=\\\"staticEmail\\\" defaultValue=\\\"email@example.com\\\" readOnly plainText/>\\n  </CCol>\\n</CRow>\\n<CRow className=\\\"mb-3\\\">\\n  <CFormLabel htmlFor=\\\"inputPassword\\\" className=\\\"col-sm-2 col-form-label\\\">Password</CFormLabel>\\n  <CCol sm={10}>\\n    <CFormInput type=\\\"password\\\" id=\\\"inputPassword\\\"/>\\n  </CCol>\\n</CRow>\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CForm, {\n    className: \"row g-3\",\n    mdxType: \"CForm\"\n  }, mdx(CCol, {\n    xs: \"auto\",\n    mdxType: \"CCol\"\n  }, mdx(CFormLabel, {\n    htmlFor: \"staticEmail2\",\n    className: \"visually-hidden\",\n    mdxType: \"CFormLabel\"\n  }, \"Email\"), mdx(CFormInput, {\n    type: \"text\",\n    id: \"staticEmail2\",\n    defaultValue: \"email@example.com\",\n    readOnly: true,\n    plainText: true,\n    mdxType: \"CFormInput\"\n  })), mdx(CCol, {\n    xs: \"auto\",\n    mdxType: \"CCol\"\n  }, mdx(CFormLabel, {\n    htmlFor: \"inputPassword2\",\n    className: \"visually-hidden\",\n    mdxType: \"CFormLabel\"\n  }, \"Password\"), mdx(CFormInput, {\n    type: \"password\",\n    id: \"inputPassword2\",\n    placeholder: \"Password\",\n    mdxType: \"CFormInput\"\n  })), mdx(CCol, {\n    xs: \"auto\",\n    mdxType: \"CCol\"\n  }, mdx(CButton, {\n    type: \"submit\",\n    className: \"mb-3\",\n    mdxType: \"CButton\"\n  }, \"Confirm identity\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CForm className=\\\"row g-3\\\">\\n  <CCol xs=\\\"auto\\\">\\n    <CFormLabel htmlFor=\\\"staticEmail2\\\" className=\\\"visually-hidden\\\">Email</CFormLabel>\\n    <CFormInput type=\\\"text\\\" id=\\\"staticEmail2\\\" defaultValue=\\\"email@example.com\\\" readOnly plainText/>\\n  </CCol>\\n  <CCol xs=\\\"auto\\\">\\n    <CFormLabel htmlFor=\\\"inputPassword2\\\" className=\\\"visually-hidden\\\">Password</CFormLabel>\\n    <CFormInput type=\\\"password\\\" id=\\\"inputPassword2\\\" placeholder=\\\"Password\\\"/>\\n  </CCol>\\n  <CCol xs=\\\"auto\\\">\\n    <CButton type=\\\"submit\\\" className=\\\"mb-3\\\">Confirm identity</CButton>\\n  </CCol>\\n</CForm>\\n\")), mdx(\"h2\", {\n    \"id\": \"file-input\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"File input\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#file-input\",\n    \"aria-label\": \"file input permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(\"div\", {\n    className: \"mb-3\"\n  }, mdx(CFormLabel, {\n    htmlFor: \"formFile\",\n    mdxType: \"CFormLabel\"\n  }, \"Default file input example\"), mdx(CFormInput, {\n    type: \"file\",\n    id: \"formFile\",\n    mdxType: \"CFormInput\"\n  })), mdx(\"div\", {\n    className: \"mb-3\"\n  }, mdx(CFormLabel, {\n    htmlFor: \"formFileMultiple\",\n    mdxType: \"CFormLabel\"\n  }, \"Multiple files input example\"), mdx(CFormInput, {\n    type: \"file\",\n    id: \"formFileMultiple\",\n    multiple: true,\n    mdxType: \"CFormInput\"\n  })), mdx(\"div\", {\n    className: \"mb-3\"\n  }, mdx(CFormLabel, {\n    htmlFor: \"formFileDisabled\",\n    mdxType: \"CFormLabel\"\n  }, \"Disabled file input example\"), mdx(CFormInput, {\n    type: \"file\",\n    id: \"formFileDisabled\",\n    disabled: true,\n    mdxType: \"CFormInput\"\n  })), mdx(\"div\", {\n    className: \"mb-3\"\n  }, mdx(CFormLabel, {\n    htmlFor: \"formFileSm\",\n    mdxType: \"CFormLabel\"\n  }, \"Small file input example\"), mdx(CFormInput, {\n    type: \"file\",\n    size: \"sm\",\n    id: \"formFileSm\",\n    mdxType: \"CFormInput\"\n  })), mdx(\"div\", null, mdx(CFormLabel, {\n    htmlFor: \"formFileLg\",\n    mdxType: \"CFormLabel\"\n  }, \"Large file input example\"), mdx(CFormInput, {\n    type: \"file\",\n    size: \"lg\",\n    id: \"formFileLg\",\n    mdxType: \"CFormInput\"\n  }))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<div className=\\\"mb-3\\\">\\n  <CFormLabel htmlFor=\\\"formFile\\\">Default file input example</CFormLabel>\\n  <CFormInput type=\\\"file\\\" id=\\\"formFile\\\"/>\\n</div>\\n<div className=\\\"mb-3\\\">\\n  <CFormLabel htmlFor=\\\"formFileMultiple\\\">Multiple files input example</CFormLabel>\\n  <CFormInput type=\\\"file\\\" id=\\\"formFileMultiple\\\" multiple/>\\n</div>\\n<div className=\\\"mb-3\\\">\\n  <CFormLabel htmlFor=\\\"formFileDisabled\\\">Disabled file input example</CFormLabel>\\n  <CFormInput type=\\\"file\\\" id=\\\"formFileDisabled\\\" disabled/>\\n</div>\\n<div className=\\\"mb-3\\\">\\n  <CFormLabel htmlFor=\\\"formFileSm\\\">Small file input example</CFormLabel>\\n  <CFormInput type=\\\"file\\\" size=\\\"sm\\\" id=\\\"formFileSm\\\"/>\\n</div>\\n<div>\\n  <CFormLabel htmlFor=\\\"formFileLg\\\">Large file input example</CFormLabel>\\n  <CFormInput type=\\\"file\\\" size=\\\"lg\\\" id=\\\"formFileLg\\\"/>\\n</div>\\n\")), mdx(\"h2\", {\n    \"id\": \"color\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Color\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#color\",\n    \"aria-label\": \"color permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CFormLabel, {\n    htmlFor: \"exampleColorInput\",\n    mdxType: \"CFormLabel\"\n  }, \"Color picker\"), mdx(CFormInput, {\n    type: \"color\",\n    id: \"exampleColorInput\",\n    defaultValue: \"#563d7c\",\n    title: \"Choose your color\",\n    mdxType: \"CFormInput\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CFormLabel htmlFor=\\\"exampleColorInput\\\">Color picker</CFormLabel>\\n<CFormInput type=\\\"color\\\" id=\\\"exampleColorInput\\\" defaultValue=\\\"#563d7c\\\" title=\\\"Choose your color\\\" />\\n\")), mdx(\"h2\", {\n    \"id\": \"api\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"API\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#api\",\n    \"aria-label\": \"api permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"cforminput\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CFormInput\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cforminput\",\n    \"aria-label\": \"cforminput permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CFormInput } from '@coreui/react'\\n// or\\nimport CFormInput from '@coreui/react/src/components/form/CFormInput'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"delay\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Delay onChange event while typing. If set to true onChange event will be delayed 500ms, you can also provide the number of milliseconds you want to delay the onChange event.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"false\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"disabled\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Toggle the disabled state for the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"feedback\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Provide valuable, actionable feedback.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"feedbackInvalid\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Provide valuable, actionable feedback.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"feedbackValid\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Provide valuable, actionable invalid feedback when using standard HTML form validation which applied two CSS pseudo-classes, \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \":invalid\"), \" and \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \":valid\"), \".\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"floatingLabel\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Provide valuable, actionable valid feedback when using standard HTML form validation which applied two CSS pseudo-classes, \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \":invalid\"), \" and \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \":valid\"), \".\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"invalid\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set component validation state to invalid.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"label\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Add a caption for a component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"onChange\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Method called immediately after the \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"value\"), \" prop changes.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ChangeEventHandler<HTMLInputElement>\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"plainText\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Render the component styled as plain text. Removes the default form field styling and preserve the correct margin and padding. Recommend to use only along side \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"readonly\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"readOnly\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Toggle the readonly state for the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"size\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Size the component small or large.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'sm'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'lg'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"text\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Add helper text to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"tooltipFeedback\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Display validation feedback in a styled tooltip.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"type\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Specifies the type of component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"text\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"valid\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set component validation state to valid.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"value\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"value\"), \" attribute of component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string[]\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))), mdx(\"h3\", {\n    \"id\": \"cformtextarea\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CFormTextarea\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cformtextarea\",\n    \"aria-label\": \"cformtextarea permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CFormTextarea } from '@coreui/react'\\n// or\\nimport CFormTextarea from '@coreui/react/src/components/form/CFormTextarea'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"disabled\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Toggle the disabled state for the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"feedback\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Provide valuable, actionable feedback.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"feedbackInvalid\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Provide valuable, actionable feedback.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"feedbackValid\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Provide valuable, actionable invalid feedback when using standard HTML form validation which applied two CSS pseudo-classes, \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \":invalid\"), \" and \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \":valid\"), \".\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"floatingLabel\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Provide valuable, actionable valid feedback when using standard HTML form validation which applied two CSS pseudo-classes, \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \":invalid\"), \" and \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \":valid\"), \".\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"invalid\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set component validation state to invalid.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"label\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Add a caption for a component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"onChange\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Method called immediately after the \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"value\"), \" prop changes.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ChangeEventHandler<HTMLTextAreaElement>\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"plainText\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Render the component styled as plain text. Removes the default form field styling and preserve the correct margin and padding. Recommend to use only along side \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"readonly\"), \".\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"readOnly\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Toggle the readonly state for the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"text\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Add helper text to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"tooltipFeedback\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Display validation feedback in a styled tooltip.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"valid\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set component validation state to valid.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"value\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"value\"), \" attribute of component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string[]\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"React Form Controls","description":"React input and textarea components. Give textual form controls like `<input>`s and `<textarea>`s an upgrade with custom styles, sizing, focus states, and more.","route":"/forms/form-control"},"tableOfContents":{"items":[{"url":"#example","title":"Example"},{"url":"#sizing","title":"Sizing"},{"url":"#disabled","title":"Disabled"},{"url":"#readonly","title":"Readonly"},{"url":"#readonly-plain-text","title":"Readonly plain text"},{"url":"#file-input","title":"File input"},{"url":"#color","title":"Color"},{"url":"#api","title":"API","items":[{"url":"#cforminput","title":"CFormInput"},{"url":"#cformtextarea","title":"CFormTextarea"}]}]}}},"pageContext":{"id":"34258f0e-af5d-57e2-9a62-c945f2342080"}},
    "staticQueryHashes": ["4202924991"]}