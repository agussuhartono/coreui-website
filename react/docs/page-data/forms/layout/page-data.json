{
    "componentChunkName": "component---src-templates-docs-tsx",
    "path": "/forms/layout/",
    "result": {"data":{"site":{"siteMetadata":{"title":"CoreUI for React.js"}},"mdx":{"id":"4d74c215-3f50-57ec-8338-6a26f95c501e","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React Form Layout\",\n  \"name\": \"Layout\",\n  \"description\": \"Give your forms some structure—from inline to horizontal to custom grid implementations—with our form layout options.\",\n  \"menu\": \"Forms\",\n  \"route\": \"/forms/layout\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"forms\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Forms\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#forms\",\n    \"aria-label\": \"forms permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Every group of form fields should reside in a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CForm>\"), \" element. CoreUI provides no default styling for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CForm>\"), \" element, but there are some powerful browser features that are provided by default.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"New to browser forms? Consider reviewing \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"the MDN form docs\"), \" for an overview and complete list of available attributes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<CButton>\"), \"s within a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<CForm>\"), \" default to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"type=\\\"submit\\\"\"), \", so strive to be specific and always include a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"type\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can disable every form element within a form with the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"disabled\"), \" attribute on the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<CForm>\"), \".\")), mdx(\"p\", null, \"Since CoreUI applies \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"display: block\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"width: 100%\"), \" to almost all our form controls, forms will by default stack vertically. Additional classes can be used to vary this layout on a per-form basis.\"), mdx(\"h2\", {\n    \"id\": \"utilities\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Utilities\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#utilities\",\n    \"aria-label\": \"utilities permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://coreui.io/docs/utilities/spacing/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"Margin utilities\"), \" are the easiest way to add some structure to forms. They provide basic grouping of labels, controls, optional form text, and form validation messaging. We recommend sticking to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"margin-bottom\"), \" utilities, and using a single direction throughout the form for consistency.\"), mdx(\"h2\", {\n    \"id\": \"form-grid\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Form grid\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#form-grid\",\n    \"aria-label\": \"form grid permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"More complex forms can be built using our grid classes. Use these for form layouts that require multiple columns, varied widths, and additional alignment options.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CRow, {\n    mdxType: \"CRow\"\n  }, mdx(CCol, {\n    xs: true,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    placeholder: \"First name\",\n    \"aria-label\": \"First name\",\n    mdxType: \"CFormInput\"\n  })), mdx(CCol, {\n    xs: true,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    placeholder: \"Last name\",\n    \"aria-label\": \"Last name\",\n    mdxType: \"CFormInput\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CRow>\\n  <CCol xs>\\n    <CFormInput placeholder=\\\"First name\\\" aria-label=\\\"First name\\\"/>\\n  </CCol>\\n  <CCol xs>\\n    <CFormInput placeholder=\\\"Last name\\\" aria-label=\\\"Last name\\\"/>\\n  </CCol>\\n</CRow>\\n\")), mdx(\"h2\", {\n    \"id\": \"gutters\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Gutters\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#gutters\",\n    \"aria-label\": \"gutters permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"By adding \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://coreui.io/docs/layout/gutters/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"gutter modifier classes\"), \", you can have control over the gutter width in as well the inline as block direction.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CRow, {\n    className: \"g-3\",\n    mdxType: \"CRow\"\n  }, mdx(CCol, {\n    xs: true,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    placeholder: \"First name\",\n    \"aria-label\": \"First name\",\n    mdxType: \"CFormInput\"\n  })), mdx(CCol, {\n    xs: true,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    placeholder: \"Last name\",\n    \"aria-label\": \"Last name\",\n    mdxType: \"CFormInput\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CRow className=\\\"g-3\\\">\\n  <CCol xs>\\n    <CFormInput placeholder=\\\"First name\\\" aria-label=\\\"First name\\\"/>\\n  </CCol>\\n  <CCol xs>\\n    <CFormInput placeholder=\\\"Last name\\\" aria-label=\\\"Last name\\\"/>\\n  </CCol>\\n</CRow>\\n\")), mdx(\"p\", null, \"More complex layouts can also be created with the grid system.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CForm, {\n    className: \"row g-3\",\n    mdxType: \"CForm\"\n  }, mdx(CCol, {\n    md: 6,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    type: \"email\",\n    id: \"inputEmail4\",\n    label: \"Email\",\n    mdxType: \"CFormInput\"\n  })), mdx(CCol, {\n    md: 6,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    type: \"password\",\n    id: \"inputPassword4\",\n    label: \"Password\",\n    mdxType: \"CFormInput\"\n  })), mdx(CCol, {\n    xs: 12,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    id: \"inputAddress\",\n    label: \"Address\",\n    placeholder: \"1234 Main St\",\n    mdxType: \"CFormInput\"\n  })), mdx(CCol, {\n    xs: 12,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    id: \"inputAddress2\",\n    label: \"Address 2\",\n    placeholder: \"Apartment, studio, or floor\",\n    mdxType: \"CFormInput\"\n  })), mdx(CCol, {\n    md: 6,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    id: \"inputCity\",\n    label: \"City\",\n    mdxType: \"CFormInput\"\n  })), mdx(CCol, {\n    md: 4,\n    mdxType: \"CCol\"\n  }, mdx(CFormSelect, {\n    id: \"inputState\",\n    label: \"State\",\n    mdxType: \"CFormSelect\"\n  }, mdx(\"option\", null, \"Choose...\"), mdx(\"option\", null, \"...\"))), mdx(CCol, {\n    md: 2,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    id: \"inputZip\",\n    label: \"Zip\",\n    mdxType: \"CFormInput\"\n  })), mdx(CCol, {\n    xs: 12,\n    mdxType: \"CCol\"\n  }, mdx(CFormCheck, {\n    type: \"checkbox\",\n    id: \"gridCheck\",\n    label: \"Check me out\",\n    mdxType: \"CFormCheck\"\n  })), mdx(CCol, {\n    xs: 12,\n    mdxType: \"CCol\"\n  }, mdx(CButton, {\n    type: \"submit\",\n    mdxType: \"CButton\"\n  }, \"Sign in\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CForm className=\\\"row g-3\\\">\\n  <CCol md={6}>\\n    <CFormInput type=\\\"email\\\" id=\\\"inputEmail4\\\" label=\\\"Email\\\" />\\n  </CCol>\\n  <CCol md={6}>\\n    <CFormInput type=\\\"password\\\" id=\\\"inputPassword4\\\" label=\\\"Password\\\" />\\n  </CCol>\\n  <CCol xs={12}>\\n    <CFormInput id=\\\"inputAddress\\\" label=\\\"Address\\\" placeholder=\\\"1234 Main St\\\"/>\\n  </CCol>\\n  <CCol xs={12}>\\n    <CFormInput id=\\\"inputAddress2\\\" label=\\\"Address 2\\\" placeholder=\\\"Apartment, studio, or floor\\\"/>\\n  </CCol>\\n  <CCol md={6}>\\n    <CFormInput id=\\\"inputCity\\\" label=\\\"City\\\"/>\\n  </CCol>\\n  <CCol md={4}>\\n    <CFormSelect id=\\\"inputState\\\" label=\\\"State\\\">\\n      <option>Choose...</option>\\n      <option>...</option>\\n    </CFormSelect>\\n  </CCol>\\n  <CCol md={2}>\\n    <CFormInput id=\\\"inputZip\\\" label=\\\"Zip\\\" />\\n  </CCol>\\n  <CCol xs={12}>\\n    <CFormCheck type=\\\"checkbox\\\" id=\\\"gridCheck\\\" label=\\\"Check me out\\\"/>\\n  </CCol>\\n  <CCol xs={12}>\\n    <CButton type=\\\"submit\\\">Sign in</CButton>\\n  </CCol>\\n</CForm>\\n\")), mdx(\"h2\", {\n    \"id\": \"horizontal-form\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Horizontal form\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#horizontal-form\",\n    \"aria-label\": \"horizontal form permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Create horizontal forms with the grid by adding the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".row\"), \" class to form groups and using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".col-*-*\"), \" classes to specify the width of your labels and controls. Be sure to add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".col-form-label\"), \" to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CFormLabel>\"), \"s as well so they're vertically centered with their associated form controls.\"), mdx(\"p\", null, \"At times, you maybe need to use margin or padding utilities to create that perfect alignment you need. For example, we've removed the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"padding-top\"), \" on our stacked radio inputs label to better align the text baseline.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CForm, {\n    mdxType: \"CForm\"\n  }, mdx(CRow, {\n    className: \"mb-3\",\n    mdxType: \"CRow\"\n  }, mdx(CFormLabel, {\n    htmlFor: \"inputEmail3\",\n    className: \"col-sm-2 col-form-label\",\n    mdxType: \"CFormLabel\"\n  }, \"Email\"), mdx(CCol, {\n    sm: 10,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    type: \"email\",\n    id: \"inputEmail3\",\n    mdxType: \"CFormInput\"\n  }))), mdx(CRow, {\n    className: \"mb-3\",\n    mdxType: \"CRow\"\n  }, mdx(CFormLabel, {\n    htmlFor: \"inputPassword3\",\n    className: \"col-sm-2 col-form-label\",\n    mdxType: \"CFormLabel\"\n  }, \"Password\"), mdx(CCol, {\n    sm: 10,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    type: \"password\",\n    id: \"inputPassword3\",\n    mdxType: \"CFormInput\"\n  }))), mdx(\"fieldset\", {\n    className: \"row mb-3\"\n  }, mdx(\"legend\", {\n    className: \"col-form-label col-sm-2 pt-0\"\n  }, \"Radios\"), mdx(CCol, {\n    sm: 10,\n    mdxType: \"CCol\"\n  }, mdx(CFormCheck, {\n    type: \"radio\",\n    name: \"gridRadios\",\n    id: \"gridRadios1\",\n    value: \"option1\",\n    label: \"First radio\",\n    defaultChecked: true,\n    mdxType: \"CFormCheck\"\n  }), mdx(CFormCheck, {\n    type: \"radio\",\n    name: \"gridRadios\",\n    id: \"gridRadios2\",\n    value: \"option2\",\n    label: \"Second radio\",\n    mdxType: \"CFormCheck\"\n  }), mdx(CFormCheck, {\n    type: \"radio\",\n    name: \"gridRadios\",\n    id: \"gridRadios3\",\n    value: \"option3\",\n    label: \"Third disabled radio\",\n    disabled: true,\n    mdxType: \"CFormCheck\"\n  }))), mdx(CRow, {\n    className: \"mb-3\",\n    mdxType: \"CRow\"\n  }, mdx(\"div\", {\n    className: \"col-sm-10 offset-sm-2\"\n  }, mdx(CFormCheck, {\n    type: \"checkbox\",\n    id: \"gridCheck1\",\n    label: \"Example checkbox\",\n    mdxType: \"CFormCheck\"\n  }))), mdx(CButton, {\n    type: \"submit\",\n    mdxType: \"CButton\"\n  }, \"Sign in\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CForm>\\n  <CRow className=\\\"mb-3\\\">\\n    <CFormLabel htmlFor=\\\"inputEmail3\\\" className=\\\"col-sm-2 col-form-label\\\">Email</CFormLabel>\\n    <CCol sm={10} >\\n      <CFormInput type=\\\"email\\\" id=\\\"inputEmail3\\\"/>\\n    </CCol>\\n  </CRow>\\n  <CRow className=\\\"mb-3\\\">\\n    <CFormLabel htmlFor=\\\"inputPassword3\\\" className=\\\"col-sm-2 col-form-label\\\">Password</CFormLabel>\\n    <CCol sm={10} >\\n      <CFormInput type=\\\"password\\\" id=\\\"inputPassword3\\\"/>\\n    </CCol>\\n  </CRow>\\n  <fieldset className=\\\"row mb-3\\\">\\n    <legend className=\\\"col-form-label col-sm-2 pt-0\\\">Radios</legend>\\n    <CCol sm={10} >\\n      <CFormCheck type=\\\"radio\\\" name=\\\"gridRadios\\\" id=\\\"gridRadios1\\\" value=\\\"option1\\\" label=\\\"First radio\\\" defaultChecked/>\\n      <CFormCheck type=\\\"radio\\\" name=\\\"gridRadios\\\" id=\\\"gridRadios2\\\" value=\\\"option2\\\" label=\\\"Second radio\\\"/>\\n      <CFormCheck type=\\\"radio\\\" name=\\\"gridRadios\\\" id=\\\"gridRadios3\\\" value=\\\"option3\\\" label=\\\"Third disabled radio\\\" disabled/>\\n    </CCol>\\n  </fieldset>\\n  <CRow className=\\\"mb-3\\\">\\n    <div className=\\\"col-sm-10 offset-sm-2\\\">\\n      <CFormCheck type=\\\"checkbox\\\" id=\\\"gridCheck1\\\" label=\\\"Example checkbox\\\"/>\\n    </div>\\n  </CRow>\\n  <CButton type=\\\"submit\\\">Sign in</CButton>\\n</CForm>\\n\")), mdx(\"h3\", {\n    \"id\": \"horizontal-form-label-sizing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Horizontal form label sizing\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#horizontal-form-label-sizing\",\n    \"aria-label\": \"horizontal form label sizing permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Be sure to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".col-form-label-sm\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".col-form-label-lg\"), \" to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CFormLabel>\"), \"s or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<legend>\"), \"s to correctly follow the size of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".form-control-lg\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".form-control-sm\"), \".\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CRow, {\n    className: \"mb-3\",\n    mdxType: \"CRow\"\n  }, mdx(CFormLabel, {\n    htmlFor: \"colFormLabelSm\",\n    className: \"col-sm-2 col-form-label col-form-label-sm\",\n    mdxType: \"CFormLabel\"\n  }, \"Email\"), mdx(CCol, {\n    sm: 10,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    type: \"email\",\n    className: \"form-control form-control-sm\",\n    id: \"colFormLabelSm\",\n    placeholder: \"col-form-label-sm\",\n    mdxType: \"CFormInput\"\n  }))), mdx(CRow, {\n    className: \"mb-3\",\n    mdxType: \"CRow\"\n  }, mdx(CFormLabel, {\n    htmlFor: \"colFormLabel\",\n    className: \"col-sm-2 col-form-label\",\n    mdxType: \"CFormLabel\"\n  }, \"Email\"), mdx(CCol, {\n    sm: 10,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    type: \"email\",\n    id: \"colFormLabel\",\n    placeholder: \"col-form-label\",\n    mdxType: \"CFormInput\"\n  }))), mdx(CRow, {\n    mdxType: \"CRow\"\n  }, mdx(CFormLabel, {\n    htmlFor: \"colFormLabelLg\",\n    className: \"col-sm-2 col-form-label col-form-label-lg\",\n    mdxType: \"CFormLabel\"\n  }, \"Email\"), mdx(CCol, {\n    sm: 10,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    type: \"email\",\n    className: \"form-control form-control-lg\",\n    id: \"colFormLabelLg\",\n    placeholder: \"col-form-label-lg\",\n    mdxType: \"CFormInput\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CRow className=\\\"mb-3\\\">\\n  <CFormLabel htmlFor=\\\"colFormLabelSm\\\" className=\\\"col-sm-2 col-form-label col-form-label-sm\\\">Email</CFormLabel>\\n  <CCol sm={10} >\\n    <CFormInput type=\\\"email\\\" className=\\\"form-control form-control-sm\\\" id=\\\"colFormLabelSm\\\" placeholder=\\\"col-form-label-sm\\\"/>\\n  </CCol>\\n</CRow>\\n<CRow className=\\\"mb-3\\\">\\n  <CFormLabel htmlFor=\\\"colFormLabel\\\" className=\\\"col-sm-2 col-form-label\\\">Email</CFormLabel>\\n  <CCol sm={10} >\\n    <CFormInput type=\\\"email\\\" id=\\\"colFormLabel\\\" placeholder=\\\"col-form-label\\\"/>\\n  </CCol>\\n</CRow>\\n<CRow>\\n  <CFormLabel htmlFor=\\\"colFormLabelLg\\\" className=\\\"col-sm-2 col-form-label col-form-label-lg\\\">Email</CFormLabel>\\n  <CCol sm={10} >\\n    <CFormInput type=\\\"email\\\" className=\\\"form-control form-control-lg\\\" id=\\\"colFormLabelLg\\\" placeholder=\\\"col-form-label-lg\\\"/>\\n  </CCol>\\n</CRow>\\n\")), mdx(\"h2\", {\n    \"id\": \"column-sizing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Column sizing\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#column-sizing\",\n    \"aria-label\": \"column sizing permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"As shown in the previous examples, our grid system allows you to place any number of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CCol>\"), \"s within a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CRow>\"), \". They'll split the available width equally between them. You may also pick a subset of your columns to take up more or less space, while the remaining \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CCol>\"), \"s equally split the rest, with specific column classes like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CCol sm={7} >\"), \".\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CRow, {\n    className: \"g-3\",\n    mdxType: \"CRow\"\n  }, mdx(CCol, {\n    sm: 7,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    placeholder: \"City\",\n    \"aria-label\": \"City\",\n    mdxType: \"CFormInput\"\n  })), mdx(CCol, {\n    sm: true,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    placeholder: \"State\",\n    \"aria-label\": \"State\",\n    mdxType: \"CFormInput\"\n  })), mdx(CCol, {\n    sm: true,\n    mdxType: \"CCol\"\n  }, mdx(CFormInput, {\n    placeholder: \"Zip\",\n    \"aria-label\": \"Zip\",\n    mdxType: \"CFormInput\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CRow className=\\\"g-3\\\">\\n  <CCol sm={7} >\\n    <CFormInput placeholder=\\\"City\\\" aria-label=\\\"City\\\"/>\\n  </CCol>\\n  <CCol sm>\\n    <CFormInput placeholder=\\\"State\\\" aria-label=\\\"State\\\"/>\\n  </CCol>\\n  <CCol sm>\\n    <CFormInput placeholder=\\\"Zip\\\" aria-label=\\\"Zip\\\"/>\\n  </CCol>\\n</CRow>\\n\")), mdx(\"h2\", {\n    \"id\": \"auto-sizing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Auto-sizing\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#auto-sizing\",\n    \"aria-label\": \"auto sizing permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"The example below uses a flexbox utility to vertically center the contents and changes \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CCol>\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CCol xs=\\\"auto\\\">\"), \" so that your columns only take up as much space as needed. Put another way, the column sizes itself based on the contents.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CForm, {\n    className: \"row gy-2 gx-3 align-items-center\",\n    mdxType: \"CForm\"\n  }, mdx(CCol, {\n    xs: \"auto\",\n    mdxType: \"CCol\"\n  }, mdx(CFormLabel, {\n    className: \"visually-hidden\",\n    htmlFor: \"autoSizingInput\",\n    mdxType: \"CFormLabel\"\n  }, \"Name\"), mdx(CFormInput, {\n    id: \"autoSizingInput\",\n    placeholder: \"Jane Doe\",\n    mdxType: \"CFormInput\"\n  })), mdx(CCol, {\n    xs: \"auto\",\n    mdxType: \"CCol\"\n  }, mdx(CFormLabel, {\n    className: \"visually-hidden\",\n    htmlFor: \"autoSizingInputGroup\",\n    mdxType: \"CFormLabel\"\n  }, \"Username\"), mdx(CInputGroup, {\n    mdxType: \"CInputGroup\"\n  }, mdx(CInputGroupText, {\n    mdxType: \"CInputGroupText\"\n  }, \"@\"), mdx(CFormInput, {\n    id: \"autoSizingInputGroup\",\n    placeholder: \"Username\",\n    mdxType: \"CFormInput\"\n  }))), mdx(CCol, {\n    xs: \"auto\",\n    mdxType: \"CCol\"\n  }, mdx(CFormLabel, {\n    className: \"visually-hidden\",\n    htmlFor: \"autoSizingSelect\",\n    mdxType: \"CFormLabel\"\n  }, \"Preference\"), mdx(CFormSelect, {\n    id: \"autoSizingSelect\",\n    mdxType: \"CFormSelect\"\n  }, mdx(\"option\", null, \"Choose...\"), mdx(\"option\", {\n    value: \"1\"\n  }, \"One\"), mdx(\"option\", {\n    value: \"2\"\n  }, \"Two\"), mdx(\"option\", {\n    value: \"3\"\n  }, \"Three\"))), mdx(CCol, {\n    xs: \"auto\",\n    mdxType: \"CCol\"\n  }, mdx(CFormCheck, {\n    type: \"checkbox\",\n    id: \"autoSizingCheck\",\n    label: \"Remember me\",\n    mdxType: \"CFormCheck\"\n  })), mdx(CCol, {\n    xs: \"auto\",\n    mdxType: \"CCol\"\n  }, mdx(CButton, {\n    type: \"submit\",\n    mdxType: \"CButton\"\n  }, \"Submit\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CForm className=\\\"row gy-2 gx-3 align-items-center\\\">\\n  <CCol xs=\\\"auto\\\">\\n    <CFormLabel className=\\\"visually-hidden\\\" htmlFor=\\\"autoSizingInput\\\">Name</CFormLabel>\\n    <CFormInput id=\\\"autoSizingInput\\\" placeholder=\\\"Jane Doe\\\"/>\\n  </CCol>\\n  <CCol xs=\\\"auto\\\">\\n    <CFormLabel className=\\\"visually-hidden\\\" htmlFor=\\\"autoSizingInputGroup\\\">Username</CFormLabel>\\n    <CInputGroup>\\n      <CInputGroupText>@</CInputGroupText>\\n      <CFormInput id=\\\"autoSizingInputGroup\\\" placeholder=\\\"Username\\\"/>\\n    </CInputGroup>\\n  </CCol>\\n  <CCol xs=\\\"auto\\\">\\n    <CFormLabel className=\\\"visually-hidden\\\" htmlFor=\\\"autoSizingSelect\\\">Preference</CFormLabel>\\n    <CFormSelect id=\\\"autoSizingSelect\\\">\\n      <option>Choose...</option>\\n      <option value=\\\"1\\\">One</option>\\n      <option value=\\\"2\\\">Two</option>\\n      <option value=\\\"3\\\">Three</option>\\n    </CFormSelect>\\n  </CCol>\\n  <CCol xs=\\\"auto\\\">\\n    <CFormCheck type=\\\"checkbox\\\" id=\\\"autoSizingCheck\\\" label=\\\"Remember me\\\"/>\\n  </CCol>\\n  <CCol xs=\\\"auto\\\">\\n    <CButton type=\\\"submit\\\">Submit</CButton>\\n  </CCol>\\n</CForm>\\n\")), mdx(\"p\", null, \"You can then remix that once again with size-specific column classes.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CForm, {\n    className: \"row gx-3 gy-2 align-items-center\",\n    mdxType: \"CForm\"\n  }, mdx(CCol, {\n    sm: 3,\n    mdxType: \"CCol\"\n  }, mdx(CFormLabel, {\n    className: \"visually-hidden\",\n    htmlFor: \"specificSizeInputName\",\n    mdxType: \"CFormLabel\"\n  }, \"Name\"), mdx(CFormInput, {\n    id: \"specificSizeInputName\",\n    placeholder: \"Jane Doe\",\n    mdxType: \"CFormInput\"\n  })), mdx(CCol, {\n    sm: 3,\n    mdxType: \"CCol\"\n  }, mdx(CFormLabel, {\n    className: \"visually-hidden\",\n    htmlFor: \"specificSizeInputGroupUsername\",\n    mdxType: \"CFormLabel\"\n  }, \"Username\"), mdx(CInputGroup, {\n    mdxType: \"CInputGroup\"\n  }, mdx(CInputGroupText, {\n    mdxType: \"CInputGroupText\"\n  }, \"@\"), mdx(CFormInput, {\n    id: \"specificSizeInputGroupUsername\",\n    placeholder: \"Username\",\n    mdxType: \"CFormInput\"\n  }))), mdx(CCol, {\n    sm: 3,\n    mdxType: \"CCol\"\n  }, mdx(CFormLabel, {\n    className: \"visually-hidden\",\n    htmlFor: \"specificSizeSelect\",\n    mdxType: \"CFormLabel\"\n  }, \"Preference\"), mdx(CFormSelect, {\n    id: \"specificSizeSelect\",\n    mdxType: \"CFormSelect\"\n  }, mdx(\"option\", null, \"Choose...\"), mdx(\"option\", {\n    value: \"1\"\n  }, \"One\"), mdx(\"option\", {\n    value: \"2\"\n  }, \"Two\"), mdx(\"option\", {\n    value: \"3\"\n  }, \"Three\"))), mdx(CCol, {\n    xs: \"auto\",\n    mdxType: \"CCol\"\n  }, mdx(CFormCheck, {\n    type: \"checkbox\",\n    id: \"autoSizingCheck2\",\n    label: \"Remember me\",\n    mdxType: \"CFormCheck\"\n  })), mdx(CCol, {\n    xs: \"auto\",\n    mdxType: \"CCol\"\n  }, mdx(CButton, {\n    type: \"submit\",\n    mdxType: \"CButton\"\n  }, \"Submit\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CForm className=\\\"row gx-3 gy-2 align-items-center\\\">\\n  <CCol sm={3} >\\n    <CFormLabel className=\\\"visually-hidden\\\" htmlFor=\\\"specificSizeInputName\\\">Name</CFormLabel>\\n    <CFormInput id=\\\"specificSizeInputName\\\" placeholder=\\\"Jane Doe\\\"/>\\n  </CCol>\\n  <CCol sm={3} >\\n    <CFormLabel className=\\\"visually-hidden\\\" htmlFor=\\\"specificSizeInputGroupUsername\\\">Username</CFormLabel>\\n    <CInputGroup>\\n      <CInputGroupText>@</CInputGroupText>\\n      <CFormInput id=\\\"specificSizeInputGroupUsername\\\" placeholder=\\\"Username\\\"/>\\n    </CInputGroup>\\n  </CCol>\\n  <CCol sm={3} >\\n    <CFormLabel className=\\\"visually-hidden\\\" htmlFor=\\\"specificSizeSelect\\\">Preference</CFormLabel>\\n    <CFormSelect id=\\\"specificSizeSelect\\\">\\n      <option>Choose...</option>\\n      <option value=\\\"1\\\">One</option>\\n      <option value=\\\"2\\\">Two</option>\\n      <option value=\\\"3\\\">Three</option>\\n    </CFormSelect>\\n  </CCol>\\n  <CCol xs=\\\"auto\\\">\\n    <CFormCheck type=\\\"checkbox\\\" id=\\\"autoSizingCheck2\\\" label=\\\"Remember me\\\"/>\\n  </CCol>\\n  <CCol xs=\\\"auto\\\">\\n    <CButton type=\\\"submit\\\">Submit</CButton>\\n  </CCol>\\n</CForm>\\n\")), mdx(\"h2\", {\n    \"id\": \"inline-forms\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Inline forms\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#inline-forms\",\n    \"aria-label\": \"inline forms permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CCol xs=\\\"auto\\\">\"), \" class to create horizontal layouts. By adding \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://coreui.io/docs/layout/gutters/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow\"\n  }, \"gutter modifier classes\"), \", we will have gutters in horizontal and vertical directions. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".align-items-center\"), \" aligns the form elements to the middle, making the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CFormCheck>\"), \" align properly.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CForm, {\n    className: \"row row-cols-lg-auto g-3 align-items-center\",\n    mdxType: \"CForm\"\n  }, mdx(CCol, {\n    xs: 12,\n    mdxType: \"CCol\"\n  }, mdx(CFormLabel, {\n    className: \"visually-hidden\",\n    htmlFor: \"inlineFormInputGroupUsername\",\n    mdxType: \"CFormLabel\"\n  }, \"Username\"), mdx(CInputGroup, {\n    mdxType: \"CInputGroup\"\n  }, mdx(CInputGroupText, {\n    mdxType: \"CInputGroupText\"\n  }, \"@\"), mdx(CFormInput, {\n    id: \"inlineFormInputGroupUsername\",\n    placeholder: \"Username\",\n    mdxType: \"CFormInput\"\n  }))), mdx(CCol, {\n    xs: 12,\n    mdxType: \"CCol\"\n  }, mdx(CFormLabel, {\n    className: \"visually-hidden\",\n    htmlFor: \"inlineFormSelectPref\",\n    mdxType: \"CFormLabel\"\n  }, \"Preference\"), mdx(CFormSelect, {\n    id: \"inlineFormSelectPref\",\n    mdxType: \"CFormSelect\"\n  }, mdx(\"option\", null, \"Choose...\"), mdx(\"option\", {\n    value: \"1\"\n  }, \"One\"), mdx(\"option\", {\n    value: \"2\"\n  }, \"Two\"), mdx(\"option\", {\n    value: \"3\"\n  }, \"Three\"))), mdx(CCol, {\n    xs: 12,\n    mdxType: \"CCol\"\n  }, mdx(CFormCheck, {\n    type: \"checkbox\",\n    id: \"inlineFormCheck\",\n    label: \"Remember me\",\n    mdxType: \"CFormCheck\"\n  })), mdx(CCol, {\n    xs: 12,\n    mdxType: \"CCol\"\n  }, mdx(CButton, {\n    type: \"submit\",\n    mdxType: \"CButton\"\n  }, \"Submit\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CForm className=\\\"row row-cols-lg-auto g-3 align-items-center\\\">\\n  <CCol xs={12}>\\n    <CFormLabel className=\\\"visually-hidden\\\" htmlFor=\\\"inlineFormInputGroupUsername\\\">Username</CFormLabel>\\n    <CInputGroup>\\n      <CInputGroupText>@</CInputGroupText>\\n      <CFormInput id=\\\"inlineFormInputGroupUsername\\\" placeholder=\\\"Username\\\"/>\\n    </CInputGroup>\\n  </CCol>\\n\\n  <CCol xs={12}>\\n    <CFormLabel className=\\\"visually-hidden\\\" htmlFor=\\\"inlineFormSelectPref\\\">Preference</CFormLabel>\\n    <CFormSelect id=\\\"inlineFormSelectPref\\\">\\n      <option>Choose...</option>\\n      <option value=\\\"1\\\">One</option>\\n      <option value=\\\"2\\\">Two</option>\\n      <option value=\\\"3\\\">Three</option>\\n    </CFormSelect>\\n  </CCol>\\n\\n  <CCol xs={12}>\\n    <CFormCheck type=\\\"checkbox\\\" id=\\\"inlineFormCheck\\\" label=\\\"Remember me\\\"/>\\n  </CCol>\\n\\n  <CCol xs={12}>\\n    <CButton type=\\\"submit\\\">Submit</CButton>\\n  </CCol>\\n</CForm>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"React Form Layout","description":"Give your forms some structure—from inline to horizontal to custom grid implementations—with our form layout options.","route":"/forms/layout"},"tableOfContents":{"items":[{"url":"#forms","title":"Forms"},{"url":"#utilities","title":"Utilities"},{"url":"#form-grid","title":"Form grid"},{"url":"#gutters","title":"Gutters"},{"url":"#horizontal-form","title":"Horizontal form","items":[{"url":"#horizontal-form-label-sizing","title":"Horizontal form label sizing"}]},{"url":"#column-sizing","title":"Column sizing"},{"url":"#auto-sizing","title":"Auto-sizing"},{"url":"#inline-forms","title":"Inline forms"}]}}},"pageContext":{"id":"4d74c215-3f50-57ec-8338-6a26f95c501e"}},
    "staticQueryHashes": ["4202924991"]}