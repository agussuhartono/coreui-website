{
    "componentChunkName": "component---src-templates-docs-tsx",
    "path": "/forms/radio/",
    "result": {"data":{"site":{"siteMetadata":{"title":"CoreUI for React.js"}},"mdx":{"id":"c186bde2-2cd5-5b6a-800f-d4160e3cf8b9","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React Radio Components\",\n  \"name\": \"Radio\",\n  \"description\": \"Create consistent cross-browser and cross-device radios with our React radio component.\",\n  \"menu\": \"Forms\",\n  \"route\": \"/forms/radio\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"approach\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Approach\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#approach\",\n    \"aria-label\": \"approach permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Browser default radios are replaced with the help of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CFormCheck radio>\"), \". Radios are for selecting one option from many.\"), mdx(\"h2\", {\n    \"id\": \"radios\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Radios\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#radios\",\n    \"aria-label\": \"radios permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"disabled\"), \" attribute and the associated \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<label>\"), \"s are automatically styled to match with a lighter color to help indicate the input's state.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CFormCheck, {\n    type: \"radio\",\n    name: \"flexRadioDefault\",\n    id: \"flexRadioDefault1\",\n    label: \"Default radio\",\n    mdxType: \"CFormCheck\"\n  }), mdx(CFormCheck, {\n    type: \"radio\",\n    name: \"flexRadioDefault\",\n    id: \"flexRadioDefault2\",\n    label: \"Checked radio\",\n    defaultChecked: true,\n    mdxType: \"CFormCheck\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CFormCheck type=\\\"radio\\\" name=\\\"flexRadioDefault\\\" id=\\\"flexRadioDefault1\\\" label=\\\"Default radio\\\"/>\\n<CFormCheck type=\\\"radio\\\" name=\\\"flexRadioDefault\\\" id=\\\"flexRadioDefault2\\\" label=\\\"Checked radio\\\" defaultChecked/>\\n\")), mdx(\"h3\", {\n    \"id\": \"disabled\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Disabled\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#disabled\",\n    \"aria-label\": \"disabled permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CFormCheck, {\n    type: \"radio\",\n    name: \"flexRadioDisabled\",\n    id: \"flexRadioDisabled\",\n    label: \"Disabled radio\",\n    disabled: true,\n    mdxType: \"CFormCheck\"\n  }), mdx(CFormCheck, {\n    type: \"radio\",\n    name: \"flexRadioDisabled\",\n    id: \"flexRadioCheckedDisabled\",\n    label: \"Disabled checked radio\",\n    defaultChecked: true,\n    disabled: true,\n    mdxType: \"CFormCheck\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CFormCheck type=\\\"radio\\\" name=\\\"flexRadioDisabled\\\" id=\\\"flexRadioDisabled\\\" label=\\\"Disabled radio\\\" disabled/>\\n<CFormCheck type=\\\"radio\\\" name=\\\"flexRadioDisabled\\\" id=\\\"flexRadioCheckedDisabled\\\" label=\\\"Disabled checked radio\\\" defaultChecked disabled/>\\n\")), mdx(\"h2\", {\n    \"id\": \"default-stacked\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Default (stacked)\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#default-stacked\",\n    \"aria-label\": \"default stacked permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"By default, any number of radios that are immediate sibling will be vertically stacked and appropriately spaced.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CFormCheck, {\n    type: \"radio\",\n    name: \"exampleRadios\",\n    id: \"exampleRadios1\",\n    value: \"option1\",\n    label: \"Default radio\",\n    defaultChecked: true,\n    mdxType: \"CFormCheck\"\n  }), mdx(CFormCheck, {\n    type: \"radio\",\n    name: \"exampleRadios\",\n    id: \"exampleRadios2\",\n    value: \"option2\",\n    label: \"Second default radio\",\n    mdxType: \"CFormCheck\"\n  }), mdx(CFormCheck, {\n    type: \"radio\",\n    name: \"exampleRadios\",\n    id: \"exampleRadios3\",\n    value: \"option3\",\n    label: \"Disabled radio\",\n    disabled: true,\n    mdxType: \"CFormCheck\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CFormCheck type=\\\"radio\\\" name=\\\"exampleRadios\\\" id=\\\"exampleRadios1\\\" value=\\\"option1\\\" label=\\\"Default radio\\\" defaultChecked/>\\n<CFormCheck type=\\\"radio\\\" name=\\\"exampleRadios\\\" id=\\\"exampleRadios2\\\" value=\\\"option2\\\" label=\\\"Second default radio\\\"/>\\n<CFormCheck type=\\\"radio\\\" name=\\\"exampleRadios\\\" id=\\\"exampleRadios3\\\" value=\\\"option3\\\" label=\\\"Disabled radio\\\" disabled/>\\n\")), mdx(\"h2\", {\n    \"id\": \"inline\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Inline\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#inline\",\n    \"aria-label\": \"inline permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Group radios on the same horizontal row by adding \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inline\"), \" boolean property to any \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CFormCheck radio>\"), \".\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CFormCheck, {\n    inline: true,\n    type: \"radio\",\n    name: \"inlineRadioOptions\",\n    id: \"inlineCheckbox1\",\n    value: \"option1\",\n    label: \"1\",\n    mdxType: \"CFormCheck\"\n  }), mdx(CFormCheck, {\n    inline: true,\n    type: \"radio\",\n    name: \"inlineRadioOptions\",\n    id: \"inlineCheckbox2\",\n    value: \"option2\",\n    label: \"2\",\n    mdxType: \"CFormCheck\"\n  }), mdx(CFormCheck, {\n    inline: true,\n    type: \"radio\",\n    name: \"inlineRadioOptions\",\n    id: \"inlineCheckbox3\",\n    value: \"option3\",\n    label: \"3 (disabled)\",\n    disabled: true,\n    mdxType: \"CFormCheck\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CFormCheck inline type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" id=\\\"inlineCheckbox1\\\" value=\\\"option1\\\" label=\\\"1\\\"/>\\n<CFormCheck inline type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" id=\\\"inlineCheckbox2\\\" value=\\\"option2\\\" label=\\\"2\\\"/>\\n<CFormCheck inline type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" id=\\\"inlineCheckbox3\\\" value=\\\"option3\\\" label=\\\"3 (disabled)\\\" disabled/>\\n\")), mdx(\"h2\", {\n    \"id\": \"without-labels\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Without labels\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#without-labels\",\n    \"aria-label\": \"without labels permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Remember to still provide some form of accessible name for assistive technologies (for instance, using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aria-label\"), \").\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CFormCheck, {\n    type: \"radio\",\n    name: \"radioNoLabel\",\n    id: \"radioNoLabel\",\n    value: \"\",\n    \"aria-label\": \"...\",\n    mdxType: \"CFormCheck\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CFormCheck type=\\\"radio\\\" name=\\\"radioNoLabel\\\" id=\\\"radioNoLabel\\\" value=\\\"\\\" aria-label=\\\"...\\\"/>\\n\")), mdx(\"h2\", {\n    \"id\": \"radio-toggle-buttons\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Radio toggle buttons\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#radio-toggle-buttons\",\n    \"aria-label\": \"radio toggle buttons permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Create button-like radio buttons by using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"button\"), \" boolean property on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CFormCheck radio>\"), \" component. These toggle buttons can further be grouped in a button group if needed.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CFormCheck, {\n    button: {\n      color: 'secondary'\n    },\n    type: \"radio\",\n    name: \"options\",\n    id: \"option1\",\n    autoComplete: \"off\",\n    label: \"Checked\",\n    defaultChecked: true,\n    mdxType: \"CFormCheck\"\n  }), mdx(CFormCheck, {\n    button: {\n      color: 'secondary'\n    },\n    type: \"radio\",\n    name: \"options\",\n    id: \"option2\",\n    autoComplete: \"off\",\n    label: \"Radio\",\n    mdxType: \"CFormCheck\"\n  }), mdx(CFormCheck, {\n    button: {\n      color: 'secondary'\n    },\n    type: \"radio\",\n    name: \"options\",\n    id: \"option3\",\n    autoComplete: \"off\",\n    label: \"Radio\",\n    disabled: true,\n    mdxType: \"CFormCheck\"\n  }), mdx(CFormCheck, {\n    button: {\n      color: 'secondary'\n    },\n    type: \"radio\",\n    name: \"options\",\n    id: \"option4\",\n    autoComplete: \"off\",\n    label: \"Radio\",\n    mdxType: \"CFormCheck\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CFormCheck button={{ color: 'secondary' }} type=\\\"radio\\\" name=\\\"options\\\" id=\\\"option1\\\" autoComplete=\\\"off\\\" label=\\\"Checked\\\" defaultChecked/>\\n<CFormCheck button={{ color: 'secondary' }} type=\\\"radio\\\" name=\\\"options\\\" id=\\\"option2\\\" autoComplete=\\\"off\\\" label=\\\"Radio\\\"/>\\n<CFormCheck button={{ color: 'secondary' }} type=\\\"radio\\\" name=\\\"options\\\" id=\\\"option3\\\" autoComplete=\\\"off\\\" label=\\\"Radio\\\" disabled/>\\n<CFormCheck button={{ color: 'secondary' }} type=\\\"radio\\\" name=\\\"options\\\" id=\\\"option4\\\" autoComplete=\\\"off\\\" label=\\\"Radio\\\"/>\\n\")), mdx(\"h3\", {\n    \"id\": \"outlined-styles\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Outlined styles\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#outlined-styles\",\n    \"aria-label\": \"outlined styles permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Different variants of button, such at the various outlined styles, are supported.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CFormCheck, {\n    button: {\n      color: 'success',\n      variant: 'outline'\n    },\n    type: \"radio\",\n    name: \"options-outlined\",\n    id: \"success-outlined\",\n    autoComplete: \"off\",\n    label: \"Radio\",\n    defaultChecked: true,\n    mdxType: \"CFormCheck\"\n  }), mdx(CFormCheck, {\n    button: {\n      color: 'danger',\n      variant: 'outline'\n    },\n    type: \"radio\",\n    name: \"options-outlined\",\n    id: \"danger-outlined\",\n    autoComplete: \"off\",\n    label: \"Radio\",\n    mdxType: \"CFormCheck\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CFormCheck button={{ color: 'success', variant: 'outline' }} type=\\\"radio\\\" name=\\\"options-outlined\\\" id=\\\"success-outlined\\\" autoComplete=\\\"off\\\" label=\\\"Radio\\\" defaultChecked/>\\n<CFormCheck button={{ color: 'danger', variant: 'outline' }} type=\\\"radio\\\" name=\\\"options-outlined\\\" id=\\\"danger-outlined\\\" autoComplete=\\\"off\\\" label=\\\"Radio\\\"/>\\n\")), mdx(\"h2\", {\n    \"id\": \"api\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"API\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#api\",\n    \"aria-label\": \"api permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"cformcheck\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CFormCheck\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cformcheck\",\n    \"aria-label\": \"cformcheck permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CFormCheck } from '@coreui/react'\\n// or\\nimport CFormCheck from '@coreui/react/src/components/form/CFormCheck'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"button\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Create button-like checkboxes and radio buttons.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ButtonObject\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"feedback\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Provide valuable, actionable feedback.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"feedbackInvalid\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Provide valuable, actionable feedback.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"feedbackValid\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Provide valuable, actionable invalid feedback when using standard HTML form validation which applied two CSS pseudo-classes, \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \":invalid\"), \" and \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \":valid\"), \".\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"floatingLabel\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Provide valuable, actionable valid feedback when using standard HTML form validation which applied two CSS pseudo-classes, \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \":invalid\"), \" and \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \":valid\"), \".\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"hitArea\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Sets hit area to the full area of the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'full'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"id\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The id global attribute defines an identifier (ID) that must be unique in the whole document.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"indeterminate\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Input Checkbox indeterminate Property.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"inline\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Group checkboxes or radios on the same horizontal row by adding.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"invalid\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set component validation state to invalid.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"label\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The element represents a caption for a component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"tooltipFeedback\"), \" \", mdx(\"br\", {\n    parentName: \"td\"\n  }), mdx(\"div\", {\n    parentName: \"td\",\n    \"className\": \"badge bg-primary\"\n  }, \"4.2.0+\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Display validation feedback in a styled tooltip.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"type\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Specifies the type of component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'checkbox'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'radio'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"checkbox\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"valid\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set component validation state to valid.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"React Radio Components","description":"Create consistent cross-browser and cross-device radios with our React radio component.","route":"/forms/radio"},"tableOfContents":{"items":[{"url":"#approach","title":"Approach"},{"url":"#radios","title":"Radios","items":[{"url":"#disabled","title":"Disabled"}]},{"url":"#default-stacked","title":"Default (stacked)"},{"url":"#inline","title":"Inline"},{"url":"#without-labels","title":"Without labels"},{"url":"#radio-toggle-buttons","title":"Radio toggle buttons","items":[{"url":"#outlined-styles","title":"Outlined styles"}]},{"url":"#api","title":"API","items":[{"url":"#cformcheck","title":"CFormCheck"}]}]}}},"pageContext":{"id":"c186bde2-2cd5-5b6a-800f-d4160e3cf8b9"}},
    "staticQueryHashes": ["4202924991"]}