{
    "componentChunkName": "component---src-docs-templates-docs-tsx",
    "path": "/components/progress/",
    "result": {"data":{"site":{"siteMetadata":{"title":"CoreUI for React.js"}},"mdx":{"id":"7f090cc4-cfac-5146-847a-b15dfddbdda8","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React Progress Component\",\n  \"name\": \"Progress\",\n  \"description\": \"Documentation and examples for using React progress bars featuring support for stacked bars, animated backgrounds, and text labels.\",\n  \"menu\": \"Components\",\n  \"route\": \"/components/progress\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"example\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Example\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#example\",\n    \"aria-label\": \"example permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Progress components are built with two HTML elements, some CSS to set the width, and a few attributes. We don't use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress\"\n  }, \"the HTML5 \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"<progress>\"), \" element\"), \", ensuring you can stack progress bars, animate them, and place text labels over them.\"), mdx(\"h2\", {\n    \"id\": \"basic-usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Basic usage\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#basic-usage\",\n    \"aria-label\": \"basic usage permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    value: 0,\n    mdxType: \"CProgressBar\"\n  })), mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    value: 25,\n    mdxType: \"CProgressBar\"\n  })), mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    value: 50,\n    mdxType: \"CProgressBar\"\n  })), mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    value: 75,\n    mdxType: \"CProgressBar\"\n  })), mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    value: 100,\n    mdxType: \"CProgressBar\"\n  }))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"  <CProgress className=\\\"mb-3\\\">\\n    <CProgressBar value={0}/>\\n  </CProgress>\\n  <CProgress className=\\\"mb-3\\\">\\n    <CProgressBar value={25}/>\\n  </CProgress>\\n  <CProgress className=\\\"mb-3\\\">\\n    <CProgressBar value={50}/>\\n  </CProgress>\\n  <CProgress className=\\\"mb-3\\\">\\n    <CProgressBar value={75}/>\\n  </CProgress>\\n  <CProgress className=\\\"mb-3\\\">\\n    <CProgressBar value={100}/>\\n  </CProgress>\\n\")), mdx(\"h2\", {\n    \"id\": \"labels\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Labels\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#labels\",\n    \"aria-label\": \"labels permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Add labels to your progress bars by placing text within the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CProgressBar>\"), \".\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    value: 25,\n    mdxType: \"CProgressBar\"\n  }, \"25%\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CProgress className=\\\"mb-3\\\">\\n  <CProgressBar value={25}>25%</CProgressBar>\\n</CProgress>\\n\")), mdx(\"h2\", {\n    \"id\": \"height\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Height\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#height\",\n    \"aria-label\": \"height permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"We only set a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"height\"), \" value on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CProgress>\"), \", so if you change that value the inner \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CProgressBar>\"), \" will automatically resize accordingly.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CProgress, {\n    height: 1,\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    value: 25,\n    mdxType: \"CProgressBar\"\n  })), mdx(CProgress, {\n    height: 20,\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    value: 25,\n    mdxType: \"CProgressBar\"\n  }))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"  <CProgress height={1} className=\\\"mb-3\\\">\\n    <CProgressBar value={25}></CProgressBar>\\n  </CProgress>\\n  <CProgress height={20} className=\\\"mb-3\\\">\\n    <CProgressBar value={25}></CProgressBar>\\n  </CProgress>\\n\")), mdx(\"h2\", {\n    \"id\": \"backgrounds\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Backgrounds\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#backgrounds\",\n    \"aria-label\": \"backgrounds permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color\"), \" prop to change the appearance of individual progress bars.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    color: \"success\",\n    value: 25,\n    mdxType: \"CProgressBar\"\n  })), mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    color: \"info\",\n    value: 50,\n    mdxType: \"CProgressBar\"\n  })), mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    color: \"warning\",\n    value: 75,\n    mdxType: \"CProgressBar\"\n  })), mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    color: \"danger\",\n    value: 100,\n    mdxType: \"CProgressBar\"\n  }))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"  <CProgress className=\\\"mb-3\\\">\\n    <CProgressBar color=\\\"success\\\" value={25}/>\\n  </CProgress>\\n  <CProgress className=\\\"mb-3\\\">\\n    <CProgressBar color=\\\"info\\\" value={50}/>\\n  </CProgress>\\n  <CProgress className=\\\"mb-3\\\">\\n    <CProgressBar color=\\\"warning\\\" value={75}/>\\n  </CProgress>\\n  <CProgress className=\\\"mb-3\\\">\\n    <CProgressBar color=\\\"danger\\\" value={100}/>\\n  </CProgress>\\n\")), mdx(\"h2\", {\n    \"id\": \"multiple-bars\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Multiple bars\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#multiple-bars\",\n    \"aria-label\": \"multiple bars permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Include multiple progress bars in a progress component if you need.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    value: 15,\n    mdxType: \"CProgressBar\"\n  }), mdx(CProgressBar, {\n    color: \"success\",\n    value: 30,\n    mdxType: \"CProgressBar\"\n  }), mdx(CProgressBar, {\n    color: \"info\",\n    value: 20,\n    mdxType: \"CProgressBar\"\n  }))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<CProgress className=\\\"mb-3\\\">\\n  <CProgressBar value={15} />\\n  <CProgressBar color=\\\"success\\\" value={30} />\\n  <CProgressBar color=\\\"info\\\" value={20} />\\n</CProgress>\\n\")), mdx(\"h2\", {\n    \"id\": \"striped\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Striped\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#striped\",\n    \"aria-label\": \"striped permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"variant=\\\"striped\\\"\"), \" to any \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CProgressBar>\"), \" to apply a stripe via CSS gradient over the progress bar's background color.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    color: \"success\",\n    variant: \"striped\",\n    value: 25,\n    mdxType: \"CProgressBar\"\n  })), mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    color: \"info\",\n    variant: \"striped\",\n    value: 50,\n    mdxType: \"CProgressBar\"\n  })), mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    color: \"warning\",\n    variant: \"striped\",\n    value: 75,\n    mdxType: \"CProgressBar\"\n  })), mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    color: \"danger\",\n    variant: \"striped\",\n    value: 100,\n    mdxType: \"CProgressBar\"\n  }))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"  <CProgress className=\\\"mb-3\\\">\\n    <CProgressBar color=\\\"success\\\" variant=\\\"striped\\\" value={25}/>\\n  </CProgress>\\n  <CProgress className=\\\"mb-3\\\">\\n    <CProgressBar color=\\\"info\\\" variant=\\\"striped\\\" value={50}/>\\n  </CProgress>\\n  <CProgress className=\\\"mb-3\\\">\\n    <CProgressBar color=\\\"warning\\\" variant=\\\"striped\\\" value={75}/>\\n  </CProgress>\\n  <CProgress className=\\\"mb-3\\\">\\n    <CProgressBar color=\\\"danger\\\" variant=\\\"striped\\\" value={100}/>\\n  </CProgress>\\n\")), mdx(\"h2\", {\n    \"id\": \"animated-stripes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Animated stripes\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#animated-stripes\",\n    \"aria-label\": \"animated stripes permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"p\", null, \"The striped gradient can also be animated. Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"animated\"), \" property to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CProgressBar>\"), \" to animate the stripes right to left via CSS3 animations.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    color: \"success\",\n    variant: \"striped\",\n    animated: true,\n    value: 25,\n    mdxType: \"CProgressBar\"\n  })), mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    color: \"info\",\n    variant: \"striped\",\n    animated: true,\n    value: 50,\n    mdxType: \"CProgressBar\"\n  })), mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    color: \"warning\",\n    variant: \"striped\",\n    animated: true,\n    value: 75,\n    mdxType: \"CProgressBar\"\n  })), mdx(CProgress, {\n    className: \"mb-3\",\n    mdxType: \"CProgress\"\n  }, mdx(CProgressBar, {\n    color: \"danger\",\n    variant: \"striped\",\n    animated: true,\n    value: 100,\n    mdxType: \"CProgressBar\"\n  }))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"  <CProgress className=\\\"mb-3\\\">\\n    <CProgressBar color=\\\"success\\\" variant=\\\"striped\\\" animated value={25}/>\\n  </CProgress>\\n  <CProgress className=\\\"mb-3\\\">\\n    <CProgressBar color=\\\"info\\\" variant=\\\"striped\\\" animated value={50}/>\\n  </CProgress>\\n  <CProgress className=\\\"mb-3\\\">\\n    <CProgressBar color=\\\"warning\\\" variant=\\\"striped\\\" animated value={75}/>\\n  </CProgress>\\n  <CProgress className=\\\"mb-3\\\">\\n    <CProgressBar color=\\\"danger\\\" variant=\\\"striped\\\" animated value={100}/>\\n  </CProgress>\\n\")), mdx(\"h2\", {\n    \"id\": \"api\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"API\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#api\",\n    \"aria-label\": \"api permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"cprogress\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CProgress\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cprogress\",\n    \"aria-label\": \"cprogress permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CProgress } from '@coreui/react'\\n// or\\nimport CProgress from '@coreui/react/src/components/progress/CProgress'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"animated\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Use to animate the stripes right to left via CSS3 animations.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"color\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Sets the color context of the component to one of CoreUI\\u2019s themed colors.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"{'primary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'secondary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'success'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'danger'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'warning'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'info'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'dark'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'light'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'primary-gradient'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'secondary-gradient'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'success-gradient'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'danger-gradient'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'warning-gradient'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'info-gradient'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'dark-gradient'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'light-gradient'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string }\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"height\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Sets the height of the component. If you set that value the inner \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"<CProgressBar>\"), \" will automatically resize accordingly.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"thin\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Makes progress bar thinner.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"value\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The percent to progress the ProgressBar (out of 100).\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"variant\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set the progress bar variant to optional striped.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'striped'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"white\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Change the default color to white.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))), mdx(\"h3\", {\n    \"id\": \"cprogressbar\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"CProgressBar\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cprogressbar\",\n    \"aria-label\": \"cprogressbar permalink\",\n    \"className\": \"anchor-link after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"pre\", {\n    parentName: \"div\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { CProgressBar } from '@coreui/react'\\n// or\\nimport CProgressBar from '@coreui/react/src/components/progress/CProgressBar'\\n\")), mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Property\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"animated\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Use to animate the stripes right to left via CSS3 animations.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"className\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the component.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"color\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Sets the color context of the component to one of CoreUI\\u2019s themed colors.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"{'primary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'secondary'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'success'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'danger'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'warning'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'info'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'dark'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'light'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'primary-gradient'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'secondary-gradient'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'success-gradient'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'danger-gradient'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'warning-gradient'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'info-gradient'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'dark-gradient'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'light-gradient'\"), \" | \", mdx(\"code\", {\n    parentName: \"td\"\n  }, \"string }\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"value\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"The percent to progress the ProgressBar.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"number\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"variant\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set the progress bar variant to optional striped.\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, mdx(\"code\", {\n    parentName: \"td\"\n  }, \"'striped'\")), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"-\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"React Progress Component","description":"Documentation and examples for using React progress bars featuring support for stacked bars, animated backgrounds, and text labels.","route":"/components/progress"},"tableOfContents":{"items":[{"url":"#example","title":"Example"},{"url":"#basic-usage","title":"Basic usage"},{"url":"#labels","title":"Labels"},{"url":"#height","title":"Height"},{"url":"#backgrounds","title":"Backgrounds"},{"url":"#multiple-bars","title":"Multiple bars"},{"url":"#striped","title":"Striped"},{"url":"#animated-stripes","title":"Animated stripes"},{"url":"#api","title":"API","items":[{"url":"#cprogress","title":"CProgress"},{"url":"#cprogressbar","title":"CProgressBar"}]}]}}},"pageContext":{"id":"7f090cc4-cfac-5146-847a-b15dfddbdda8"}},
    "staticQueryHashes": ["4202924991"]}