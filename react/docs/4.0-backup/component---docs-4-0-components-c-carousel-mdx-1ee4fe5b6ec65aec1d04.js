(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{"X7+q":function(e,t,s){"use strict";s.r(t),s.d(t,"_frontmatter",(function(){return C})),s.d(t,"default",(function(){return u}));var l=s("Fcif"),o=s("+I+c"),a=(s("mXGw"),s("/FXl")),r=s("BIGe"),n=s("ZFoC"),i=s("bzer"),c=s("BXLp"),d=(s("aD51"),["components"]),C={};void 0!==C&&C&&C===Object(C)&&Object.isExtensible(C)&&!C.hasOwnProperty("__filemeta")&&Object.defineProperty(C,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/4.0/components/CCarousel.mdx"}});var b={_frontmatter:C},m=r.a;function u(e){var t,s,u,p,h,O,j=e.components,y=Object(o.a)(e,d);return Object(a.b)(m,Object(l.a)({},b,y,{components:j,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"how-it-works"},"How it works"),Object(a.b)("p",null,"The React carousel is a slideshow for cycling within a group of content. It runs with a group of images, text, or html elements. It also incorporates support for previous/next buttons."),Object(a.b)("p",null,"In browsers where the ",Object(a.b)("a",{parentName:"p",href:"https://www.w3.org/TR/page-visibility/"},"Page Visibility API")," is supported, the carousel will avoid sliding when the webpage is not visible to the user (such as when the browser tab is inactive, the browser window is minimized, etc.)."),Object(a.b)("h2",{id:"example"},"Example"),Object(a.b)("p",null,"Carousels don't automatically normalize slide dimensions. As such, you may want to use extra utilities or custom methods to properly size content. While carousels support previous/next controls and indicators, they're not explicitly expected. Add and customize as you see fit."),Object(a.b)("h3",{id:"slides-only"},"Slides only"),Object(a.b)(n.c,{__position:0,__code:'() => {\n  return (\n    <CCarousel>\n      <CCarouselItem>\n        <img className="d-block w-100" src={slides[0]} alt="slide 1" />\n      </CCarouselItem>\n      <CCarouselItem>\n        <img className="d-block w-100" src={slides[1]} alt="slide 2" />\n      </CCarouselItem>\n      <CCarouselItem>\n        <img className="d-block w-100" src={slides[2]} alt="slide 3" />\n      </CCarouselItem>\n    </CCarousel>\n  )\n}',__scope:(t={props:y,DefaultLayout:r.a,Playground:n.c,Props:n.d,CCallout:i.q,CCarousel:i.C,CCarouselCaption:i.D,CCarouselControl:i.E,CCarouselIndicators:i.F,CCarouselInner:i.G,CCarouselItem:i.H,slides:c.a,slidesLight:c.b},t.DefaultLayout=r.a,t._frontmatter=C,t),mdxType:"Playground"},(function(){return Object(a.b)(i.C,{mdxType:"CCarousel"},Object(a.b)(i.H,{mdxType:"CCarouselItem"},Object(a.b)("img",{className:"d-block w-100",src:c.a[0],alt:"slide 1"})),Object(a.b)(i.H,{mdxType:"CCarouselItem"},Object(a.b)("img",{className:"d-block w-100",src:c.a[1],alt:"slide 2"})),Object(a.b)(i.H,{mdxType:"CCarouselItem"},Object(a.b)("img",{className:"d-block w-100",src:c.a[2],alt:"slide 3"})))})),Object(a.b)("h3",{id:"with-controls"},"With controls"),Object(a.b)("p",null,"Adding in the previous and next controls by ",Object(a.b)("inlineCode",{parentName:"p"},"controls")," property."),Object(a.b)(n.c,{__position:1,__code:'() => {\n  return (\n    <CCarousel controls>\n      <CCarouselItem>\n        <img className="d-block w-100" src={slides[0]} alt="slide 1" />\n      </CCarouselItem>\n      <CCarouselItem>\n        <img className="d-block w-100" src={slides[1]} alt="slide 2" />\n      </CCarouselItem>\n      <CCarouselItem>\n        <img className="d-block w-100" src={slides[2]} alt="slide 3" />\n      </CCarouselItem>\n    </CCarousel>\n  )\n}',__scope:(s={props:y,DefaultLayout:r.a,Playground:n.c,Props:n.d,CCallout:i.q,CCarousel:i.C,CCarouselCaption:i.D,CCarouselControl:i.E,CCarouselIndicators:i.F,CCarouselInner:i.G,CCarouselItem:i.H,slides:c.a,slidesLight:c.b},s.DefaultLayout=r.a,s._frontmatter=C,s),mdxType:"Playground"},(function(){return Object(a.b)(i.C,{controls:!0,mdxType:"CCarousel"},Object(a.b)(i.H,{mdxType:"CCarouselItem"},Object(a.b)("img",{className:"d-block w-100",src:c.a[0],alt:"slide 1"})),Object(a.b)(i.H,{mdxType:"CCarouselItem"},Object(a.b)("img",{className:"d-block w-100",src:c.a[1],alt:"slide 2"})),Object(a.b)(i.H,{mdxType:"CCarouselItem"},Object(a.b)("img",{className:"d-block w-100",src:c.a[2],alt:"slide 3"})))})),Object(a.b)("h3",{id:"with-indicators"},"With indicators"),Object(a.b)("p",null,"You can attach the indicators to the carousel, lengthwise the controls, too."),Object(a.b)(n.c,{__position:2,__code:'() => {\n  return (\n    <CCarousel controls indicators>\n      <CCarouselItem>\n        <img className="d-block w-100" src={slides[0]} alt="slide 1" />\n      </CCarouselItem>\n      <CCarouselItem>\n        <img className="d-block w-100" src={slides[1]} alt="slide 2" />\n      </CCarouselItem>\n      <CCarouselItem>\n        <img className="d-block w-100" src={slides[2]} alt="slide 3" />\n      </CCarouselItem>\n    </CCarousel>\n  )\n}',__scope:(u={props:y,DefaultLayout:r.a,Playground:n.c,Props:n.d,CCallout:i.q,CCarousel:i.C,CCarouselCaption:i.D,CCarouselControl:i.E,CCarouselIndicators:i.F,CCarouselInner:i.G,CCarouselItem:i.H,slides:c.a,slidesLight:c.b},u.DefaultLayout=r.a,u._frontmatter=C,u),mdxType:"Playground"},(function(){return Object(a.b)(i.C,{controls:!0,indicators:!0,mdxType:"CCarousel"},Object(a.b)(i.H,{mdxType:"CCarouselItem"},Object(a.b)("img",{className:"d-block w-100",src:c.a[0],alt:"slide 1"})),Object(a.b)(i.H,{mdxType:"CCarouselItem"},Object(a.b)("img",{className:"d-block w-100",src:c.a[1],alt:"slide 2"})),Object(a.b)(i.H,{mdxType:"CCarouselItem"},Object(a.b)("img",{className:"d-block w-100",src:c.a[2],alt:"slide 3"})))})),Object(a.b)("h3",{id:"with-captions"},"With captions"),Object(a.b)("p",null,"You can add captions to slides with the ",Object(a.b)("inlineCode",{parentName:"p"},"<CCarouselCaption>")," element within any ",Object(a.b)("inlineCode",{parentName:"p"},"<CCarouselItem>"),". They can be immediately hidden on smaller viewports, as shown below, with optional ",Object(a.b)("a",{parentName:"p",href:"https://coreui.io/4.0/utilities/display"},"display utilities"),". We hide them with ",Object(a.b)("inlineCode",{parentName:"p"},".d-none")," and draw them back on medium-sized devices with ",Object(a.b)("inlineCode",{parentName:"p"},".d-md-block"),"."),Object(a.b)(n.c,{__position:3,__code:'() => {\n  return (\n    <CCarousel controls indicators>\n      <CCarouselItem>\n        <img className="d-block w-100" src={slides[0]} alt="slide 1" />\n        <CCarouselCaption className="d-none d-md-block">\n          <h5>First slide label</h5>\n          <p>Some representative placeholder content for the first slide.</p>\n        </CCarouselCaption>\n      </CCarouselItem>\n      <CCarouselItem>\n        <img className="d-block w-100" src={slides[1]} alt="slide 2" />\n        <CCarouselCaption className="d-none d-md-block">\n          <h5>Second slide label</h5>\n          <p>Some representative placeholder content for the first slide.</p>\n        </CCarouselCaption>\n      </CCarouselItem>\n      <CCarouselItem>\n        <img className="d-block w-100" src={slides[2]} alt="slide 3" />\n        <CCarouselCaption className="d-none d-md-block">\n          <h5>Third slide label</h5>\n          <p>Some representative placeholder content for the first slide.</p>\n        </CCarouselCaption>\n      </CCarouselItem>\n    </CCarousel>\n  )\n}',__scope:(p={props:y,DefaultLayout:r.a,Playground:n.c,Props:n.d,CCallout:i.q,CCarousel:i.C,CCarouselCaption:i.D,CCarouselControl:i.E,CCarouselIndicators:i.F,CCarouselInner:i.G,CCarouselItem:i.H,slides:c.a,slidesLight:c.b},p.DefaultLayout=r.a,p._frontmatter=C,p),mdxType:"Playground"},(function(){return Object(a.b)(i.C,{controls:!0,indicators:!0,mdxType:"CCarousel"},Object(a.b)(i.H,{mdxType:"CCarouselItem"},Object(a.b)("img",{className:"d-block w-100",src:c.a[0],alt:"slide 1"}),Object(a.b)(i.D,{className:"d-none d-md-block",mdxType:"CCarouselCaption"},Object(a.b)("h5",null,"First slide label"),Object(a.b)("p",null,"Some representative placeholder content for the first slide."))),Object(a.b)(i.H,{mdxType:"CCarouselItem"},Object(a.b)("img",{className:"d-block w-100",src:c.a[1],alt:"slide 2"}),Object(a.b)(i.D,{className:"d-none d-md-block",mdxType:"CCarouselCaption"},Object(a.b)("h5",null,"Second slide label"),Object(a.b)("p",null,"Some representative placeholder content for the first slide."))),Object(a.b)(i.H,{mdxType:"CCarouselItem"},Object(a.b)("img",{className:"d-block w-100",src:c.a[2],alt:"slide 3"}),Object(a.b)(i.D,{className:"d-none d-md-block",mdxType:"CCarouselCaption"},Object(a.b)("h5",null,"Third slide label"),Object(a.b)("p",null,"Some representative placeholder content for the first slide."))))})),Object(a.b)("h3",{id:"crossfade"},"Crossfade"),Object(a.b)("p",null,"Add ",Object(a.b)("inlineCode",{parentName:"p"},'transition="crossfade"')," to your carousel to animate slides with a fade transition instead of a slide."),Object(a.b)(n.c,{__position:4,__code:'() => {\n  return (\n    <CCarousel controls transition="crossfade">\n      <CCarouselItem>\n        <img className="d-block w-100" src={slides[0]} alt="slide 1" />\n      </CCarouselItem>\n      <CCarouselItem>\n        <img className="d-block w-100" src={slides[1]} alt="slide 2" />\n      </CCarouselItem>\n      <CCarouselItem>\n        <img className="d-block w-100" src={slides[2]} alt="slide 3" />\n      </CCarouselItem>\n    </CCarousel>\n  )\n}',__scope:(h={props:y,DefaultLayout:r.a,Playground:n.c,Props:n.d,CCallout:i.q,CCarousel:i.C,CCarouselCaption:i.D,CCarouselControl:i.E,CCarouselIndicators:i.F,CCarouselInner:i.G,CCarouselItem:i.H,slides:c.a,slidesLight:c.b},h.DefaultLayout=r.a,h._frontmatter=C,h),mdxType:"Playground"},(function(){return Object(a.b)(i.C,{controls:!0,transition:"crossfade",mdxType:"CCarousel"},Object(a.b)(i.H,{mdxType:"CCarouselItem"},Object(a.b)("img",{className:"d-block w-100",src:c.a[0],alt:"slide 1"})),Object(a.b)(i.H,{mdxType:"CCarouselItem"},Object(a.b)("img",{className:"d-block w-100",src:c.a[1],alt:"slide 2"})),Object(a.b)(i.H,{mdxType:"CCarouselItem"},Object(a.b)("img",{className:"d-block w-100",src:c.a[2],alt:"slide 3"})))})),Object(a.b)("h2",{id:"dark-variant"},"Dark variant"),Object(a.b)("p",null,"Add ",Object(a.b)("inlineCode",{parentName:"p"},"dark")," property to the ",Object(a.b)("inlineCode",{parentName:"p"},"CCarousel")," for darker controls, indicators, and captions. Controls have been inverted from their default white fill with the ",Object(a.b)("inlineCode",{parentName:"p"},"filter")," CSS property. Captions and controls have additional Sass variables that customize the ",Object(a.b)("inlineCode",{parentName:"p"},"color")," and ",Object(a.b)("inlineCode",{parentName:"p"},"background-color"),"."),Object(a.b)(n.c,{__position:5,__code:'() => {\n  return (\n    <CCarousel controls indicators dark>\n      <CCarouselItem>\n        <img className="d-block w-100" src={slidesLight[0]} alt="slide 1" />\n        <CCarouselCaption className="d-none d-md-block">\n          <h5>First slide label</h5>\n          <p>Some representative placeholder content for the first slide.</p>\n        </CCarouselCaption>\n      </CCarouselItem>\n      <CCarouselItem>\n        <img className="d-block w-100" src={slidesLight[1]} alt="slide 2" />\n        <CCarouselCaption className="d-none d-md-block">\n          <h5>Second slide label</h5>\n          <p>Some representative placeholder content for the first slide.</p>\n        </CCarouselCaption>\n      </CCarouselItem>\n      <CCarouselItem>\n        <img className="d-block w-100" src={slidesLight[2]} alt="slide 3" />\n        <CCarouselCaption className="d-none d-md-block">\n          <h5>Third slide label</h5>\n          <p>Some representative placeholder content for the first slide.</p>\n        </CCarouselCaption>\n      </CCarouselItem>\n    </CCarousel>\n  )\n}',__scope:(O={props:y,DefaultLayout:r.a,Playground:n.c,Props:n.d,CCallout:i.q,CCarousel:i.C,CCarouselCaption:i.D,CCarouselControl:i.E,CCarouselIndicators:i.F,CCarouselInner:i.G,CCarouselItem:i.H,slides:c.a,slidesLight:c.b},O.DefaultLayout=r.a,O._frontmatter=C,O),mdxType:"Playground"},(function(){return Object(a.b)(i.C,{controls:!0,indicators:!0,dark:!0,mdxType:"CCarousel"},Object(a.b)(i.H,{mdxType:"CCarouselItem"},Object(a.b)("img",{className:"d-block w-100",src:c.b[0],alt:"slide 1"}),Object(a.b)(i.D,{className:"d-none d-md-block",mdxType:"CCarouselCaption"},Object(a.b)("h5",null,"First slide label"),Object(a.b)("p",null,"Some representative placeholder content for the first slide."))),Object(a.b)(i.H,{mdxType:"CCarouselItem"},Object(a.b)("img",{className:"d-block w-100",src:c.b[1],alt:"slide 2"}),Object(a.b)(i.D,{className:"d-none d-md-block",mdxType:"CCarouselCaption"},Object(a.b)("h5",null,"Second slide label"),Object(a.b)("p",null,"Some representative placeholder content for the first slide."))),Object(a.b)(i.H,{mdxType:"CCarouselItem"},Object(a.b)("img",{className:"d-block w-100",src:c.b[2],alt:"slide 3"}),Object(a.b)(i.D,{className:"d-none d-md-block",mdxType:"CCarouselCaption"},Object(a.b)("h5",null,"Third slide label"),Object(a.b)("p",null,"Some representative placeholder content for the first slide."))))})),Object(a.b)("h2",{id:"api"},"API"),Object(a.b)("h3",{id:"ccarousel"},"CCarousel"),Object(a.b)(n.d,{of:i.C,mdxType:"Props"}),Object(a.b)("h3",{id:"ccarouselcaption"},"CCarouselCaption"),Object(a.b)(n.d,{of:i.D,mdxType:"Props"}),Object(a.b)("h3",{id:"ccarouselcontrol"},"CCarouselControl"),Object(a.b)(n.d,{of:i.E,mdxType:"Props"}),Object(a.b)("h3",{id:"ccarouselindicators"},"CCarouselIndicators"),Object(a.b)(n.d,{of:i.F,mdxType:"Props"}),Object(a.b)("h3",{id:"ccarouselinner"},"CCarouselInner"),Object(a.b)(n.d,{of:i.G,mdxType:"Props"}),Object(a.b)("h3",{id:"ccarouselitem"},"CCarouselItem"),Object(a.b)(n.d,{of:i.H,mdxType:"Props"}))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/4.0/components/CCarousel.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-4-0-components-c-carousel-mdx-1ee4fe5b6ec65aec1d04.js.map