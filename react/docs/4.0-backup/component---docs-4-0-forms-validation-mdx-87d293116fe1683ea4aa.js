(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{"7jS4":function(e,t,o){"use strict";o.r(t),o.d(t,"_frontmatter",(function(){return C})),o.d(t,"default",(function(){return u}));var a=o("Fcif"),n=o("+I+c"),i=o("mXGw"),d=o("/FXl"),r=o("BIGe"),l=o("ZFoC"),m=o("bzer"),b=(o("aD51"),["components"]),C={};void 0!==C&&C&&C===Object(C)&&Object.isExtensible(C)&&!C.hasOwnProperty("__filemeta")&&Object.defineProperty(C,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/4.0/forms/Validation.mdx"}});var p={_frontmatter:C},c=r.a;function u(e){var t,o,u,s,F,v=e.components,y=Object(n.a)(e,b);return Object(d.b)(c,Object(a.a)({},p,y,{components:v,mdxType:"MDXLayout"}),Object(d.b)("h2",{id:"custom-styles"},"Custom styles"),Object(d.b)("p",null,"For custom CoreUI form validation messages, you'll need to add the ",Object(d.b)("inlineCode",{parentName:"p"},"noValidate")," boolean property to your ",Object(d.b)("inlineCode",{parentName:"p"},"<CForm>"),". This disables the browser default feedback tooltips, but still provides access to the form validation APIs in JavaScript. Try to submit the form below; our JavaScript will intercept the submit button and relay feedback to you. When attempting to submit, you'll see the ",Object(d.b)("inlineCode",{parentName:"p"},":invalid")," and ",Object(d.b)("inlineCode",{parentName:"p"},":valid")," styles applied to your form controls."),Object(d.b)("p",null,"Custom feedback styles apply custom colors, borders, focus styles, and background icons to better communicate feedback. "),Object(d.b)(l.c,{__position:0,__code:'() => {\n  const [validated, setValidated] = useState(false)\n  const handleSubmit = event => {\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setValidated(true)\n  }\n  return (\n    <CForm\n      className="row g-3 needs-validation"\n      noValidate\n      validated={validated}\n      onSubmit={handleSubmit}\n    >\n      <CCol md={4}>\n        <CFormLabel htmlFor="validationCustom01">Email</CFormLabel>\n        <CFormInput\n          type="text"\n          id="validationCustom01"\n          defaultValue="Mark"\n          required\n        />\n        <CFormFeedback valid>Looks good!</CFormFeedback>\n      </CCol>\n      <CCol md={4}>\n        <CFormLabel htmlFor="validationCustom02">Email</CFormLabel>\n        <CFormInput\n          type="text"\n          id="validationCustom02"\n          defaultValue="Otto"\n          required\n        />\n        <CFormFeedback valid>Looks good!</CFormFeedback>\n      </CCol>\n      <CCol md={4}>\n        <CFormLabel htmlFor="validationCustomUsername">Username</CFormLabel>\n        <CInputGroup className="has-validation">\n          <CInputGroupText id="inputGroupPrepend">@</CInputGroupText>\n          <CFormInput\n            type="text"\n            id="validationCustomUsername"\n            defaultValue=""\n            aria-describedby="inputGroupPrepend"\n            required\n          />\n          <CFormFeedback invalid>Please choose a username.</CFormFeedback>\n        </CInputGroup>\n      </CCol>\n      <CCol md={6}>\n        <CFormLabel htmlFor="validationCustom03">City</CFormLabel>\n        <CFormInput type="text" id="validationCustom03" required />\n        <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>\n      </CCol>\n      <CCol md={3}>\n        <CFormLabel htmlFor="validationCustom04">City</CFormLabel>\n        <CFormSelect id="validationCustom04">\n          <option disabled>Choose...</option>\n          <option>...</option>\n        </CFormSelect>\n        <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>\n      </CCol>\n      <CCol md={3}>\n        <CFormLabel htmlFor="validationCustom05">City</CFormLabel>\n        <CFormInput type="text" id="validationCustom05" required />\n        <CFormFeedback invalid>Please provide a valid zip.</CFormFeedback>\n      </CCol>\n      <CCol xs={12}>\n        <CFormCheck\n          type="checkbox"\n          id="invalidCheck"\n          label="Agree to terms and conditions"\n          required\n        />\n        <CFormFeedback invalid>\n          You must agree before submitting.\n        </CFormFeedback>\n      </CCol>\n      <CCol xs={12}>\n        <CButton color="primary" type="submit">\n          Submit form\n        </CButton>\n      </CCol>\n    </CForm>\n  )\n}',__scope:(t={props:y,DefaultLayout:r.a,Playground:l.c,Props:l.d,useState:i.useState,CButton:m.n,CDropdown:m.M,CDropdownDivider:m.N,CDropdownHeader:m.O,CDropdownItem:m.P,CDropdownItemPlain:m.Q,CDropdownMenu:m.R,CDropdownToggle:m.S,CForm:m.U,CFormCheck:m.V,CFormInput:m.Y,CFormFeedback:m.W,CFormLabel:m.Z,CFormSelect:m.bb,CInputGroup:m.mb,CInputGroupText:m.nb,CCol:m.J,CRow:m.Ub},t.DefaultLayout=r.a,t._frontmatter=C,t),mdxType:"Playground"},(function(){var e=Object(i.useState)(!1),t=e[0],o=e[1];return Object(d.b)(m.U,{className:"row g-3 needs-validation",noValidate:!0,validated:t,onSubmit:function(e){!1===e.currentTarget.checkValidity()&&(e.preventDefault(),e.stopPropagation()),o(!0)},mdxType:"CForm"},Object(d.b)(m.J,{md:4,mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationCustom01",mdxType:"CFormLabel"},"Email"),Object(d.b)(m.Y,{type:"text",id:"validationCustom01",defaultValue:"Mark",required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{valid:!0,mdxType:"CFormFeedback"},"Looks good!")),Object(d.b)(m.J,{md:4,mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationCustom02",mdxType:"CFormLabel"},"Email"),Object(d.b)(m.Y,{type:"text",id:"validationCustom02",defaultValue:"Otto",required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{valid:!0,mdxType:"CFormFeedback"},"Looks good!")),Object(d.b)(m.J,{md:4,mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationCustomUsername",mdxType:"CFormLabel"},"Username"),Object(d.b)(m.mb,{className:"has-validation",mdxType:"CInputGroup"},Object(d.b)(m.nb,{id:"inputGroupPrepend",mdxType:"CInputGroupText"},"@"),Object(d.b)(m.Y,{type:"text",id:"validationCustomUsername",defaultValue:"","aria-describedby":"inputGroupPrepend",required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"Please choose a username."))),Object(d.b)(m.J,{md:6,mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationCustom03",mdxType:"CFormLabel"},"City"),Object(d.b)(m.Y,{type:"text",id:"validationCustom03",required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"Please provide a valid city.")),Object(d.b)(m.J,{md:3,mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationCustom04",mdxType:"CFormLabel"},"City"),Object(d.b)(m.bb,{id:"validationCustom04",mdxType:"CFormSelect"},Object(d.b)("option",{disabled:!0},"Choose..."),Object(d.b)("option",null,"...")),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"Please provide a valid city.")),Object(d.b)(m.J,{md:3,mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationCustom05",mdxType:"CFormLabel"},"City"),Object(d.b)(m.Y,{type:"text",id:"validationCustom05",required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"Please provide a valid zip.")),Object(d.b)(m.J,{xs:12,mdxType:"CCol"},Object(d.b)(m.V,{type:"checkbox",id:"invalidCheck",label:"Agree to terms and conditions",required:!0,mdxType:"CFormCheck"}),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"You must agree before submitting.")),Object(d.b)(m.J,{xs:12,mdxType:"CCol"},Object(d.b)(m.n,{color:"primary",type:"submit",mdxType:"CButton"},"Submit form")))})),Object(d.b)("h2",{id:"browser-defaults"},"Browser defaults"),Object(d.b)("p",null,"Not interested in custom validation feedback messages or writing JavaScript to change form behaviors? All good, you can use the browser defaults. Try submitting the form below. Depending on your browser and OS, you'll see a slightly different style of feedback."),Object(d.b)("p",null,"While these feedback styles cannot be styled with CSS, you can still customize the feedback text through JavaScript."),Object(d.b)(l.c,{__position:1,__code:'() => {\n  const [validated, setValidated] = useState(false)\n  const handleSubmit = event => {\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setValidated(true)\n  }\n  return (\n    <CForm\n      className="row g-3 needs-validation"\n      validated={validated}\n      onSubmit={handleSubmit}\n    >\n      <CCol md={4}>\n        <CFormLabel htmlFor="validationDefault01">Email</CFormLabel>\n        <CFormInput\n          type="text"\n          id="validationDefault01"\n          defaultValue="Mark"\n          required\n        />\n        <CFormFeedback valid>Looks good!</CFormFeedback>\n      </CCol>\n      <CCol md={4}>\n        <CFormLabel htmlFor="validationDefault02">Email</CFormLabel>\n        <CFormInput\n          type="text"\n          id="validationDefault02"\n          defaultValue="Otto"\n          required\n        />\n        <CFormFeedback valid>Looks good!</CFormFeedback>\n      </CCol>\n      <CCol md={4}>\n        <CFormLabel htmlFor="validationDefaultUsername">Username</CFormLabel>\n        <CInputGroup className="has-validation">\n          <CInputGroupText id="inputGroupPrepend02">@</CInputGroupText>\n          <CFormInput\n            type="text"\n            id="validationDefaultUsername"\n            defaultValue=""\n            aria-describedby="inputGroupPrepend02"\n            required\n          />\n          <CFormFeedback invalid>Please choose a username.</CFormFeedback>\n        </CInputGroup>\n      </CCol>\n      <CCol md={6}>\n        <CFormLabel htmlFor="validationDefault03">City</CFormLabel>\n        <CFormInput type="text" id="validationDefault03" required />\n        <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>\n      </CCol>\n      <CCol md={3}>\n        <CFormLabel htmlFor="validationDefault04">City</CFormLabel>\n        <CFormSelect id="validationDefault04">\n          <option disabled>Choose...</option>\n          <option>...</option>\n        </CFormSelect>\n        <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>\n      </CCol>\n      <CCol md={3}>\n        <CFormLabel htmlFor="validationDefault05">City</CFormLabel>\n        <CFormInput type="text" id="validationDefault05" required />\n        <CFormFeedback invalid>Please provide a valid zip.</CFormFeedback>\n      </CCol>\n      <CCol xs={12}>\n        <CFormCheck\n          type="checkbox"\n          id="invalidCheck"\n          label="Agree to terms and conditions"\n          required\n        />\n        <CFormFeedback invalid>\n          You must agree before submitting.\n        </CFormFeedback>\n      </CCol>\n      <CCol xs={12}>\n        <CButton color="primary" type="submit">\n          Submit form\n        </CButton>\n      </CCol>\n    </CForm>\n  )\n}',__scope:(o={props:y,DefaultLayout:r.a,Playground:l.c,Props:l.d,useState:i.useState,CButton:m.n,CDropdown:m.M,CDropdownDivider:m.N,CDropdownHeader:m.O,CDropdownItem:m.P,CDropdownItemPlain:m.Q,CDropdownMenu:m.R,CDropdownToggle:m.S,CForm:m.U,CFormCheck:m.V,CFormInput:m.Y,CFormFeedback:m.W,CFormLabel:m.Z,CFormSelect:m.bb,CInputGroup:m.mb,CInputGroupText:m.nb,CCol:m.J,CRow:m.Ub},o.DefaultLayout=r.a,o._frontmatter=C,o),mdxType:"Playground"},(function(){var e=Object(i.useState)(!1),t=e[0],o=e[1];return Object(d.b)(m.U,{className:"row g-3 needs-validation",validated:t,onSubmit:function(e){!1===e.currentTarget.checkValidity()&&(e.preventDefault(),e.stopPropagation()),o(!0)},mdxType:"CForm"},Object(d.b)(m.J,{md:4,mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationDefault01",mdxType:"CFormLabel"},"Email"),Object(d.b)(m.Y,{type:"text",id:"validationDefault01",defaultValue:"Mark",required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{valid:!0,mdxType:"CFormFeedback"},"Looks good!")),Object(d.b)(m.J,{md:4,mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationDefault02",mdxType:"CFormLabel"},"Email"),Object(d.b)(m.Y,{type:"text",id:"validationDefault02",defaultValue:"Otto",required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{valid:!0,mdxType:"CFormFeedback"},"Looks good!")),Object(d.b)(m.J,{md:4,mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationDefaultUsername",mdxType:"CFormLabel"},"Username"),Object(d.b)(m.mb,{className:"has-validation",mdxType:"CInputGroup"},Object(d.b)(m.nb,{id:"inputGroupPrepend02",mdxType:"CInputGroupText"},"@"),Object(d.b)(m.Y,{type:"text",id:"validationDefaultUsername",defaultValue:"","aria-describedby":"inputGroupPrepend02",required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"Please choose a username."))),Object(d.b)(m.J,{md:6,mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationDefault03",mdxType:"CFormLabel"},"City"),Object(d.b)(m.Y,{type:"text",id:"validationDefault03",required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"Please provide a valid city.")),Object(d.b)(m.J,{md:3,mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationDefault04",mdxType:"CFormLabel"},"City"),Object(d.b)(m.bb,{id:"validationDefault04",mdxType:"CFormSelect"},Object(d.b)("option",{disabled:!0},"Choose..."),Object(d.b)("option",null,"...")),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"Please provide a valid city.")),Object(d.b)(m.J,{md:3,mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationDefault05",mdxType:"CFormLabel"},"City"),Object(d.b)(m.Y,{type:"text",id:"validationDefault05",required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"Please provide a valid zip.")),Object(d.b)(m.J,{xs:12,mdxType:"CCol"},Object(d.b)(m.V,{type:"checkbox",id:"invalidCheck",label:"Agree to terms and conditions",required:!0,mdxType:"CFormCheck"}),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"You must agree before submitting.")),Object(d.b)(m.J,{xs:12,mdxType:"CCol"},Object(d.b)(m.n,{color:"primary",type:"submit",mdxType:"CButton"},"Submit form")))})),Object(d.b)("h2",{id:"server-side"},"Server side"),Object(d.b)("p",null,"We recommend using client-side validation, but in case you require server-side validation, you can indicate invalid and valid form fields with ",Object(d.b)("inlineCode",{parentName:"p"},"invalid")," and ",Object(d.b)("inlineCode",{parentName:"p"},"valid")," boolean properties."),Object(d.b)("p",null,"For invalid fields, ensure that the invalid feedback/error message is associated with the relevant form field using ",Object(d.b)("inlineCode",{parentName:"p"},"aria-describedby")," (noting that this attribute allows more than one ",Object(d.b)("inlineCode",{parentName:"p"},"id")," to be referenced, in case the field already points to additional form text)."),Object(d.b)(l.c,{__position:2,__code:'<CForm className="row g-3 needs-validation">\n  <CCol md={4}>\n    <CFormLabel htmlFor="validationServer01">Email</CFormLabel>\n    <CFormInput\n      type="text"\n      id="validationServer01"\n      defaultValue="Mark"\n      valid\n      required\n    />\n    <CFormFeedback valid>Looks good!</CFormFeedback>\n  </CCol>\n  <CCol md={4}>\n    <CFormLabel htmlFor="validationServer02">Email</CFormLabel>\n    <CFormInput\n      type="text"\n      id="validationServer02"\n      defaultValue="Otto"\n      valid\n      required\n    />\n    <CFormFeedback valid>Looks good!</CFormFeedback>\n  </CCol>\n  <CCol md={4}>\n    <CFormLabel htmlFor="validationServerUsername">Username</CFormLabel>\n    <CInputGroup className="has-validation">\n      <CInputGroupText id="inputGroupPrepend03">@</CInputGroupText>\n      <CFormInput\n        type="text"\n        id="validationServerUsername"\n        defaultValue=""\n        aria-describedby="inputGroupPrepend03"\n        invalid\n        required\n      />\n      <CFormFeedback invalid>Please choose a username.</CFormFeedback>\n    </CInputGroup>\n  </CCol>\n  <CCol md={6}>\n    <CFormLabel htmlFor="validationServer03">City</CFormLabel>\n    <CFormInput type="text" id="validationServer03" invalid required />\n    <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>\n  </CCol>\n  <CCol md={3}>\n    <CFormLabel htmlFor="validationServer04">City</CFormLabel>\n    <CFormSelect id="validationServer04" invalid>\n      <option disabled>Choose...</option>\n      <option>...</option>\n    </CFormSelect>\n    <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>\n  </CCol>\n  <CCol md={3}>\n    <CFormLabel htmlFor="validationServer05">City</CFormLabel>\n    <CFormInput type="text" id="validationServer05" invalid required />\n    <CFormFeedback invalid>Please provide a valid zip.</CFormFeedback>\n  </CCol>\n  <CCol xs={12}>\n    <CFormCheck\n      type="checkbox"\n      id="invalidCheck"\n      label="Agree to terms and conditions"\n      invalid\n      required\n    />\n    <CFormFeedback invalid>You must agree before submitting.</CFormFeedback>\n  </CCol>\n  <CCol xs={12}>\n    <CButton color="primary" type="submit">\n      Submit form\n    </CButton>\n  </CCol>\n</CForm>',__scope:(u={props:y,DefaultLayout:r.a,Playground:l.c,Props:l.d,useState:i.useState,CButton:m.n,CDropdown:m.M,CDropdownDivider:m.N,CDropdownHeader:m.O,CDropdownItem:m.P,CDropdownItemPlain:m.Q,CDropdownMenu:m.R,CDropdownToggle:m.S,CForm:m.U,CFormCheck:m.V,CFormInput:m.Y,CFormFeedback:m.W,CFormLabel:m.Z,CFormSelect:m.bb,CInputGroup:m.mb,CInputGroupText:m.nb,CCol:m.J,CRow:m.Ub},u.DefaultLayout=r.a,u._frontmatter=C,u),mdxType:"Playground"},Object(d.b)(m.U,{className:"row g-3 needs-validation",mdxType:"CForm"},Object(d.b)(m.J,{md:4,mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationServer01",mdxType:"CFormLabel"},"Email"),Object(d.b)(m.Y,{type:"text",id:"validationServer01",defaultValue:"Mark",valid:!0,required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{valid:!0,mdxType:"CFormFeedback"},"Looks good!")),Object(d.b)(m.J,{md:4,mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationServer02",mdxType:"CFormLabel"},"Email"),Object(d.b)(m.Y,{type:"text",id:"validationServer02",defaultValue:"Otto",valid:!0,required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{valid:!0,mdxType:"CFormFeedback"},"Looks good!")),Object(d.b)(m.J,{md:4,mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationServerUsername",mdxType:"CFormLabel"},"Username"),Object(d.b)(m.mb,{className:"has-validation",mdxType:"CInputGroup"},Object(d.b)(m.nb,{id:"inputGroupPrepend03",mdxType:"CInputGroupText"},"@"),Object(d.b)(m.Y,{type:"text",id:"validationServerUsername",defaultValue:"","aria-describedby":"inputGroupPrepend03",invalid:!0,required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"Please choose a username."))),Object(d.b)(m.J,{md:6,mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationServer03",mdxType:"CFormLabel"},"City"),Object(d.b)(m.Y,{type:"text",id:"validationServer03",invalid:!0,required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"Please provide a valid city.")),Object(d.b)(m.J,{md:3,mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationServer04",mdxType:"CFormLabel"},"City"),Object(d.b)(m.bb,{id:"validationServer04",invalid:!0,mdxType:"CFormSelect"},Object(d.b)("option",{disabled:!0},"Choose..."),Object(d.b)("option",null,"...")),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"Please provide a valid city.")),Object(d.b)(m.J,{md:3,mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationServer05",mdxType:"CFormLabel"},"City"),Object(d.b)(m.Y,{type:"text",id:"validationServer05",invalid:!0,required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"Please provide a valid zip.")),Object(d.b)(m.J,{xs:12,mdxType:"CCol"},Object(d.b)(m.V,{type:"checkbox",id:"invalidCheck",label:"Agree to terms and conditions",invalid:!0,required:!0,mdxType:"CFormCheck"}),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"You must agree before submitting.")),Object(d.b)(m.J,{xs:12,mdxType:"CCol"},Object(d.b)(m.n,{color:"primary",type:"submit",mdxType:"CButton"},"Submit form")))),Object(d.b)("h2",{id:"supported-elements"},"Supported elements"),Object(d.b)("p",null,"Validation styles are available for the following form controls and components:"),Object(d.b)("ul",null,Object(d.b)("li",{parentName:"ul"},Object(d.b)("inlineCode",{parentName:"li"},"<CFormCheck>"),"s"),Object(d.b)("li",{parentName:"ul"},Object(d.b)("inlineCode",{parentName:"li"},"<CFormInput>"),"s"),Object(d.b)("li",{parentName:"ul"},Object(d.b)("inlineCode",{parentName:"li"},"<CFormSelect>"),"s"),Object(d.b)("li",{parentName:"ul"},Object(d.b)("inlineCode",{parentName:"li"},"<CFormTextarea>"),"s")),Object(d.b)(l.c,{__position:3,__code:'<CForm validated={true}>\n  <div className="mb-3">\n    <CFormLabel htmlFor="validationTextarea" className="form-label">\n      Textarea\n    </CFormLabel>\n    <CFormInput\n      component="textarea"\n      id="validationTextarea"\n      placeholder="Required example textarea"\n      invalid\n      required\n    ></CFormInput>\n    <CFormFeedback invalid>\n      Please enter a message in the textarea.\n    </CFormFeedback>\n  </div>\n  <CFormCheck\n    className="mb-3"\n    id="validationFormCheck1"\n    label="Check this checkbox"\n    required\n  />\n  <CFormFeedback invalid>Example invalid feedback text</CFormFeedback>\n\n  <CFormCheck\n    type="radio"\n    name="radio-stacked"\n    id="validationFormCheck2"\n    label="Check this checkbox"\n    required\n  />\n\n  <CFormCheck\n    className="mb-3"\n    type="radio"\n    name="radio-stacked"\n    id="validationFormCheck3"\n    label="Or toggle this other radio"\n    required\n  />\n  <CFormFeedback invalid>More example invalid feedback text</CFormFeedback>\n\n  <div className="mb-3">\n    <CFormSelect required aria-label="select example">\n      <option>Open this select menu</option>\n      <option value="1">One</option>\n      <option value="2">Two</option>\n      <option value="3">Three</option>\n    </CFormSelect>\n    <CFormFeedback invalid>Example invalid select feedback</CFormFeedback>\n  </div>\n\n  <div className="mb-3">\n    <CFormInput\n      type="file"\n      id="validationTextarea"\n      aria-label="file example"\n      required\n    />\n    <CFormFeedback invalid>Example invalid form file feedback</CFormFeedback>\n  </div>\n\n  <div className="mb-3">\n    <CButton type="submit" color="primary" disabled>\n      Submit form\n    </CButton>\n  </div>\n</CForm>',__scope:(s={props:y,DefaultLayout:r.a,Playground:l.c,Props:l.d,useState:i.useState,CButton:m.n,CDropdown:m.M,CDropdownDivider:m.N,CDropdownHeader:m.O,CDropdownItem:m.P,CDropdownItemPlain:m.Q,CDropdownMenu:m.R,CDropdownToggle:m.S,CForm:m.U,CFormCheck:m.V,CFormInput:m.Y,CFormFeedback:m.W,CFormLabel:m.Z,CFormSelect:m.bb,CInputGroup:m.mb,CInputGroupText:m.nb,CCol:m.J,CRow:m.Ub},s.DefaultLayout=r.a,s._frontmatter=C,s),mdxType:"Playground"},Object(d.b)(m.U,{validated:!0,mdxType:"CForm"},Object(d.b)("div",{className:"mb-3"},Object(d.b)(m.Z,{htmlFor:"validationTextarea",className:"form-label",mdxType:"CFormLabel"},"Textarea"),Object(d.b)(m.Y,{component:"textarea",id:"validationTextarea",placeholder:"Required example textarea",invalid:!0,required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"Please enter a message in the textarea.")),Object(d.b)(m.V,{className:"mb-3",id:"validationFormCheck1",label:"Check this checkbox",required:!0,mdxType:"CFormCheck"}),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"Example invalid feedback text"),Object(d.b)(m.V,{type:"radio",name:"radio-stacked",id:"validationFormCheck2",label:"Check this checkbox",required:!0,mdxType:"CFormCheck"}),Object(d.b)(m.V,{className:"mb-3",type:"radio",name:"radio-stacked",id:"validationFormCheck3",label:"Or toggle this other radio",required:!0,mdxType:"CFormCheck"}),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"More example invalid feedback text"),Object(d.b)("div",{className:"mb-3"},Object(d.b)(m.bb,{required:!0,"aria-label":"select example",mdxType:"CFormSelect"},Object(d.b)("option",null,"Open this select menu"),Object(d.b)("option",{value:"1"},"One"),Object(d.b)("option",{value:"2"},"Two"),Object(d.b)("option",{value:"3"},"Three")),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"Example invalid select feedback")),Object(d.b)("div",{className:"mb-3"},Object(d.b)(m.Y,{type:"file",id:"validationTextarea","aria-label":"file example",required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{invalid:!0,mdxType:"CFormFeedback"},"Example invalid form file feedback")),Object(d.b)("div",{className:"mb-3"},Object(d.b)(m.n,{type:"submit",color:"primary",disabled:!0,mdxType:"CButton"},"Submit form")))),Object(d.b)("h2",{id:"tooltips"},"Tooltips"),Object(d.b)("p",null,"If your form layout allows it, you can swap the text for the tooltip to display validation feedback in a styled tooltip. Be sure to have a parent with ",Object(d.b)("inlineCode",{parentName:"p"},"position: relative")," on it for tooltip positioning. In the example below, our column classes have this already, but your project may require an alternative setup."),Object(d.b)(l.c,{__position:4,__code:'() => {\n  const [validated, setValidated] = useState(false)\n  const handleSubmit = event => {\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setValidated(true)\n  }\n  return (\n    <CForm\n      className="row g-3 needs-validation"\n      noValidate\n      validated={validated}\n      onSubmit={handleSubmit}\n    >\n      <CCol md={4} className="position-relative">\n        <CFormLabel htmlFor="validationTooltip01">Email</CFormLabel>\n        <CFormInput\n          type="text"\n          id="validationTooltip01"\n          defaultValue="Mark"\n          required\n        />\n        <CFormFeedback tooltip valid>\n          Looks good!\n        </CFormFeedback>\n      </CCol>\n      <CCol md={4} className="position-relative">\n        <CFormLabel htmlFor="validationTooltip02">Email</CFormLabel>\n        <CFormInput\n          type="text"\n          id="validationTooltip02"\n          defaultValue="Otto"\n          required\n        />\n        <CFormFeedback tooltip valid>\n          Looks good!\n        </CFormFeedback>\n      </CCol>\n      <CCol md={4} className="position-relative">\n        <CFormLabel htmlFor="validationTooltipUsername">Username</CFormLabel>\n        <CInputGroup className="has-validation">\n          <CInputGroupText id="inputGroupPrepend">@</CInputGroupText>\n          <CFormInput\n            type="text"\n            id="validationTooltipUsername"\n            defaultValue=""\n            aria-describedby="inputGroupPrepend"\n            required\n          />\n          <CFormFeedback tooltip invalid>\n            Please choose a username.\n          </CFormFeedback>\n        </CInputGroup>\n      </CCol>\n      <CCol md={6} className="position-relative">\n        <CFormLabel htmlFor="validationTooltip03">City</CFormLabel>\n        <CFormInput type="text" id="validationTooltip03" required />\n        <CFormFeedback tooltip invalid>\n          Please provide a valid city.\n        </CFormFeedback>\n      </CCol>\n      <CCol md={3} className="position-relative">\n        <CFormLabel htmlFor="validationTooltip04">City</CFormLabel>\n        <CFormSelect id="validationTooltip04" required>\n          <option disabled value="">\n            Choose...\n          </option>\n          <option>...</option>\n        </CFormSelect>\n        <CFormFeedback tooltip invalid>\n          Please provide a valid city.\n        </CFormFeedback>\n      </CCol>\n      <CCol md={3} className="position-relative">\n        <CFormLabel htmlFor="validationTooltip05">City</CFormLabel>\n        <CFormInput type="text" id="validationTooltip05" required />\n        <CFormFeedback tooltip invalid>\n          Please provide a valid zip.\n        </CFormFeedback>\n      </CCol>\n      <CCol xs={12} className="position-relative">\n        <CButton color="primary" type="submit">\n          Submit form\n        </CButton>\n      </CCol>\n    </CForm>\n  )\n}',__scope:(F={props:y,DefaultLayout:r.a,Playground:l.c,Props:l.d,useState:i.useState,CButton:m.n,CDropdown:m.M,CDropdownDivider:m.N,CDropdownHeader:m.O,CDropdownItem:m.P,CDropdownItemPlain:m.Q,CDropdownMenu:m.R,CDropdownToggle:m.S,CForm:m.U,CFormCheck:m.V,CFormInput:m.Y,CFormFeedback:m.W,CFormLabel:m.Z,CFormSelect:m.bb,CInputGroup:m.mb,CInputGroupText:m.nb,CCol:m.J,CRow:m.Ub},F.DefaultLayout=r.a,F._frontmatter=C,F),mdxType:"Playground"},(function(){var e=Object(i.useState)(!1),t=e[0],o=e[1];return Object(d.b)(m.U,{className:"row g-3 needs-validation",noValidate:!0,validated:t,onSubmit:function(e){!1===e.currentTarget.checkValidity()&&(e.preventDefault(),e.stopPropagation()),o(!0)},mdxType:"CForm"},Object(d.b)(m.J,{md:4,className:"position-relative",mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationTooltip01",mdxType:"CFormLabel"},"Email"),Object(d.b)(m.Y,{type:"text",id:"validationTooltip01",defaultValue:"Mark",required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{tooltip:!0,valid:!0,mdxType:"CFormFeedback"},"Looks good!")),Object(d.b)(m.J,{md:4,className:"position-relative",mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationTooltip02",mdxType:"CFormLabel"},"Email"),Object(d.b)(m.Y,{type:"text",id:"validationTooltip02",defaultValue:"Otto",required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{tooltip:!0,valid:!0,mdxType:"CFormFeedback"},"Looks good!")),Object(d.b)(m.J,{md:4,className:"position-relative",mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationTooltipUsername",mdxType:"CFormLabel"},"Username"),Object(d.b)(m.mb,{className:"has-validation",mdxType:"CInputGroup"},Object(d.b)(m.nb,{id:"inputGroupPrepend",mdxType:"CInputGroupText"},"@"),Object(d.b)(m.Y,{type:"text",id:"validationTooltipUsername",defaultValue:"","aria-describedby":"inputGroupPrepend",required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{tooltip:!0,invalid:!0,mdxType:"CFormFeedback"},"Please choose a username."))),Object(d.b)(m.J,{md:6,className:"position-relative",mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationTooltip03",mdxType:"CFormLabel"},"City"),Object(d.b)(m.Y,{type:"text",id:"validationTooltip03",required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{tooltip:!0,invalid:!0,mdxType:"CFormFeedback"},"Please provide a valid city.")),Object(d.b)(m.J,{md:3,className:"position-relative",mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationTooltip04",mdxType:"CFormLabel"},"City"),Object(d.b)(m.bb,{id:"validationTooltip04",required:!0,mdxType:"CFormSelect"},Object(d.b)("option",{disabled:!0,value:""},"Choose..."),Object(d.b)("option",null,"...")),Object(d.b)(m.W,{tooltip:!0,invalid:!0,mdxType:"CFormFeedback"},"Please provide a valid city.")),Object(d.b)(m.J,{md:3,className:"position-relative",mdxType:"CCol"},Object(d.b)(m.Z,{htmlFor:"validationTooltip05",mdxType:"CFormLabel"},"City"),Object(d.b)(m.Y,{type:"text",id:"validationTooltip05",required:!0,mdxType:"CFormInput"}),Object(d.b)(m.W,{tooltip:!0,invalid:!0,mdxType:"CFormFeedback"},"Please provide a valid zip.")),Object(d.b)(m.J,{xs:12,className:"position-relative",mdxType:"CCol"},Object(d.b)(m.n,{color:"primary",type:"submit",mdxType:"CButton"},"Submit form")))})))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/4.0/forms/Validation.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-4-0-forms-validation-mdx-87d293116fe1683ea4aa.js.map