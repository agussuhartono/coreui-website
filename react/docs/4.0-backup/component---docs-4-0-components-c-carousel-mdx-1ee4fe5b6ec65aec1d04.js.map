{"version":3,"sources":["webpack:///../docs/4.0/components/CCarousel.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","CCallout","CCarousel","CCarouselCaption","CCarouselControl","CCarouselIndicators","CCarouselInner","CCarouselItem","slides","slidesLight","className","src","alt","controls","indicators","transition","dark","of","isMDXComponent"],"mappings":"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","file":"component---docs-4-0-components-c-carousel-mdx-1ee4fe5b6ec65aec1d04.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukaszholeczek/CoreUI/@coreui/react-pro/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { CCallout, CCarousel, CCarouselCaption, CCarouselControl, CCarouselIndicators, CCarouselInner, CCarouselItem } from '../../../src/index.ts';\nimport { slides, slidesLight } from './_slides.ts';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n    <h2 {...{\n      \"id\": \"how-it-works\"\n    }}>{`How it works`}</h2>\n    <p>{`The React carousel is a slideshow for cycling within a group of content. It runs with a group of images, text, or html elements. It also incorporates support for previous/next buttons.`}</p>\n    <p>{`In browsers where the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/TR/page-visibility/\"\n      }}>{`Page Visibility API`}</a>{` is supported, the carousel will avoid sliding when the webpage is not visible to the user (such as when the browser tab is inactive, the browser window is minimized, etc.).`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`Carousels don't automatically normalize slide dimensions. As such, you may want to use extra utilities or custom methods to properly size content. While carousels support previous/next controls and indicators, they're not explicitly expected. Add and customize as you see fit.`}</p>\n    <h3 {...{\n      \"id\": \"slides-only\"\n    }}>{`Slides only`}</h3>\n    <Playground __position={0} __code={'() => {\\n  return (\\n    <CCarousel>\\n      <CCarouselItem>\\n        <img className=\\\"d-block w-100\\\" src={slides[0]} alt=\\\"slide 1\\\" />\\n      </CCarouselItem>\\n      <CCarouselItem>\\n        <img className=\\\"d-block w-100\\\" src={slides[1]} alt=\\\"slide 2\\\" />\\n      </CCarouselItem>\\n      <CCarouselItem>\\n        <img className=\\\"d-block w-100\\\" src={slides[2]} alt=\\\"slide 3\\\" />\\n      </CCarouselItem>\\n    </CCarousel>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCallout,\n      CCarousel,\n      CCarouselCaption,\n      CCarouselControl,\n      CCarouselIndicators,\n      CCarouselInner,\n      CCarouselItem,\n      slides,\n      slidesLight,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        return <CCarousel mdxType=\"CCarousel\">\n        <CCarouselItem mdxType=\"CCarouselItem\">\n          <img className=\"d-block w-100\" src={slides[0]} alt=\"slide 1\" />\n        </CCarouselItem>\n        <CCarouselItem mdxType=\"CCarouselItem\">\n          <img className=\"d-block w-100\" src={slides[1]} alt=\"slide 2\" />\n        </CCarouselItem>\n        <CCarouselItem mdxType=\"CCarouselItem\">\n          <img className=\"d-block w-100\" src={slides[2]} alt=\"slide 3\" />\n        </CCarouselItem>\n      </CCarousel>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"with-controls\"\n    }}>{`With controls`}</h3>\n    <p>{`Adding in the previous and next controls by `}<inlineCode parentName=\"p\">{`controls`}</inlineCode>{` property.`}</p>\n    <Playground __position={1} __code={'() => {\\n  return (\\n    <CCarousel controls>\\n      <CCarouselItem>\\n        <img className=\\\"d-block w-100\\\" src={slides[0]} alt=\\\"slide 1\\\" />\\n      </CCarouselItem>\\n      <CCarouselItem>\\n        <img className=\\\"d-block w-100\\\" src={slides[1]} alt=\\\"slide 2\\\" />\\n      </CCarouselItem>\\n      <CCarouselItem>\\n        <img className=\\\"d-block w-100\\\" src={slides[2]} alt=\\\"slide 3\\\" />\\n      </CCarouselItem>\\n    </CCarousel>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCallout,\n      CCarousel,\n      CCarouselCaption,\n      CCarouselControl,\n      CCarouselIndicators,\n      CCarouselInner,\n      CCarouselItem,\n      slides,\n      slidesLight,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        return <CCarousel controls mdxType=\"CCarousel\">\n        <CCarouselItem mdxType=\"CCarouselItem\">\n          <img className=\"d-block w-100\" src={slides[0]} alt=\"slide 1\" />\n        </CCarouselItem>\n        <CCarouselItem mdxType=\"CCarouselItem\">\n          <img className=\"d-block w-100\" src={slides[1]} alt=\"slide 2\" />\n        </CCarouselItem>\n        <CCarouselItem mdxType=\"CCarouselItem\">\n          <img className=\"d-block w-100\" src={slides[2]} alt=\"slide 3\" />\n        </CCarouselItem>\n      </CCarousel>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"with-indicators\"\n    }}>{`With indicators`}</h3>\n    <p>{`You can attach the indicators to the carousel, lengthwise the controls, too.`}</p>\n    <Playground __position={2} __code={'() => {\\n  return (\\n    <CCarousel controls indicators>\\n      <CCarouselItem>\\n        <img className=\\\"d-block w-100\\\" src={slides[0]} alt=\\\"slide 1\\\" />\\n      </CCarouselItem>\\n      <CCarouselItem>\\n        <img className=\\\"d-block w-100\\\" src={slides[1]} alt=\\\"slide 2\\\" />\\n      </CCarouselItem>\\n      <CCarouselItem>\\n        <img className=\\\"d-block w-100\\\" src={slides[2]} alt=\\\"slide 3\\\" />\\n      </CCarouselItem>\\n    </CCarousel>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCallout,\n      CCarousel,\n      CCarouselCaption,\n      CCarouselControl,\n      CCarouselIndicators,\n      CCarouselInner,\n      CCarouselItem,\n      slides,\n      slidesLight,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        return <CCarousel controls indicators mdxType=\"CCarousel\">\n        <CCarouselItem mdxType=\"CCarouselItem\">\n          <img className=\"d-block w-100\" src={slides[0]} alt=\"slide 1\" />\n        </CCarouselItem>\n        <CCarouselItem mdxType=\"CCarouselItem\">\n          <img className=\"d-block w-100\" src={slides[1]} alt=\"slide 2\" />\n        </CCarouselItem>\n        <CCarouselItem mdxType=\"CCarouselItem\">\n          <img className=\"d-block w-100\" src={slides[2]} alt=\"slide 3\" />\n        </CCarouselItem>\n      </CCarousel>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"with-captions\"\n    }}>{`With captions`}</h3>\n    <p>{`You can add captions to slides with the `}<inlineCode parentName=\"p\">{`<CCarouselCaption>`}</inlineCode>{` element within any `}<inlineCode parentName=\"p\">{`<CCarouselItem>`}</inlineCode>{`. They can be immediately hidden on smaller viewports, as shown below, with optional `}<a parentName=\"p\" {...{\n        \"href\": \"https://coreui.io/4.0/utilities/display\"\n      }}>{`display utilities`}</a>{`. We hide them with `}<inlineCode parentName=\"p\">{`.d-none`}</inlineCode>{` and draw them back on medium-sized devices with `}<inlineCode parentName=\"p\">{`.d-md-block`}</inlineCode>{`.`}</p>\n    <Playground __position={3} __code={'() => {\\n  return (\\n    <CCarousel controls indicators>\\n      <CCarouselItem>\\n        <img className=\\\"d-block w-100\\\" src={slides[0]} alt=\\\"slide 1\\\" />\\n        <CCarouselCaption className=\\\"d-none d-md-block\\\">\\n          <h5>First slide label</h5>\\n          <p>Some representative placeholder content for the first slide.</p>\\n        </CCarouselCaption>\\n      </CCarouselItem>\\n      <CCarouselItem>\\n        <img className=\\\"d-block w-100\\\" src={slides[1]} alt=\\\"slide 2\\\" />\\n        <CCarouselCaption className=\\\"d-none d-md-block\\\">\\n          <h5>Second slide label</h5>\\n          <p>Some representative placeholder content for the first slide.</p>\\n        </CCarouselCaption>\\n      </CCarouselItem>\\n      <CCarouselItem>\\n        <img className=\\\"d-block w-100\\\" src={slides[2]} alt=\\\"slide 3\\\" />\\n        <CCarouselCaption className=\\\"d-none d-md-block\\\">\\n          <h5>Third slide label</h5>\\n          <p>Some representative placeholder content for the first slide.</p>\\n        </CCarouselCaption>\\n      </CCarouselItem>\\n    </CCarousel>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCallout,\n      CCarousel,\n      CCarouselCaption,\n      CCarouselControl,\n      CCarouselIndicators,\n      CCarouselInner,\n      CCarouselItem,\n      slides,\n      slidesLight,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        return <CCarousel controls indicators mdxType=\"CCarousel\">\n        <CCarouselItem mdxType=\"CCarouselItem\">\n          <img className=\"d-block w-100\" src={slides[0]} alt=\"slide 1\" />\n          <CCarouselCaption className=\"d-none d-md-block\" mdxType=\"CCarouselCaption\">\n            <h5>First slide label</h5>\n            <p>Some representative placeholder content for the first slide.</p>\n          </CCarouselCaption>\n        </CCarouselItem>\n        <CCarouselItem mdxType=\"CCarouselItem\">\n          <img className=\"d-block w-100\" src={slides[1]} alt=\"slide 2\" />\n          <CCarouselCaption className=\"d-none d-md-block\" mdxType=\"CCarouselCaption\">\n            <h5>Second slide label</h5>\n            <p>Some representative placeholder content for the first slide.</p>\n          </CCarouselCaption>\n        </CCarouselItem>\n        <CCarouselItem mdxType=\"CCarouselItem\">\n          <img className=\"d-block w-100\" src={slides[2]} alt=\"slide 3\" />\n          <CCarouselCaption className=\"d-none d-md-block\" mdxType=\"CCarouselCaption\">\n            <h5>Third slide label</h5>\n            <p>Some representative placeholder content for the first slide.</p>\n          </CCarouselCaption>\n        </CCarouselItem>\n      </CCarousel>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"crossfade\"\n    }}>{`Crossfade`}</h3>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`transition=\"crossfade\"`}</inlineCode>{` to your carousel to animate slides with a fade transition instead of a slide.`}</p>\n    <Playground __position={4} __code={'() => {\\n  return (\\n    <CCarousel controls transition=\\\"crossfade\\\">\\n      <CCarouselItem>\\n        <img className=\\\"d-block w-100\\\" src={slides[0]} alt=\\\"slide 1\\\" />\\n      </CCarouselItem>\\n      <CCarouselItem>\\n        <img className=\\\"d-block w-100\\\" src={slides[1]} alt=\\\"slide 2\\\" />\\n      </CCarouselItem>\\n      <CCarouselItem>\\n        <img className=\\\"d-block w-100\\\" src={slides[2]} alt=\\\"slide 3\\\" />\\n      </CCarouselItem>\\n    </CCarousel>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCallout,\n      CCarousel,\n      CCarouselCaption,\n      CCarouselControl,\n      CCarouselIndicators,\n      CCarouselInner,\n      CCarouselItem,\n      slides,\n      slidesLight,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        return <CCarousel controls transition=\"crossfade\" mdxType=\"CCarousel\">\n        <CCarouselItem mdxType=\"CCarouselItem\">\n          <img className=\"d-block w-100\" src={slides[0]} alt=\"slide 1\" />\n        </CCarouselItem>\n        <CCarouselItem mdxType=\"CCarouselItem\">\n          <img className=\"d-block w-100\" src={slides[1]} alt=\"slide 2\" />\n        </CCarouselItem>\n        <CCarouselItem mdxType=\"CCarouselItem\">\n          <img className=\"d-block w-100\" src={slides[2]} alt=\"slide 3\" />\n        </CCarouselItem>\n      </CCarousel>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"dark-variant\"\n    }}>{`Dark variant`}</h2>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`dark`}</inlineCode>{` property to the `}<inlineCode parentName=\"p\">{`CCarousel`}</inlineCode>{` for darker controls, indicators, and captions. Controls have been inverted from their default white fill with the `}<inlineCode parentName=\"p\">{`filter`}</inlineCode>{` CSS property. Captions and controls have additional Sass variables that customize the `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`background-color`}</inlineCode>{`.`}</p>\n    <Playground __position={5} __code={'() => {\\n  return (\\n    <CCarousel controls indicators dark>\\n      <CCarouselItem>\\n        <img className=\\\"d-block w-100\\\" src={slidesLight[0]} alt=\\\"slide 1\\\" />\\n        <CCarouselCaption className=\\\"d-none d-md-block\\\">\\n          <h5>First slide label</h5>\\n          <p>Some representative placeholder content for the first slide.</p>\\n        </CCarouselCaption>\\n      </CCarouselItem>\\n      <CCarouselItem>\\n        <img className=\\\"d-block w-100\\\" src={slidesLight[1]} alt=\\\"slide 2\\\" />\\n        <CCarouselCaption className=\\\"d-none d-md-block\\\">\\n          <h5>Second slide label</h5>\\n          <p>Some representative placeholder content for the first slide.</p>\\n        </CCarouselCaption>\\n      </CCarouselItem>\\n      <CCarouselItem>\\n        <img className=\\\"d-block w-100\\\" src={slidesLight[2]} alt=\\\"slide 3\\\" />\\n        <CCarouselCaption className=\\\"d-none d-md-block\\\">\\n          <h5>Third slide label</h5>\\n          <p>Some representative placeholder content for the first slide.</p>\\n        </CCarouselCaption>\\n      </CCarouselItem>\\n    </CCarousel>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CCallout,\n      CCarousel,\n      CCarouselCaption,\n      CCarouselControl,\n      CCarouselIndicators,\n      CCarouselInner,\n      CCarouselItem,\n      slides,\n      slidesLight,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        return <CCarousel controls indicators dark mdxType=\"CCarousel\">\n        <CCarouselItem mdxType=\"CCarouselItem\">\n          <img className=\"d-block w-100\" src={slidesLight[0]} alt=\"slide 1\" />\n          <CCarouselCaption className=\"d-none d-md-block\" mdxType=\"CCarouselCaption\">\n            <h5>First slide label</h5>\n            <p>Some representative placeholder content for the first slide.</p>\n          </CCarouselCaption>\n        </CCarouselItem>\n        <CCarouselItem mdxType=\"CCarouselItem\">\n          <img className=\"d-block w-100\" src={slidesLight[1]} alt=\"slide 2\" />\n          <CCarouselCaption className=\"d-none d-md-block\" mdxType=\"CCarouselCaption\">\n            <h5>Second slide label</h5>\n            <p>Some representative placeholder content for the first slide.</p>\n          </CCarouselCaption>\n        </CCarouselItem>\n        <CCarouselItem mdxType=\"CCarouselItem\">\n          <img className=\"d-block w-100\" src={slidesLight[2]} alt=\"slide 3\" />\n          <CCarouselCaption className=\"d-none d-md-block\" mdxType=\"CCarouselCaption\">\n            <h5>Third slide label</h5>\n            <p>Some representative placeholder content for the first slide.</p>\n          </CCarouselCaption>\n        </CCarouselItem>\n      </CCarousel>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <h3 {...{\n      \"id\": \"ccarousel\"\n    }}>{`CCarousel`}</h3>\n    <Props of={CCarousel} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"ccarouselcaption\"\n    }}>{`CCarouselCaption`}</h3>\n    <Props of={CCarouselCaption} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"ccarouselcontrol\"\n    }}>{`CCarouselControl`}</h3>\n    <Props of={CCarouselControl} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"ccarouselindicators\"\n    }}>{`CCarouselIndicators`}</h3>\n    <Props of={CCarouselIndicators} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"ccarouselinner\"\n    }}>{`CCarouselInner`}</h3>\n    <Props of={CCarouselInner} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"ccarouselitem\"\n    }}>{`CCarouselItem`}</h3>\n    <Props of={CCarouselItem} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}