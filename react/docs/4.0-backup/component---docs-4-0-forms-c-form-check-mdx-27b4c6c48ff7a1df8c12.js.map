{"version":3,"sources":["webpack:///../docs/4.0/forms/CFormCheck.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","useEffect","useRef","Playground","Props","CButton","CForm","CFormCheck","CFormLabel","CFormSwitch","CFormText","id","label","defaultChecked","checkboxRef","current","indeterminate","ref","disabled","type","name","size","value","inline","aria-label","button","color","autoComplete","variant","of","isMDXComponent"],"mappings":"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","file":"component---docs-4-0-forms-c-form-check-mdx-27b4c6c48ff7a1df8c12.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukaszholeczek/CoreUI/@coreui/react-pro/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useEffect, useRef } from 'react';\nimport { Playground, Props } from 'docz';\nimport { CButton, CForm, CFormCheck, CFormLabel, CFormSwitch, CFormText } from '../../../src/index.ts';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"approach\"\n    }}>{`Approach`}</h2>\n    <p>{`Browser default checkboxes and radios are replaced with the help of `}<inlineCode parentName=\"p\">{`<CFormCheck>`}</inlineCode>{`. Checkboxes are for selecting one or several options in a list, while radios are for selecting one option from many.`}</p>\n    <h2 {...{\n      \"id\": \"checks\"\n    }}>{`Checks`}</h2>\n    <Playground __position={0} __code={'<CFormCheck id=\\\"flexCheckDefault\\\" label=\\\"Default checkbox\\\" />\\n<CFormCheck id=\\\"flexCheckChecked\\\" label=\\\"Checked checkbox\\\" defaultChecked />'} __scope={{\n      props,\n      DefaultLayout,\n      useEffect,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CForm,\n      CFormCheck,\n      CFormLabel,\n      CFormSwitch,\n      CFormText,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CFormCheck id=\"flexCheckDefault\" label=\"Default checkbox\" mdxType=\"CFormCheck\" />\n  <CFormCheck id=\"flexCheckChecked\" label=\"Checked checkbox\" defaultChecked mdxType=\"CFormCheck\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"indeterminate\"\n    }}>{`Indeterminate`}</h2>\n    <p>{`Checkboxes can utilize the `}<inlineCode parentName=\"p\">{`:indeterminate`}</inlineCode>{` pseudo class when manually set via JavaScript (there is no available HTML attribute for specifying it).`}</p>\n    <Playground __position={1} __code={'() => {\\n  const checkboxRef = useRef(null)\\n  useEffect(() => {\\n    checkboxRef.current.indeterminate = true\\n  })\\n  return (\\n    <CFormCheck\\n      id=\\\"flexCheckIndeterminate\\\"\\n      label=\\\"Indeterminate checkbox\\\"\\n      ref={checkboxRef}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useEffect,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CForm,\n      CFormCheck,\n      CFormLabel,\n      CFormSwitch,\n      CFormText,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {() => {\n        const checkboxRef = useRef(null);\n        useEffect(() => {\n          checkboxRef.current.indeterminate = true;\n        });\n        return <CFormCheck id=\"flexCheckIndeterminate\" label=\"Indeterminate checkbox\" ref={checkboxRef} mdxType=\"CFormCheck\" />;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"disabled\"\n    }}>{`Disabled`}</h3>\n    <p>{`Add the `}<inlineCode parentName=\"p\">{`disabled`}</inlineCode>{` attribute and the associated `}<inlineCode parentName=\"p\">{`<label>`}</inlineCode>{`s are automatically styled to match with a lighter color to help indicate the input's state.`}</p>\n    <Playground __position={2} __code={'<CFormCheck label=\\\"Disabled checkbox\\\" disabled />\\n<CFormCheck label=\\\"Disabled checked checkbox\\\" defaultChecked disabled />'} __scope={{\n      props,\n      DefaultLayout,\n      useEffect,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CForm,\n      CFormCheck,\n      CFormLabel,\n      CFormSwitch,\n      CFormText,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CFormCheck label=\"Disabled checkbox\" disabled mdxType=\"CFormCheck\" />\n  <CFormCheck label=\"Disabled checked checkbox\" defaultChecked disabled mdxType=\"CFormCheck\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"radios\"\n    }}>{`Radios`}</h2>\n    <p>{`Add the `}<inlineCode parentName=\"p\">{`disabled`}</inlineCode>{` attribute and the associated `}<inlineCode parentName=\"p\">{`<label>`}</inlineCode>{`s are automatically styled to match with a lighter color to help indicate the input's state.`}</p>\n    <Playground __position={3} __code={'<CFormCheck\\n  type=\\\"radio\\\"\\n  name=\\\"flexRadioDefault\\\"\\n  id=\\\"flexRadioDefault1\\\"\\n  label=\\\"Default radio\\\"\\n/>\\n<CFormCheck\\n  type=\\\"radio\\\"\\n  name=\\\"flexRadioDefault\\\"\\n  id=\\\"flexRadioDefault2\\\"\\n  label=\\\"Checked radio\\\"\\n  defaultChecked\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      useEffect,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CForm,\n      CFormCheck,\n      CFormLabel,\n      CFormSwitch,\n      CFormText,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CFormCheck type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" label=\"Default radio\" mdxType=\"CFormCheck\" />\n  <CFormCheck type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" label=\"Checked radio\" defaultChecked mdxType=\"CFormCheck\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"disabled-1\"\n    }}>{`Disabled`}</h3>\n    <Playground __position={4} __code={'<CFormCheck\\n  type=\\\"radio\\\"\\n  name=\\\"flexRadioDisabled\\\"\\n  id=\\\"flexRadioDisabled\\\"\\n  label=\\\"Disabled radio\\\"\\n  disabled\\n/>\\n<CFormCheck\\n  type=\\\"radio\\\"\\n  name=\\\"flexRadioDisabled\\\"\\n  id=\\\"flexRadioCheckedDisabled\\\"\\n  label=\\\"Disabled checked radio\\\"\\n  defaultChecked\\n  disabled\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      useEffect,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CForm,\n      CFormCheck,\n      CFormLabel,\n      CFormSwitch,\n      CFormText,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CFormCheck type=\"radio\" name=\"flexRadioDisabled\" id=\"flexRadioDisabled\" label=\"Disabled radio\" disabled mdxType=\"CFormCheck\" />\n  <CFormCheck type=\"radio\" name=\"flexRadioDisabled\" id=\"flexRadioCheckedDisabled\" label=\"Disabled checked radio\" defaultChecked disabled mdxType=\"CFormCheck\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"switches\"\n    }}>{`Switches`}</h2>\n    <p>{`A switch has the markup of a custom checkbox but uses the `}<inlineCode parentName=\"p\">{`switch`}</inlineCode>{` boolean properly to render a toggle switch. Switches also support the `}<inlineCode parentName=\"p\">{`disabled`}</inlineCode>{` attribute.`}</p>\n    <Playground __position={5} __code={'<CFormSwitch\\n  label=\\\"Default switch checkbox input\\\"\\n  id=\\\"formSwitchCheckDefault\\\"\\n/>\\n<CFormSwitch\\n  label=\\\"Checked switch checkbox input\\\"\\n  id=\\\"formSwitchCheckChecked\\\"\\n  defaultChecked\\n/>\\n<CFormSwitch\\n  label=\\\"Disabled switch checkbox input\\\"\\n  id=\\\"formSwitchCheckDisabled\\\"\\n  disabled\\n/>\\n<CFormSwitch\\n  label=\\\"Disabled checked switch checkbox input\\\"\\n  id=\\\"formSwitchCheckCheckedDisabled\\\"\\n  defaultChecked\\n  disabled\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      useEffect,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CForm,\n      CFormCheck,\n      CFormLabel,\n      CFormSwitch,\n      CFormText,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CFormSwitch label=\"Default switch checkbox input\" id=\"formSwitchCheckDefault\" mdxType=\"CFormSwitch\" />\n  <CFormSwitch label=\"Checked switch checkbox input\" id=\"formSwitchCheckChecked\" defaultChecked mdxType=\"CFormSwitch\" />\n  <CFormSwitch label=\"Disabled switch checkbox input\" id=\"formSwitchCheckDisabled\" disabled mdxType=\"CFormSwitch\" />\n  <CFormSwitch label=\"Disabled checked switch checkbox input\" id=\"formSwitchCheckCheckedDisabled\" defaultChecked disabled mdxType=\"CFormSwitch\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h3>\n    <Playground __position={6} __code={'<CFormSwitch\\n  label=\\\"Default switch checkbox input\\\"\\n  id=\\\"formSwitchCheckDefault\\\"\\n/>\\n<CFormSwitch\\n  size=\\\"lg\\\"\\n  label=\\\"Large switch checkbox input\\\"\\n  id=\\\"formSwitchCheckDefaultLg\\\"\\n/>\\n<CFormSwitch\\n  size=\\\"xl\\\"\\n  label=\\\"Extra large switch checkbox input\\\"\\n  id=\\\"formSwitchCheckDefaultXL\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      useEffect,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CForm,\n      CFormCheck,\n      CFormLabel,\n      CFormSwitch,\n      CFormText,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CFormSwitch label=\"Default switch checkbox input\" id=\"formSwitchCheckDefault\" mdxType=\"CFormSwitch\" />\n  <CFormSwitch size=\"lg\" label=\"Large switch checkbox input\" id=\"formSwitchCheckDefaultLg\" mdxType=\"CFormSwitch\" />\n  <CFormSwitch size=\"xl\" label=\"Extra large switch checkbox input\" id=\"formSwitchCheckDefaultXL\" mdxType=\"CFormSwitch\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"default-stacked\"\n    }}>{`Default (stacked)`}</h2>\n    <p>{`By default, any number of checkboxes and radios that are immediate sibling will be vertically stacked and appropriately spaced.`}</p>\n    <Playground __position={7} __code={'<CFormCheck id=\\\"defaultCheck1\\\" label=\\\"Default checkbox\\\" />\\n<CFormCheck id=\\\"defaultCheck2\\\" label=\\\"Disabled checkbox\\\" disabled />'} __scope={{\n      props,\n      DefaultLayout,\n      useEffect,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CForm,\n      CFormCheck,\n      CFormLabel,\n      CFormSwitch,\n      CFormText,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CFormCheck id=\"defaultCheck1\" label=\"Default checkbox\" mdxType=\"CFormCheck\" />\n  <CFormCheck id=\"defaultCheck2\" label=\"Disabled checkbox\" disabled mdxType=\"CFormCheck\" />\n    </Playground>\n    <Playground __position={8} __code={'<CFormCheck\\n  type=\\\"radio\\\"\\n  name=\\\"exampleRadios\\\"\\n  id=\\\"exampleRadios1\\\"\\n  value=\\\"option1\\\"\\n  label=\\\"Default radio\\\"\\n  defaultChecked\\n/>\\n<CFormCheck\\n  type=\\\"radio\\\"\\n  name=\\\"exampleRadios\\\"\\n  id=\\\"exampleRadios2\\\"\\n  value=\\\"option2\\\"\\n  label=\\\"Second default radio\\\"\\n/>\\n<CFormCheck\\n  type=\\\"radio\\\"\\n  name=\\\"exampleRadios\\\"\\n  id=\\\"exampleRadios3\\\"\\n  value=\\\"option3\\\"\\n  label=\\\"Disabled radio\\\"\\n  disabled\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      useEffect,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CForm,\n      CFormCheck,\n      CFormLabel,\n      CFormSwitch,\n      CFormText,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CFormCheck type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios1\" value=\"option1\" label=\"Default radio\" defaultChecked mdxType=\"CFormCheck\" />\n  <CFormCheck type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"option2\" label=\"Second default radio\" mdxType=\"CFormCheck\" />\n  <CFormCheck type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios3\" value=\"option3\" label=\"Disabled radio\" disabled mdxType=\"CFormCheck\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"inline\"\n    }}>{`Inline`}</h2>\n    <p>{`Group checkboxes or radios on the same horizontal row by adding `}<inlineCode parentName=\"p\">{`inline`}</inlineCode>{` boolean property to any `}<inlineCode parentName=\"p\">{`<CFormCheck>`}</inlineCode>{`.`}</p>\n    <Playground __position={9} __code={'<CFormCheck inline id=\\\"inlineCheckbox1\\\" value=\\\"option1\\\" label=\\\"1\\\" />\\n<CFormCheck inline id=\\\"inlineCheckbox2\\\" value=\\\"option2\\\" label=\\\"2\\\" />\\n<CFormCheck\\n  inline\\n  id=\\\"inlineCheckbox3\\\"\\n  value=\\\"option3\\\"\\n  label=\\\"3 (disabled)\\\"\\n  disabled\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      useEffect,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CForm,\n      CFormCheck,\n      CFormLabel,\n      CFormSwitch,\n      CFormText,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CFormCheck inline id=\"inlineCheckbox1\" value=\"option1\" label=\"1\" mdxType=\"CFormCheck\" />\n  <CFormCheck inline id=\"inlineCheckbox2\" value=\"option2\" label=\"2\" mdxType=\"CFormCheck\" />\n  <CFormCheck inline id=\"inlineCheckbox3\" value=\"option3\" label=\"3 (disabled)\" disabled mdxType=\"CFormCheck\" />\n    </Playground>\n    <Playground __position={10} __code={'<CFormCheck\\n  inline\\n  type=\\\"radio\\\"\\n  name=\\\"inlineRadioOptions\\\"\\n  id=\\\"inlineCheckbox1\\\"\\n  value=\\\"option1\\\"\\n  label=\\\"1\\\"\\n/>\\n<CFormCheck\\n  inline\\n  type=\\\"radio\\\"\\n  name=\\\"inlineRadioOptions\\\"\\n  id=\\\"inlineCheckbox2\\\"\\n  value=\\\"option2\\\"\\n  label=\\\"2\\\"\\n/>\\n<CFormCheck\\n  inline\\n  type=\\\"radio\\\"\\n  name=\\\"inlineRadioOptions\\\"\\n  id=\\\"inlineCheckbox3\\\"\\n  value=\\\"option3\\\"\\n  label=\\\"3 (disabled)\\\"\\n  disabled\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      useEffect,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CForm,\n      CFormCheck,\n      CFormLabel,\n      CFormSwitch,\n      CFormText,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CFormCheck inline type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineCheckbox1\" value=\"option1\" label=\"1\" mdxType=\"CFormCheck\" />\n  <CFormCheck inline type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineCheckbox2\" value=\"option2\" label=\"2\" mdxType=\"CFormCheck\" />\n  <CFormCheck inline type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineCheckbox3\" value=\"option3\" label=\"3 (disabled)\" disabled mdxType=\"CFormCheck\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"without-labels\"\n    }}>{`Without labels`}</h2>\n    <p>{`Remember to still provide some form of accessible name for assistive technologies (for instance, using `}<inlineCode parentName=\"p\">{`aria-label`}</inlineCode>{`).`}</p>\n    <Playground __position={11} __code={'<div>\\n  <CFormCheck id=\\\"checkboxNoLabel\\\" value=\\\"\\\" aria-label=\\\"...\\\" />\\n</div>\\n<div>\\n  <CFormCheck\\n    type=\\\"radio\\\"\\n    name=\\\"radioNoLabel\\\"\\n    id=\\\"radioNoLabel\\\"\\n    value=\\\"\\\"\\n    aria-label=\\\"...\\\"\\n  />\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      useEffect,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CForm,\n      CFormCheck,\n      CFormLabel,\n      CFormSwitch,\n      CFormText,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div>\n      <CFormCheck id=\"checkboxNoLabel\" value=\"\" aria-label=\"...\" mdxType=\"CFormCheck\" />\n  </div>\n  <div>\n    <CFormCheck type=\"radio\" name=\"radioNoLabel\" id=\"radioNoLabel\" value=\"\" aria-label=\"...\" mdxType=\"CFormCheck\" />\n  </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"toggle-buttons\"\n    }}>{`Toggle buttons`}</h2>\n    <p>{`Create button-like checkboxes and radio buttons by using `}<inlineCode parentName=\"p\">{`button`}</inlineCode>{` boolean property on the `}<inlineCode parentName=\"p\">{`<CFormCheck>`}</inlineCode>{` component. These toggle buttons can further be grouped in a button group if needed.`}</p>\n    <h3 {...{\n      \"id\": \"checkbox-toggle-buttons\"\n    }}>{`Checkbox toggle buttons`}</h3>\n    <Playground __position={12} __code={'<CFormCheck\\n  button={{ color: \\'primary\\' }}\\n  id=\\\"btn-check\\\"\\n  autoComplete=\\\"off\\\"\\n  label=\\\"Single toggle\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      useEffect,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CForm,\n      CFormCheck,\n      CFormLabel,\n      CFormSwitch,\n      CFormText,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CFormCheck button={{\n        color: 'primary'\n      }} id=\"btn-check\" autoComplete=\"off\" label=\"Single toggle\" mdxType=\"CFormCheck\" />\n    </Playground>\n    <Playground __position={13} __code={'<CFormCheck\\n  button={{ color: \\'primary\\' }}\\n  id=\\\"btn-check-2\\\"\\n  autoComplete=\\\"off\\\"\\n  label=\\\"Checked\\\"\\n  defaultChecked\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      useEffect,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CForm,\n      CFormCheck,\n      CFormLabel,\n      CFormSwitch,\n      CFormText,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CFormCheck button={{\n        color: 'primary'\n      }} id=\"btn-check-2\" autoComplete=\"off\" label=\"Checked\" defaultChecked mdxType=\"CFormCheck\" />\n    </Playground>\n    <Playground __position={14} __code={'<CFormCheck\\n  button={{ color: \\'primary\\' }}\\n  id=\\\"btn-check-3\\\"\\n  autoComplete=\\\"off\\\"\\n  label=\\\"Disabled\\\"\\n  disabled\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      useEffect,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CForm,\n      CFormCheck,\n      CFormLabel,\n      CFormSwitch,\n      CFormText,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CFormCheck button={{\n        color: 'primary'\n      }} id=\"btn-check-3\" autoComplete=\"off\" label=\"Disabled\" disabled mdxType=\"CFormCheck\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"radio-toggle-buttons\"\n    }}>{`Radio toggle buttons`}</h3>\n    <Playground __position={15} __code={'<CFormCheck\\n  button={{ color: \\'secondary\\' }}\\n  type=\\\"radio\\\"\\n  name=\\\"options\\\"\\n  id=\\\"option1\\\"\\n  autoComplete=\\\"off\\\"\\n  label=\\\"Checked\\\"\\n  defaultChecked\\n/>\\n<CFormCheck\\n  button={{ color: \\'secondary\\' }}\\n  type=\\\"radio\\\"\\n  name=\\\"options\\\"\\n  id=\\\"option2\\\"\\n  autoComplete=\\\"off\\\"\\n  label=\\\"Radio\\\"\\n/>\\n<CFormCheck\\n  button={{ color: \\'secondary\\' }}\\n  type=\\\"radio\\\"\\n  name=\\\"options\\\"\\n  id=\\\"option3\\\"\\n  autoComplete=\\\"off\\\"\\n  label=\\\"Radio\\\"\\n  disabled\\n/>\\n<CFormCheck\\n  button={{ color: \\'secondary\\' }}\\n  type=\\\"radio\\\"\\n  name=\\\"options\\\"\\n  id=\\\"option4\\\"\\n  autoComplete=\\\"off\\\"\\n  label=\\\"Radio\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      useEffect,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CForm,\n      CFormCheck,\n      CFormLabel,\n      CFormSwitch,\n      CFormText,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CFormCheck button={{\n        color: 'secondary'\n      }} type=\"radio\" name=\"options\" id=\"option1\" autoComplete=\"off\" label=\"Checked\" defaultChecked mdxType=\"CFormCheck\" />\n  <CFormCheck button={{\n        color: 'secondary'\n      }} type=\"radio\" name=\"options\" id=\"option2\" autoComplete=\"off\" label=\"Radio\" mdxType=\"CFormCheck\" />\n  <CFormCheck button={{\n        color: 'secondary'\n      }} type=\"radio\" name=\"options\" id=\"option3\" autoComplete=\"off\" label=\"Radio\" disabled mdxType=\"CFormCheck\" />\n  <CFormCheck button={{\n        color: 'secondary'\n      }} type=\"radio\" name=\"options\" id=\"option4\" autoComplete=\"off\" label=\"Radio\" mdxType=\"CFormCheck\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"outlined-styles\"\n    }}>{`Outlined styles`}</h3>\n    <p>{`Different variants of button, such at the various outlined styles, are supported.`}</p>\n    <Playground __position={16} __code={'<div>\\n  <CFormCheck\\n    button={{ color: \\'primary\\', variant: \\'outline\\' }}\\n    id=\\\"btn-check-outlined\\\"\\n    autoComplete=\\\"off\\\"\\n    label=\\\"Single toggle\\\"\\n  />\\n</div>\\n<div>\\n  <CFormCheck\\n    button={{ color: \\'secondary\\', variant: \\'outline\\' }}\\n    id=\\\"btn-check-2-outlined\\\"\\n    autoComplete=\\\"off\\\"\\n    label=\\\"Checked\\\"\\n    defaultChecked\\n  />\\n</div>\\n<div>\\n  <CFormCheck\\n    button={{ color: \\'success\\', variant: \\'outline\\' }}\\n    type=\\\"radio\\\"\\n    name=\\\"options-outlined\\\"\\n    id=\\\"success-outlined\\\"\\n    autoComplete=\\\"off\\\"\\n    label=\\\"Radio\\\"\\n    defaultChecked\\n  />\\n  <CFormCheck\\n    button={{ color: \\'danger\\', variant: \\'outline\\' }}\\n    type=\\\"radio\\\"\\n    name=\\\"options-outlined\\\"\\n    id=\\\"danger-outlined\\\"\\n    autoComplete=\\\"off\\\"\\n    label=\\\"Radio\\\"\\n  />\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      useEffect,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CForm,\n      CFormCheck,\n      CFormLabel,\n      CFormSwitch,\n      CFormText,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div> \n    <CFormCheck button={{\n          color: 'primary',\n          variant: 'outline'\n        }} id=\"btn-check-outlined\" autoComplete=\"off\" label=\"Single toggle\" mdxType=\"CFormCheck\" />\n  </div>\n  <div>\n    <CFormCheck button={{\n          color: 'secondary',\n          variant: 'outline'\n        }} id=\"btn-check-2-outlined\" autoComplete=\"off\" label=\"Checked\" defaultChecked mdxType=\"CFormCheck\" />\n  </div>\n  <div>\n    <CFormCheck button={{\n          color: 'success',\n          variant: 'outline'\n        }} type=\"radio\" name=\"options-outlined\" id=\"success-outlined\" autoComplete=\"off\" label=\"Radio\" defaultChecked mdxType=\"CFormCheck\" />\n    <CFormCheck button={{\n          color: 'danger',\n          variant: 'outline'\n        }} type=\"radio\" name=\"options-outlined\" id=\"danger-outlined\" autoComplete=\"off\" label=\"Radio\" mdxType=\"CFormCheck\" />\n  </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <h3 {...{\n      \"id\": \"cformcheck\"\n    }}>{`CFormCheck`}</h3>\n    <Props of={CFormCheck} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"cformswitch\"\n    }}>{`CFormSwitch`}</h3>\n    <Props of={CFormSwitch} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}