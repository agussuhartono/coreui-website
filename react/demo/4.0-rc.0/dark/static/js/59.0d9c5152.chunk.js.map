{"version":3,"sources":["views/plugins/google-maps/GoogleMaps.js"],"names":["defaultCenter","lat","lng","locations","label","draggable","title","www","MarkerList","map","location","index","MarkerWithInfoWindow","toString","isOpen","setIsOpen","React","useState","onClick","position","onCloseClick","href","target","GoogleMapsComponent","withScriptjs","withGoogleMap","defaultZoom","GoogleMaps","googleMapURL","loadingElement","style","height","containerElement","mapElement"],"mappings":"2KAAA,8DAOA,MAGMA,EAAgB,CAAEC,IAAK,UAAWC,KAAM,YACxCC,EAAY,CAChB,CACEF,IAAK,UACLC,KAAM,WACNE,MAAO,IACPC,WAAW,EACXC,MAAO,WACPC,IAAK,6BAEP,CACEN,IAAK,UACLC,KAAM,WACNE,MAAO,IACPC,WAAW,EACXC,MAAO,QACPC,IAAK,0BAEP,CACEN,IAAK,UACLC,KAAM,SACNE,MAAO,IACPC,WAAW,EACXC,MAAO,QACPC,IAAK,0BAEP,CACEN,IAAK,UACLC,KAAM,WACNE,MAAO,IACPC,WAAW,EACXC,MAAO,WACPC,IAAK,8BAIHC,EAAa,IACVL,EAAUM,KAAI,CAACC,EAAUC,IACvB,cAACC,EAAD,CAA6CF,SAAUA,GAA5BC,EAAME,cAItCD,EAAuB,EAAGF,eAC9B,MAAOI,EAAQC,GAAaC,IAAMC,UAAS,GAE3C,OACE,cAAC,SAAD,CACEC,QAAS,IAAMH,GAAWD,GAC1BK,SAAUT,EACVJ,MAAOI,EAASJ,MAChBF,MAAOM,EAASN,MAJlB,SAMGU,GACC,cAAC,aAAD,CAAYM,aAAc,IAAML,GAAU,GAA1C,SACE,cAAC,KAAD,CAAUM,KAAMX,EAASH,IAAKe,OAAO,SAArC,SACGZ,EAASJ,aAQhBiB,EAAsBC,uBAC1BC,yBAAc,IAEV,cAAC,YAAD,CAAWC,YAnEG,GAmEuB1B,cAAeA,EAApD,SACG,cAACQ,EAAD,CAAYL,UAAWA,SAyBjBwB,UAnBI,IAEf,eAAC,IAAD,WACE,eAAC,IAAD,gCACoB,cAAC,IAAD,OAEpB,cAAC,IAAD,UACE,cAACJ,EAAD,CAEEK,aAAY,gGArFP,2CAsFLC,eAAgB,qBAAKC,MAAO,CAAEC,OAAO,UACrCC,iBAAkB,qBAAKF,MAAO,CAAEC,OAAO,WACvCE,WAAY,qBAAKH,MAAO,CAAEC,OAAO,WAJ7B","file":"static/js/59.0d9c5152.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { CCard, CCardHeader, CCardBody, CNavLink } from '@coreui/react-pro'\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from 'react-google-maps'\nimport { ProBadge } from 'src/components'\n\n// To use the Google Maps JavaScript API, you must register your app project on the Google API Console and get a Google API key which you can add to your app\nconst apiKey = 'AIzaSyASyYRBZmULmrmw_P9kgr7_266OhFNinPA'\n\nconst defaultZoom = 11\nconst defaultCenter = { lat: 37.431489, lng: -122.163719 }\nconst locations = [\n  {\n    lat: 37.431489,\n    lng: -122.163719,\n    label: 'S',\n    draggable: false,\n    title: 'Stanford',\n    www: 'https://www.stanford.edu/',\n  },\n  {\n    lat: 37.394694,\n    lng: -122.150333,\n    label: 'T',\n    draggable: false,\n    title: 'Tesla',\n    www: 'https://www.tesla.com/',\n  },\n  {\n    lat: 37.331681,\n    lng: -122.0301,\n    label: 'A',\n    draggable: false,\n    title: 'Apple',\n    www: 'https://www.apple.com/',\n  },\n  {\n    lat: 37.484722,\n    lng: -122.148333,\n    label: 'F',\n    draggable: false,\n    title: 'Facebook',\n    www: 'https://www.facebook.com/',\n  },\n]\n\nconst MarkerList = () => {\n  return locations.map((location, index) => {\n    return <MarkerWithInfoWindow key={index.toString()} location={location} />\n  })\n}\n\nconst MarkerWithInfoWindow = ({ location }) => {\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  return (\n    <Marker\n      onClick={() => setIsOpen(!isOpen)}\n      position={location}\n      title={location.title}\n      label={location.label}\n    >\n      {isOpen && (\n        <InfoWindow onCloseClick={() => setIsOpen(false)}>\n          <CNavLink href={location.www} target=\"_blank\">\n            {location.title}\n          </CNavLink>\n        </InfoWindow>\n      )}\n    </Marker>\n  )\n}\n\nconst GoogleMapsComponent = withScriptjs(\n  withGoogleMap(() => {\n    return (\n      <GoogleMap defaultZoom={defaultZoom} defaultCenter={defaultCenter}>\n        {<MarkerList locations={locations} />}\n      </GoogleMap>\n    )\n  }),\n)\n\nconst GoogleMaps = () => {\n  return (\n    <CCard>\n      <CCardHeader>\n        React Google Maps <ProBadge />\n      </CCardHeader>\n      <CCardBody>\n        <GoogleMapsComponent\n          key=\"map\"\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${apiKey}`}\n          loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `400px` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n      </CCardBody>\n    </CCard>\n  )\n}\n\nexport default GoogleMaps\n"],"sourceRoot":""}