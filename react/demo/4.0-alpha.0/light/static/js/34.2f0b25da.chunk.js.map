{"version":3,"sources":["reusable/DocsCallout.js","reusable/DocsLink.js","reusable/Example.js","reusable/ProBadge.js","views/components/forms/form-control/FormControl.js"],"names":["DocsCallout","props","href","name","plural","slice","_href","packageJson","config","coreui_library_short_version","color","className","target","React","memo","DocsLink","text","rest","rel","Example","children","variant","active","visible","ProBadge","attributes","FormControl","xs","htmlFor","type","id","placeholder","component","rows","size","aria-label","disabled","readOnly","defaultValue","plainText","multiple","title"],"mappings":"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","file":"static/js/34.2f0b25da.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react-pro'\n\nimport packageJson from '../../package.json'\n\nconst DocsCallout = (props) => {\n  const { href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      A React {name} component {plural ? 'have' : 'has'} been created as a native React.js version\n      of Bootstrap {name}. {name} {plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react-pro'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react-pro'\nimport CIcon from '@coreui/icons-react'\n\nimport packageJson from '../../package.json'\n\nconst Example = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"underline\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon name=\"cil-media-play\" className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon name=\"cil-code\" className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(Example)\n","import React from 'react'\nimport { CBadge } from '@coreui/react-pro'\nimport PropTypes from 'prop-types'\n\nconst ProBadge = (props) => {\n  let { children, ...attributes } = { ...props }\n  return (\n    <CBadge\n      href=\"https://coreui.io/pro/react/\"\n      color=\"danger\"\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      {...attributes}\n    >\n      {children ? children : 'CoreUI Pro Component'}\n    </CBadge>\n  )\n}\n\nProBadge.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default React.memo(ProBadge)\n","import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormControl,\n  CFormLabel,\n  CRow,\n} from '@coreui/react-pro'\nimport { DocsCallout, Example } from 'src/reusable'\n\nconst FormControl = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <DocsCallout name=\"Form Control\" href=\"forms/form-control\" />\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Form Control</strong>\n          </CCardHeader>\n          <CCardBody>\n            <Example href=\"forms/form-control\">\n              <CForm>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"exampleFormControlInput1\">Email address</CFormLabel>\n                  <CFormControl\n                    type=\"email\"\n                    id=\"exampleFormControlInput1\"\n                    placeholder=\"name@example.com\"\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"exampleFormControlTextarea1\">Example textarea</CFormLabel>\n                  <CFormControl\n                    component=\"textarea\"\n                    id=\"exampleFormControlTextarea1\"\n                    rows=\"3\"\n                  ></CFormControl>\n                </div>\n              </CForm>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Form Control</strong> <small>Sizing</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Set heights using <code>size</code> property like <code>size=&#34;lg&#34;</code> and{' '}\n              <code>size=&#34;sm&#34;</code>.\n            </p>\n            <Example href=\"forms/form-control#sizing\">\n              <CFormControl\n                type=\"text\"\n                size=\"lg\"\n                placeholder=\"Large input\"\n                aria-label=\"lg input example\"\n              />\n              <br />\n              <CFormControl\n                type=\"text\"\n                placeholder=\"Default input\"\n                aria-label=\"default input example\"\n              />\n              <br />\n              <CFormControl\n                type=\"text\"\n                size=\"sm\"\n                placeholder=\"Small input\"\n                aria-label=\"sm input example\"\n              />\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Form Control</strong> <small>Disabled</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add the <code>disabled</code> boolean attribute on an input to give it a grayed out\n              appearance and remove pointer events.\n            </p>\n            <Example href=\"forms/form-control#disabled\">\n              <CFormControl\n                type=\"text\"\n                placeholder=\"Disabled input\"\n                aria-label=\"Disabled input example\"\n                disabled\n              />\n              <br />\n              <CFormControl\n                type=\"text\"\n                placeholder=\"Disabled readonly input\"\n                aria-label=\"Disabled input example\"\n                disabled\n                readOnly\n              />\n              <br />\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Form Control</strong> <small>Readonly</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add the <code>readOnly</code> boolean attribute on an input to prevent modification of\n              the input&#39;s value. Read-only inputs appear lighter (just like disabled inputs),\n              but retain the standard cursor.\n            </p>\n            <Example href=\"forms/form-control#readonly\">\n              <CFormControl\n                type=\"text\"\n                placeholder=\"Readonly input here...\"\n                aria-label=\"readonly input example\"\n                readOnly\n              />\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Form Control</strong> <small>Readonly plain text</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              If you want to have <code>&lt;input readonly&gt;</code> elements in your form styled\n              as plain text, use the <code>plainText</code> boolean property to remove the default\n              form field styling and preserve the correct margin and padding.\n            </p>\n            <Example href=\"components/accordion\">\n              <CRow className=\"mb-3\">\n                <CFormLabel htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">\n                  Email\n                </CFormLabel>\n                <div className=\"col-sm-10\">\n                  <CFormControl\n                    type=\"text\"\n                    id=\"staticEmail\"\n                    defaultValue=\"email@example.com\"\n                    readOnly\n                    plainText\n                  />\n                </div>\n              </CRow>\n              <CRow className=\"mb-3\">\n                <CFormLabel htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">\n                  Password\n                </CFormLabel>\n                <div className=\"col-sm-10\">\n                  <CFormControl type=\"password\" id=\"inputPassword\" />\n                </div>\n              </CRow>\n            </Example>\n            <Example href=\"components/accordion\">\n              <CForm className=\"row g-3\">\n                <div className=\"col-auto\">\n                  <CFormLabel htmlFor=\"staticEmail2\" className=\"visually-hidden\">\n                    Email\n                  </CFormLabel>\n                  <CFormControl\n                    type=\"text\"\n                    id=\"staticEmail2\"\n                    defaultValue=\"email@example.com\"\n                    readOnly\n                    plainText\n                  />\n                </div>\n                <div className=\"col-auto\">\n                  <CFormLabel htmlFor=\"inputPassword2\" className=\"visually-hidden\">\n                    Password\n                  </CFormLabel>\n                  <CFormControl type=\"password\" id=\"inputPassword2\" placeholder=\"Password\" />\n                </div>\n                <div className=\"col-auto\">\n                  <CButton type=\"submit\" className=\"mb-3\">\n                    Confirm identity\n                  </CButton>\n                </div>\n              </CForm>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Form Control</strong> <small>File input</small>\n          </CCardHeader>\n          <CCardBody>\n            <Example href=\"forms/form-control#file-input\">\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"formFile\">Default file input example</CFormLabel>\n                <CFormControl type=\"file\" id=\"formFile\" />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"formFileMultiple\">Multiple files input example</CFormLabel>\n                <CFormControl type=\"file\" id=\"formFileMultiple\" multiple />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"formFileDisabled\">Disabled file input example</CFormLabel>\n                <CFormControl type=\"file\" id=\"formFileDisabled\" disabled />\n              </div>\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"formFileSm\">Small file input example</CFormLabel>\n                <CFormControl type=\"file\" size=\"sm\" id=\"formFileSm\" />\n              </div>\n              <div>\n                <CFormLabel htmlFor=\"formFileLg\">Large file input example</CFormLabel>\n                <CFormControl type=\"file\" size=\"lg\" id=\"formFileLg\" />\n              </div>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Form Control</strong> <small>Color</small>\n          </CCardHeader>\n          <CCardBody>\n            <Example href=\"forms/form-control#color\">\n              <CFormLabel htmlFor=\"exampleColorInput\">Color picker</CFormLabel>\n              <CFormControl\n                type=\"color\"\n                id=\"exampleColorInput\"\n                defaultValue=\"#563d7c\"\n                title=\"Choose your color\"\n              />\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default FormControl\n"],"sourceRoot":""}