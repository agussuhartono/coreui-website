{"version":3,"sources":["reusable/DocsCallout.js","reusable/DocsLink.js","reusable/Example.js","reusable/ProBadge.js","views/components/forms/checks-radios/ChecksRadios.js"],"names":["DocsCallout","props","href","name","plural","slice","_href","packageJson","config","coreui_library_short_version","color","className","target","React","memo","DocsLink","text","rest","rel","Example","children","variant","active","visible","ProBadge","attributes","ChecksRadios","xs","id","label","defaultChecked","disabled","type","switch","size","value","inline","aria-label","button","autoComplete","buttonColor","buttonVariant"],"mappings":"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","file":"static/js/32.bbd0107d.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react-pro'\n\nimport packageJson from '../../package.json'\n\nconst DocsCallout = (props) => {\n  const { href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      A React {name} component {plural ? 'have' : 'has'} been created as a native React.js version\n      of Bootstrap {name}. {name} {plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react-pro'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react-pro'\nimport CIcon from '@coreui/icons-react'\n\nimport packageJson from '../../package.json'\n\nconst Example = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"underline\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon name=\"cil-media-play\" className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon name=\"cil-code\" className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(Example)\n","import React from 'react'\nimport { CBadge } from '@coreui/react-pro'\nimport PropTypes from 'prop-types'\n\nconst ProBadge = (props) => {\n  let { children, ...attributes } = { ...props }\n  return (\n    <CBadge\n      href=\"https://coreui.io/pro/react/\"\n      color=\"danger\"\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      {...attributes}\n    >\n      {children ? children : 'CoreUI Pro Component'}\n    </CBadge>\n  )\n}\n\nProBadge.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default React.memo(ProBadge)\n","import React from 'react'\nimport { CCard, CCardBody, CCardHeader, CCol, CFormCheck, CRow } from '@coreui/react-pro'\nimport { DocsCallout, Example } from 'src/reusable'\n\nconst ChecksRadios = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <DocsCallout name=\"Check and Radios\" href=\"forms/checks-radios\" />\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Checkbox</strong>\n          </CCardHeader>\n          <CCardBody>\n            <Example href=\"forms/checks-radios\">\n              <CFormCheck id=\"flexCheckDefault\" label=\"Default checkbox\" />\n              <CFormCheck id=\"flexCheckChecked\" label=\"Checked checkbox\" defaultChecked />\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Checkbox</strong> <small>Disabled</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add the <code>disabled</code> attribute and the associated <code>&lt;label&gt;</code>s\n              are automatically styled to match with a lighter color to help indicate the\n              input&#39;s state.\n            </p>\n            <Example href=\"forms/checks-radios#disabled\">\n              <CFormCheck label=\"Disabled checkbox\" disabled />\n              <CFormCheck label=\"Disabled checked checkbox\" defaultChecked disabled />\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Radio</strong>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add the <code>disabled</code> attribute and the associated <code>&lt;label&gt;</code>s\n              are automatically styled to match with a lighter color to help indicate the\n              input&#39;s state.\n            </p>\n            <Example href=\"forms/checks-radios#radios\">\n              <CFormCheck\n                type=\"radio\"\n                name=\"flexRadioDefault\"\n                id=\"flexRadioDefault1\"\n                label=\"Default radio\"\n              />\n              <CFormCheck\n                type=\"radio\"\n                name=\"flexRadioDefault\"\n                id=\"flexRadioDefault2\"\n                label=\"Checked radio\"\n                defaultChecked\n              />\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Radio</strong> <small>Disabled</small>\n          </CCardHeader>\n          <CCardBody>\n            <Example href=\"forms/checks-radios#disabled-1\">\n              <CFormCheck\n                type=\"radio\"\n                name=\"flexRadioDisabled\"\n                id=\"flexRadioDisabled\"\n                label=\"Disabled radio\"\n                disabled\n              />\n              <CFormCheck\n                type=\"radio\"\n                name=\"flexRadioDisabled\"\n                id=\"flexRadioCheckedDisabled\"\n                label=\"Disabled checked radio\"\n                defaultChecked\n                disabled\n              />\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Switches</strong>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              A switch has the markup of a custom checkbox but uses the <code>switch</code> boolean\n              properly to render a toggle switch. Switches also support the <code>disabled</code>{' '}\n              attribute.\n            </p>\n            <Example href=\"forms/checks-radios#switches\">\n              <CFormCheck\n                switch\n                label=\"Default switch checkbox input\"\n                id=\"formSwitchCheckDefault\"\n              />\n              <CFormCheck\n                switch\n                label=\"Checked switch checkbox input\"\n                id=\"formSwitchCheckChecked\"\n                defaultChecked\n              />\n              <CFormCheck\n                switch\n                label=\"Disabled switch checkbox input\"\n                id=\"formSwitchCheckDisabled\"\n                disabled\n              />\n              <CFormCheck\n                switch\n                label=\"Disabled checked switch checkbox input\"\n                id=\"formSwitchCheckCheckedDisabled\"\n                defaultChecked\n                disabled\n              />\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Switches</strong> <small>Sizes</small>\n          </CCardHeader>\n          <CCardBody>\n            <Example href=\"forms/checks-radios#sizes\">\n              <CFormCheck\n                switch\n                label=\"Default switch checkbox input\"\n                id=\"formSwitchCheckDefault\"\n              />\n              <CFormCheck\n                switch\n                size=\"lg\"\n                label=\"Large switch checkbox input\"\n                id=\"formSwitchCheckDefaultLg\"\n              />\n              <CFormCheck\n                switch\n                size=\"xl\"\n                label=\"Extra large switch checkbox input\"\n                id=\"formSwitchCheckDefaultXL\"\n              />\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Checks and Radios</strong> <small>Default layout (stacked)</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              By default, any number of checkboxes and radios that are immediate sibling will be\n              vertically stacked and appropriately spaced.\n            </p>\n            <Example href=\"forms/checks-radios#default-stacked\">\n              <CFormCheck id=\"defaultCheck1\" label=\"Default checkbox\" />\n              <CFormCheck id=\"defaultCheck2\" label=\"Disabled checkbox\" disabled />\n            </Example>\n            <Example href=\"forms/checks-radios#default-stacked\">\n              <CFormCheck\n                type=\"radio\"\n                name=\"exampleRadios\"\n                id=\"exampleRadios1\"\n                value=\"option1\"\n                label=\"Default radio\"\n                defaultChecked\n              />\n              <CFormCheck\n                type=\"radio\"\n                name=\"exampleRadios\"\n                id=\"exampleRadios2\"\n                value=\"option2\"\n                label=\"Second default radio\"\n              />\n              <CFormCheck\n                type=\"radio\"\n                name=\"exampleRadios\"\n                id=\"exampleRadios3\"\n                value=\"option3\"\n                label=\"Disabled radio\"\n                disabled\n              />\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Checks and Radios</strong> <small>Inline</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Group checkboxes or radios on the same horizontal row by adding <code>inline</code>{' '}\n              boolean property to any <code>&lt;CFormCheck&gt;</code>.\n            </p>\n            <Example href=\"forms/checks-radios#inline\">\n              <CFormCheck inline id=\"inlineCheckbox1\" value=\"option1\" label=\"1\" />\n              <CFormCheck inline id=\"inlineCheckbox2\" value=\"option2\" label=\"2\" />\n              <CFormCheck\n                inline\n                id=\"inlineCheckbox3\"\n                value=\"option3\"\n                label=\"3 (disabled)\"\n                disabled\n              />\n            </Example>\n            <Example href=\"forms/checks-radios#inline\">\n              <CFormCheck\n                inline\n                type=\"radio\"\n                name=\"inlineRadioOptions\"\n                id=\"inlineCheckbox1\"\n                value=\"option1\"\n                label=\"1\"\n              />\n              <CFormCheck\n                inline\n                type=\"radio\"\n                name=\"inlineRadioOptions\"\n                id=\"inlineCheckbox2\"\n                value=\"option2\"\n                label=\"2\"\n              />\n              <CFormCheck\n                inline\n                type=\"radio\"\n                name=\"inlineRadioOptions\"\n                id=\"inlineCheckbox3\"\n                value=\"option3\"\n                label=\"3 (disabled)\"\n                disabled\n              />\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Checks and Radios</strong> <small>Without labels</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Remember to still provide some form of accessible name for assistive technologies (for\n              instance, using <code>aria-label</code>).\n            </p>\n            <Example href=\"forms/checks-radios#without-labels\">\n              <div>\n                <CFormCheck id=\"checkboxNoLabel\" value=\"\" aria-label=\"...\" />\n              </div>\n              <div>\n                <CFormCheck\n                  type=\"radio\"\n                  name=\"radioNoLabel\"\n                  id=\"radioNoLabel\"\n                  value=\"\"\n                  aria-label=\"...\"\n                />\n              </div>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Toggle buttons</strong>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Create button-like checkboxes and radio buttons by using <code>button</code> boolean\n              property on the <code>&lt;CFormCheck&gt;</code> component. These toggle buttons can\n              further be grouped in a button group if needed.\n            </p>\n            <Example href=\"forms/checks-radios#toggle-buttons\">\n              <CFormCheck button id=\"btn-check\" autoComplete=\"off\" label=\"Single toggle\" />\n            </Example>\n            <Example href=\"forms/checks-radios#toggle-buttons\">\n              <CFormCheck\n                button\n                id=\"btn-check-2\"\n                autoComplete=\"off\"\n                label=\"Checked\"\n                defaultChecked\n              />\n            </Example>\n            <Example href=\"forms/checks-radios#toggle-buttons\">\n              <CFormCheck button id=\"btn-check-3\" autoComplete=\"off\" label=\"Disabled\" disabled />\n            </Example>\n            <h3>Radio toggle buttons</h3>\n            <Example href=\"forms/checks-radios#toggle-buttons\">\n              <CFormCheck\n                button\n                buttonColor=\"secondary\"\n                type=\"radio\"\n                name=\"options\"\n                id=\"option1\"\n                autoComplete=\"off\"\n                label=\"Checked\"\n                defaultChecked\n              />\n              <CFormCheck\n                button\n                buttonColor=\"secondary\"\n                type=\"radio\"\n                name=\"options\"\n                id=\"option2\"\n                autoComplete=\"off\"\n                label=\"Radio\"\n              />\n              <CFormCheck\n                button\n                buttonColor=\"secondary\"\n                type=\"radio\"\n                name=\"options\"\n                id=\"option3\"\n                autoComplete=\"off\"\n                label=\"Radio\"\n                disabled\n              />\n              <CFormCheck\n                button\n                buttonColor=\"secondary\"\n                type=\"radio\"\n                name=\"options\"\n                id=\"option4\"\n                autoComplete=\"off\"\n                label=\"Radio\"\n              />\n            </Example>\n            <h3>Outlined styles</h3>\n            <p className=\"text-medium-emphasis small\">\n              Different variants of button, such at the various outlined styles, are supported.\n            </p>\n            <Example href=\"forms/checks-radios#toggle-buttons\">\n              <div>\n                <CFormCheck\n                  button\n                  buttonColor=\"primary\"\n                  buttonVariant=\"outline\"\n                  id=\"btn-check-outlined\"\n                  autoComplete=\"off\"\n                  label=\"Single toggle\"\n                />\n              </div>\n              <div>\n                <CFormCheck\n                  button\n                  buttonColor=\"secondary\"\n                  buttonVariant=\"outline\"\n                  id=\"btn-check-2-outlined\"\n                  autoComplete=\"off\"\n                  label=\"Checked\"\n                  defaultChecked\n                />\n              </div>\n              <div>\n                <CFormCheck\n                  button\n                  buttonColor=\"success\"\n                  buttonVariant=\"outline\"\n                  type=\"radio\"\n                  name=\"options-outlined\"\n                  id=\"success-outlined\"\n                  autoComplete=\"off\"\n                  label=\"Radio\"\n                  defaultChecked\n                />\n                <CFormCheck\n                  button\n                  buttonColor=\"danger\"\n                  buttonVariant=\"outline\"\n                  type=\"radio\"\n                  name=\"options-outlined\"\n                  id=\"danger-outlined\"\n                  autoComplete=\"off\"\n                  label=\"Radio\"\n                />\n              </div>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default ChecksRadios\n"],"sourceRoot":""}