{"version":3,"sources":["reusable/DocsCallout.js","reusable/DocsLink.js","reusable/Example.js","reusable/ProBadge.js","views/components/forms/floating-labels/FloatingLabels.js"],"names":["DocsCallout","props","href","name","plural","slice","_href","packageJson","config","coreui_library_short_version","color","className","target","React","memo","DocsLink","text","rest","rel","Example","children","variant","active","visible","ProBadge","attributes","FloatingLabels","xs","type","id","placeholder","htmlFor","defaultValue","component","style","height","aria-label","value","gutter","md"],"mappings":"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","file":"static/js/33.a3d582df.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react-pro'\n\nimport packageJson from '../../package.json'\n\nconst DocsCallout = (props) => {\n  const { href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      A React {name} component {plural ? 'have' : 'has'} been created as a native React.js version\n      of Bootstrap {name}. {name} {plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react-pro'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react-pro'\nimport CIcon from '@coreui/icons-react'\n\nimport packageJson from '../../package.json'\n\nconst Example = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"underline\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon name=\"cil-media-play\" className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon name=\"cil-code\" className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(Example)\n","import React from 'react'\nimport { CBadge } from '@coreui/react-pro'\nimport PropTypes from 'prop-types'\n\nconst ProBadge = (props) => {\n  let { children, ...attributes } = { ...props }\n  return (\n    <CBadge\n      href=\"https://coreui.io/pro/react/\"\n      color=\"danger\"\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      {...attributes}\n    >\n      {children ? children : 'CoreUI Pro Component'}\n    </CBadge>\n  )\n}\n\nProBadge.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default React.memo(ProBadge)\n","import React from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CFormControl,\n  CFormLabel,\n  CFormFloating,\n  CFormSelect,\n  CRow,\n} from '@coreui/react-pro'\nimport { DocsCallout, Example } from 'src/reusable'\n\nconst FloatingLabels = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <DocsCallout name=\"Floating Label\" href=\"forms/floating-label\" />\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Floating labels</strong>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Wrap a pair of <code>&lt;CFormControl&gt;</code> and <code>&lt;CFormLabel&gt;</code>{' '}\n              elements in <code>CFormFloating</code> to enable floating labels with textual form\n              fields. A <code>placeholder</code> is required on each{' '}\n              <code>&lt;CFormControl&gt;</code> as our method of CSS-only floating labels uses the{' '}\n              <code>:placeholder-shown</code> pseudo-element. Also note that the{' '}\n              <code>&lt;CFormControl&gt;</code> must come first so we can utilize a sibling selector\n              (e.g., <code>~</code>).\n            </p>\n            <Example href=\"forms/floating-labels\">\n              <CFormFloating className=\"mb-3\">\n                <CFormControl type=\"email\" id=\"floatingInput\" placeholder=\"name@example.com\" />\n                <CFormLabel htmlFor=\"floatingInput\">Email address</CFormLabel>\n              </CFormFloating>\n              <CFormFloating>\n                <CFormControl type=\"password\" id=\"floatingPassword\" placeholder=\"Password\" />\n                <CFormLabel htmlFor=\"exampleFormControlTextarea1\">Password</CFormLabel>\n              </CFormFloating>\n            </Example>\n            <p className=\"text-medium-emphasis small\">\n              When there&#39;s a <code>value</code> already defined, <code>&lt;CFormLabel&gt;</code>\n              s will automatically adjust to their floated position.\n            </p>\n            <Example href=\"forms/floating-labels\">\n              <CFormFloating>\n                <CFormControl\n                  type=\"email\"\n                  id=\"floatingInputValue\"\n                  placeholder=\"name@example.com\"\n                  defaultValue=\"test@example.com\"\n                />\n                <CFormLabel htmlFor=\"floatingInputValue\">Input with value</CFormLabel>\n              </CFormFloating>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Floating labels</strong> <small>Textareas</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              By default, <code>&lt;CFormControl component=&#34;textarea&#34;&gt;</code>s will be\n              the same height as <code>&lt;CFormControl&gt;</code>s.\n            </p>\n            <Example href=\"forms/floating-labels#textareas\">\n              <CFormFloating>\n                <CFormControl\n                  component=\"textarea\"\n                  id=\"floatingTextarea\"\n                  placeholder=\"Leave a comment here\"\n                ></CFormControl>\n                <CFormLabel htmlFor=\"floatingTextarea\">Comments</CFormLabel>\n              </CFormFloating>\n            </Example>\n            <p className=\"text-medium-emphasis small\">\n              To set a custom height on your{' '}\n              <code>&lt;CFormControl component=&#34;textarea&#34;&gt;</code>, do not use the{' '}\n              <code>rows</code> attribute. Instead, set an explicit <code>height</code> (either\n              inline or via custom CSS).\n            </p>\n            <Example href=\"forms/floating-labels#textareas\">\n              <CFormFloating>\n                <CFormControl\n                  component=\"textarea\"\n                  placeholder=\"Leave a comment here\"\n                  id=\"floatingTextarea2\"\n                  style={{ height: '100px' }}\n                ></CFormControl>\n                <CFormLabel htmlFor=\"floatingTextarea2\">Comments</CFormLabel>\n              </CFormFloating>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Floating labels</strong> <small>Selects</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Other than <code>&lt;CFormControl&gt;</code>, floating labels are only available on{' '}\n              <code>&lt;CFormSelect&gt;</code>s. They work in the same way, but unlike{' '}\n              <code>&lt;CFormControl&gt;</code>s, they&#39;ll always show the{' '}\n              <code>&lt;CFormLabel&gt;</code> in its floated state.{' '}\n              <strong>\n                Selects with <code>size</code> and <code>multiple</code> are not supported.\n              </strong>\n            </p>\n            <Example href=\"forms/floating-labels#selects\">\n              <CFormFloating>\n                <CFormSelect id=\"floatingSelect\" aria-label=\"Floating label select example\">\n                  <option>Open this select menu</option>\n                  <option value=\"1\">One</option>\n                  <option value=\"2\">Two</option>\n                  <option value=\"3\">Three</option>\n                </CFormSelect>\n                <CFormLabel htmlFor=\"floatingSelect\">Works with selects</CFormLabel>\n              </CFormFloating>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Floating labels</strong> <small>Layout</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              When working with the CoreUI for Bootstrap grid system, be sure to place form elements\n              within column classes.\n            </p>\n            <Example href=\"forms/floating-labels#layout\">\n              <CRow xs={{ gutter: 2 }}>\n                <CCol md>\n                  <CFormFloating>\n                    <CFormControl\n                      type=\"email\"\n                      id=\"floatingInputGrid\"\n                      placeholder=\"name@example.com\"\n                      defaultValue=\"email@example.com\"\n                    />\n                    <CFormLabel htmlFor=\"floatingInputGrid\">Email address</CFormLabel>\n                  </CFormFloating>\n                </CCol>\n                <CCol md>\n                  <CFormFloating>\n                    <CFormSelect id=\"floatingSelectGrid\" aria-label=\"Floating label select example\">\n                      <option>Open this select menu</option>\n                      <option value=\"1\">One</option>\n                      <option value=\"2\">Two</option>\n                      <option value=\"3\">Three</option>\n                    </CFormSelect>\n                    <CFormLabel htmlFor=\"floatingSelectGrid\">Works with selects</CFormLabel>\n                  </CFormFloating>\n                </CCol>\n              </CRow>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default FloatingLabels\n"],"sourceRoot":""}