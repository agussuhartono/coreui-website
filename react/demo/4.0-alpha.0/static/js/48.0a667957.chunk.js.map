{"version":3,"sources":["reusable/DocsCallout.js","reusable/DocsLink.js","reusable/Example.js","reusable/ProBadge.js","views/theme/typography/Typography.js"],"names":["DocsCallout","props","href","name","plural","slice","_href","packageJson","config","coreui_library_short_version","color","className","target","React","memo","DocsLink","text","rest","rel","Example","children","variant","active","visible","ProBadge","attributes","Typography"],"mappings":"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","file":"static/js/48.0a667957.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react-pro'\n\nimport packageJson from '../../package.json'\n\nconst DocsCallout = (props) => {\n  const { href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      A React {name} component {plural ? 'have' : 'has'} been created as a native React.js version\n      of Bootstrap {name}. {name} {plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react-pro'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react-pro'\nimport CIcon from '@coreui/icons-react'\n\nimport packageJson from '../../package.json'\n\nconst Example = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"underline\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon name=\"cil-media-play\" className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon name=\"cil-code\" className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(Example)\n","import React from 'react'\nimport { CBadge } from '@coreui/react-pro'\nimport PropTypes from 'prop-types'\n\nconst ProBadge = (props) => {\n  let { children, ...attributes } = { ...props }\n  return (\n    <CBadge\n      href=\"https://coreui.io/pro/react/\"\n      color=\"danger\"\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      {...attributes}\n    >\n      {children ? children : 'CoreUI Pro Component'}\n    </CBadge>\n  )\n}\n\nProBadge.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default React.memo(ProBadge)\n","import React from 'react'\nimport { CCard, CCardHeader, CCardBody } from '@coreui/react-pro'\nimport { DocsLink } from 'src/reusable'\n\nconst Typography = () => {\n  return (\n    <>\n      <CCard className=\"mb-4\">\n        <CCardHeader>\n          Headings\n          <DocsLink href=\"https://coreui.io/docs/content/typography/\" />\n        </CCardHeader>\n        <CCardBody>\n          <p>\n            Documentation and examples for Bootstrap typography, including global settings,\n            headings, body text, lists, and more.\n          </p>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Heading</th>\n                <th>Example</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <p>\n                    <code className=\"highlighter-rouge\">&lt;h1&gt;&lt;/h1&gt;</code>\n                  </p>\n                </td>\n                <td>\n                  <span className=\"h1\">h1. Bootstrap heading</span>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <p>\n                    <code className=\"highlighter-rouge\">&lt;h2&gt;&lt;/h2&gt;</code>\n                  </p>\n                </td>\n                <td>\n                  <span className=\"h2\">h2. Bootstrap heading</span>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <p>\n                    <code className=\"highlighter-rouge\">&lt;h3&gt;&lt;/h3&gt;</code>\n                  </p>\n                </td>\n                <td>\n                  <span className=\"h3\">h3. Bootstrap heading</span>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <p>\n                    <code className=\"highlighter-rouge\">&lt;h4&gt;&lt;/h4&gt;</code>\n                  </p>\n                </td>\n                <td>\n                  <span className=\"h4\">h4. Bootstrap heading</span>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <p>\n                    <code className=\"highlighter-rouge\">&lt;h5&gt;&lt;/h5&gt;</code>\n                  </p>\n                </td>\n                <td>\n                  <span className=\"h5\">h5. Bootstrap heading</span>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <p>\n                    <code className=\"highlighter-rouge\">&lt;h6&gt;&lt;/h6&gt;</code>\n                  </p>\n                </td>\n                <td>\n                  <span className=\"h6\">h6. Bootstrap heading</span>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </CCardBody>\n      </CCard>\n      <CCard className=\"mb-4\">\n        <CCardHeader>Headings</CCardHeader>\n        <CCardBody>\n          <p>\n            <code className=\"highlighter-rouge\">.h1</code> through\n            <code className=\"highlighter-rouge\">.h6</code>\n            classes are also available, for when you want to match the font styling of a heading but\n            cannot use the associated HTML element.\n          </p>\n          <div className=\"bd-example\">\n            <p className=\"h1\">h1. Bootstrap heading</p>\n            <p className=\"h2\">h2. Bootstrap heading</p>\n            <p className=\"h3\">h3. Bootstrap heading</p>\n            <p className=\"h4\">h4. Bootstrap heading</p>\n            <p className=\"h5\">h5. Bootstrap heading</p>\n            <p className=\"h6\">h6. Bootstrap heading</p>\n          </div>\n        </CCardBody>\n      </CCard>\n      <CCard className=\"mb-4\">\n        <div className=\"card-header\">Display headings</div>\n        <div className=\"card-body\">\n          <p>\n            Traditional heading elements are designed to work best in the meat of your page content.\n            When you need a heading to stand out, consider using a <strong>display heading</strong>\n            —a larger, slightly more opinionated heading style.\n          </p>\n          <div className=\"bd-example bd-example-type\">\n            <table className=\"table\">\n              <tbody>\n                <tr>\n                  <td>\n                    <span className=\"display-1\">Display 1</span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <span className=\"display-2\">Display 2</span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <span className=\"display-3\">Display 3</span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <span className=\"display-4\">Display 4</span>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </CCard>\n      <CCard className=\"mb-4\">\n        <CCardHeader>Inline text elements</CCardHeader>\n        <CCardBody>\n          <p>\n            Traditional heading elements are designed to work best in the meat of your page content.\n            When you need a heading to stand out, consider using a <strong>display heading</strong>\n            —a larger, slightly more opinionated heading style.\n          </p>\n          <div className=\"bd-example\">\n            <p>\n              You can use the mark tag to <mark>highlight</mark> text.\n            </p>\n            <p>\n              <del>This line of text is meant to be treated as deleted text.</del>\n            </p>\n            <p>\n              <s>This line of text is meant to be treated as no longer accurate.</s>\n            </p>\n            <p>\n              <ins>This line of text is meant to be treated as an addition to the document.</ins>\n            </p>\n            <p>\n              <u>This line of text will render as underlined</u>\n            </p>\n            <p>\n              <small>This line of text is meant to be treated as fine print.</small>\n            </p>\n            <p>\n              <strong>This line rendered as bold text.</strong>\n            </p>\n            <p>\n              <em>This line rendered as italicized text.</em>\n            </p>\n          </div>\n        </CCardBody>\n      </CCard>\n      <CCard className=\"mb-4\">\n        <CCardHeader>Description list alignment</CCardHeader>\n        <CCardBody>\n          <p>\n            Align terms and descriptions horizontally by using our grid system’s predefined classes\n            (or semantic mixins). For longer terms, you can optionally add a{' '}\n            <code className=\"highlighter-rouge\">.text-truncate</code> class to truncate the text\n            with an ellipsis.\n          </p>\n          <div className=\"bd-example\">\n            <dl className=\"row\">\n              <dt className=\"col-sm-3\">Description lists</dt>\n              <dd className=\"col-sm-9\">A description list is perfect for defining terms.</dd>\n\n              <dt className=\"col-sm-3\">Euismod</dt>\n              <dd className=\"col-sm-9\">\n                <p>\n                  Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.\n                </p>\n                <p>Donec id elit non mi porta gravida at eget metus.</p>\n              </dd>\n\n              <dt className=\"col-sm-3\">Malesuada porta</dt>\n              <dd className=\"col-sm-9\">Etiam porta sem malesuada magna mollis euismod.</dd>\n\n              <dt className=\"col-sm-3 text-truncate\">Truncated term is truncated</dt>\n              <dd className=\"col-sm-9\">\n                Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut\n                fermentum massa justo sit amet risus.\n              </dd>\n\n              <dt className=\"col-sm-3\">Nesting</dt>\n              <dd className=\"col-sm-9\">\n                <dl className=\"row\">\n                  <dt className=\"col-sm-4\">Nested definition list</dt>\n                  <dd className=\"col-sm-8\">\n                    Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc.\n                  </dd>\n                </dl>\n              </dd>\n            </dl>\n          </div>\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default Typography\n"],"sourceRoot":""}