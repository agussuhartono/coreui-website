{"version":3,"sources":["reusable/DocsCallout.js","reusable/DocsLink.js","reusable/Example.js","reusable/ProBadge.js","views/components/notifications/badges/Badges.js"],"names":["DocsCallout","props","href","name","plural","slice","_href","packageJson","config","coreui_library_short_version","color","className","target","React","memo","DocsLink","text","rest","rel","Example","children","variant","active","visible","ProBadge","attributes","Badges","xs","lg","shape"],"mappings":"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","file":"static/js/42.defcc0aa.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react-pro'\n\nimport packageJson from '../../package.json'\n\nconst DocsCallout = (props) => {\n  const { href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      A React {name} component {plural ? 'have' : 'has'} been created as a native React.js version\n      of Bootstrap {name}. {name} {plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react-pro'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react-pro'\nimport CIcon from '@coreui/icons-react'\n\nimport packageJson from '../../package.json'\n\nconst Example = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"underline\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon name=\"cil-media-play\" className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon name=\"cil-code\" className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(Example)\n","import React from 'react'\nimport { CBadge } from '@coreui/react-pro'\nimport PropTypes from 'prop-types'\n\nconst ProBadge = (props) => {\n  let { children, ...attributes } = { ...props }\n  return (\n    <CBadge\n      href=\"https://coreui.io/pro/react/\"\n      color=\"danger\"\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      {...attributes}\n    >\n      {children ? children : 'CoreUI Pro Component'}\n    </CBadge>\n  )\n}\n\nProBadge.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default React.memo(ProBadge)\n","import React from 'react'\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CBadge, CRow } from '@coreui/react-pro'\nimport { DocsCallout, Example } from 'src/reusable'\n\nconst Badges = () => {\n  return (\n    <CRow>\n      <CBadge></CBadge>\n      <CCol xs={12}>\n        <DocsCallout name=\"Badges\" href=\"components/badge\" />\n      </CCol>\n      <CCol lg={6}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Badges</strong> <small>Dismissing</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Bootstrap badge scale to suit the size of the parent element by using relative font\n              sizing and <code>em</code> units.\n            </p>\n            <Example href=\"components/badge\">\n              <h1>\n                Example heading <CBadge color=\"secondary\">New</CBadge>\n              </h1>\n              <h2>\n                Example heading <CBadge color=\"secondary\">New</CBadge>\n              </h2>\n              <h3>\n                Example heading <CBadge color=\"secondary\">New</CBadge>\n              </h3>\n              <h4>\n                Example heading <CBadge color=\"secondary\">New</CBadge>\n              </h4>\n              <h5>\n                Example heading <CBadge color=\"secondary\">New</CBadge>\n              </h5>\n              <h6>\n                Example heading <CBadge color=\"secondary\">New</CBadge>\n              </h6>\n            </Example>\n            <p className=\"text-medium-emphasis small\">\n              Badges can be used as part of links or buttons to provide a counter.\n            </p>\n            <Example href=\"components/badge\">\n              <CButton color=\"primary\">\n                Notifications <CBadge color=\"secondary\">4</CBadge>\n              </CButton>\n            </Example>\n            <p className=\"text-medium-emphasis small\">\n              Remark that depending on how you use them, badges may be complicated for users of\n              screen readers and related assistive technologies.\n            </p>\n            <p className=\"text-medium-emphasis small\">\n              Unless the context is clear, consider including additional context with a visually\n              hidden piece of additional text.\n            </p>\n            <Example href=\"components/badge\">\n              <CButton color=\"primary\">\n                Profile <CBadge color=\"secondary\">9</CBadge>\n                <span className=\"visually-hidden\">unread messages</span>\n              </CButton>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol lg={6}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Badges</strong> <small>Contextual variations</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add any of the below-mentioned <code>color</code> props to modify the presentation of\n              a badge.\n            </p>\n            <Example href=\"components/badge#contextual-variations\">\n              <CBadge color=\"primary\">primary</CBadge>\n              <CBadge color=\"success\">success</CBadge>\n              <CBadge color=\"danger\">danger</CBadge>\n              <CBadge color=\"warning\">warning</CBadge>\n              <CBadge color=\"info\">info</CBadge>\n              <CBadge color=\"light\">light</CBadge>\n              <CBadge color=\"dark\">dark</CBadge>\n            </Example>\n          </CCardBody>\n        </CCard>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Badges</strong> <small>Pill badges</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Apply the <code>shape=&#34;rounded-pill&#34;</code> prop to make badges rounded.\n            </p>\n            <Example href=\"components/badge#pill-badges\">\n              <CBadge color=\"primary-gradient\" shape=\"rounded-pill\">\n                primary\n              </CBadge>\n              <CBadge color=\"success-gradient\" shape=\"rounded-pill\">\n                success\n              </CBadge>\n              <CBadge color=\"danger-gradient\" shape=\"rounded-pill\">\n                danger\n              </CBadge>\n              <CBadge color=\"warning-gradient\" shape=\"rounded-pill\">\n                warning\n              </CBadge>\n              <CBadge color=\"info-gradient\" shape=\"rounded-pill\">\n                info\n              </CBadge>\n              <CBadge color=\"light-gradient\" shape=\"rounded-pill\">\n                light\n              </CBadge>\n              <CBadge color=\"dark-gradient\" shape=\"rounded-pill\">\n                dark\n              </CBadge>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Badges\n"],"sourceRoot":""}