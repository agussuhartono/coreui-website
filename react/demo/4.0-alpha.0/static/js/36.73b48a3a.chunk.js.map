{"version":3,"sources":["reusable/DocsCallout.js","reusable/DocsLink.js","reusable/Example.js","reusable/ProBadge.js","views/components/forms/layout/Layout.js"],"names":["DocsCallout","props","href","name","plural","slice","_href","packageJson","config","coreui_library_short_version","color","className","target","React","memo","DocsLink","text","rest","rel","Example","children","variant","active","visible","ProBadge","attributes","Layout","xs","placeholder","aria-label","md","htmlFor","type","id","label","sm","value","defaultChecked","disabled"],"mappings":"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","file":"static/js/36.73b48a3a.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react-pro'\n\nimport packageJson from '../../package.json'\n\nconst DocsCallout = (props) => {\n  const { href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      A React {name} component {plural ? 'have' : 'has'} been created as a native React.js version\n      of Bootstrap {name}. {name} {plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react-pro'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react-pro'\nimport CIcon from '@coreui/icons-react'\n\nimport packageJson from '../../package.json'\n\nconst Example = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"underline\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon name=\"cil-media-play\" className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon name=\"cil-code\" className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(Example)\n","import React from 'react'\nimport { CBadge } from '@coreui/react-pro'\nimport PropTypes from 'prop-types'\n\nconst ProBadge = (props) => {\n  let { children, ...attributes } = { ...props }\n  return (\n    <CBadge\n      href=\"https://coreui.io/pro/react/\"\n      color=\"danger\"\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      {...attributes}\n    >\n      {children ? children : 'CoreUI Pro Component'}\n    </CBadge>\n  )\n}\n\nProBadge.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default React.memo(ProBadge)\n","import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormCheck,\n  CFormControl,\n  CFormLabel,\n  CFormSelect,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react-pro'\nimport { Example } from 'src/reusable'\n\nconst Layout = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Layout</strong> <small>Form grid</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              More complex forms can be built using our grid classes. Use these for form layouts\n              that require multiple columns, varied widths, and additional alignment options.\n            </p>\n            <Example href=\"forms/layout#form-grid\">\n              <CRow>\n                <CCol xs>\n                  <CFormControl placeholder=\"First name\" aria-label=\"First name\" />\n                </CCol>\n                <CCol xs>\n                  <CFormControl placeholder=\"Last name\" aria-label=\"Last name\" />\n                </CCol>\n              </CRow>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Layout</strong> <small>Gutters</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              By adding <a href=\"https://coreui.io/docs/layout/gutters/\">gutter modifier classes</a>\n              , you can have control over the gutter width in as well the inline as block direction.\n            </p>\n            <Example href=\"forms/layout#gutters\">\n              <CRow className=\"g-3\">\n                <CCol xs>\n                  <CFormControl placeholder=\"First name\" aria-label=\"First name\" />\n                </CCol>\n                <CCol xs>\n                  <CFormControl placeholder=\"Last name\" aria-label=\"Last name\" />\n                </CCol>\n              </CRow>\n            </Example>\n            <p className=\"text-medium-emphasis small\">\n              More complex layouts can also be created with the grid system.\n            </p>\n            <Example href=\"forms/layout#gutters\">\n              <CForm className=\"row g-3\">\n                <CCol md=\"6\">\n                  <CFormLabel htmlFor=\"inputEmail4\">Email</CFormLabel>\n                  <CFormControl type=\"email\" id=\"inputEmail4\" />\n                </CCol>\n                <CCol md=\"6\">\n                  <CFormLabel htmlFor=\"inputPassword4\">Password</CFormLabel>\n                  <CFormControl type=\"password\" id=\"inputPassword4\" />\n                </CCol>\n                <CCol xs=\"12\">\n                  <CFormLabel htmlFor=\"inputAddress\">Address</CFormLabel>\n                  <CFormControl id=\"inputAddress\" placeholder=\"1234 Main St\" />\n                </CCol>\n                <CCol xs=\"12\">\n                  <CFormLabel htmlFor=\"inputAddress2\">Address 2</CFormLabel>\n                  <CFormControl id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\" />\n                </CCol>\n                <CCol md=\"6\">\n                  <CFormLabel htmlFor=\"inputCity\">City</CFormLabel>\n                  <CFormControl id=\"inputCity\" />\n                </CCol>\n                <CCol md=\"4\">\n                  <CFormLabel htmlFor=\"inputState\">State</CFormLabel>\n                  <CFormSelect id=\"inputState\">\n                    <option>Choose...</option>\n                    <option>...</option>\n                  </CFormSelect>\n                </CCol>\n                <CCol md=\"2\">\n                  <CFormLabel htmlFor=\"inputZip\">Zip</CFormLabel>\n                  <CFormControl id=\"inputZip\" />\n                </CCol>\n                <CCol xs=\"12\">\n                  <CFormCheck type=\"checkbox\" id=\"gridCheck\" label=\"Check me out\" />\n                </CCol>\n                <CCol xs=\"12\">\n                  <CButton type=\"submit\">Sign in</CButton>\n                </CCol>\n              </CForm>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Layout</strong> <small>Horizontal form</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Create horizontal forms with the grid by adding the <code>.row</code> class to form\n              groups and using the <code>.col-*-*</code> classes to specify the width of your labels\n              and controls. Be sure to add <code>.col-form-label</code> to your{' '}\n              <code>&lt;CFormLabel&gt;</code>s as well so they&#39;re vertically centered with their\n              associated form controls.\n            </p>\n            <p className=\"text-medium-emphasis small\">\n              At times, you maybe need to use margin or padding utilities to create that perfect\n              alignment you need. For example, we&#39;ve removed the <code>padding-top</code> on our\n              stacked radio inputs label to better align the text baseline.\n            </p>\n            <Example href=\"forms/layout#horizontal-form\">\n              <CForm>\n                <CRow className=\"mb-3\">\n                  <CFormLabel htmlFor=\"inputEmail3\" className=\"col-sm-2 col-form-label\">\n                    Email\n                  </CFormLabel>\n                  <CCol sm=\"10\">\n                    <CFormControl type=\"email\" id=\"inputEmail3\" />\n                  </CCol>\n                </CRow>\n                <CRow className=\"mb-3\">\n                  <CFormLabel htmlFor=\"inputPassword3\" className=\"col-sm-2 col-form-label\">\n                    Password\n                  </CFormLabel>\n                  <CCol sm=\"10\">\n                    <CFormControl type=\"password\" id=\"inputPassword3\" />\n                  </CCol>\n                </CRow>\n                <fieldset className=\"row mb-3\">\n                  <legend className=\"col-form-label col-sm-2 pt-0\">Radios</legend>\n                  <CCol sm=\"10\">\n                    <CFormCheck\n                      type=\"radio\"\n                      name=\"gridRadios\"\n                      id=\"gridRadios1\"\n                      value=\"option1\"\n                      label=\"First radio\"\n                      defaultChecked\n                    />\n                    <CFormCheck\n                      type=\"radio\"\n                      name=\"gridRadios\"\n                      id=\"gridRadios2\"\n                      value=\"option2\"\n                      label=\"Second radio\"\n                    />\n                    <CFormCheck\n                      type=\"radio\"\n                      name=\"gridRadios\"\n                      id=\"gridRadios3\"\n                      value=\"option3\"\n                      label=\"Third disabled radio\"\n                      disabled\n                    />\n                  </CCol>\n                </fieldset>\n                <CRow className=\"mb-3\">\n                  <div className=\"col-sm-10 offset-sm-2\">\n                    <CFormCheck type=\"checkbox\" id=\"gridCheck1\" label=\"Example checkbox\" />\n                  </div>\n                </CRow>\n                <CButton type=\"submit\">Sign in</CButton>\n              </CForm>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Layout</strong> <small>Horizontal form label sizing</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Be sure to use <code>.col-form-label-sm</code> or <code>.col-form-label-lg</code> to\n              your <code>&lt;CFormLabel&gt;</code>s or <code>&lt;legend&gt;</code>s to correctly\n              follow the size of <code>.form-control-lg</code> and <code>.form-control-sm</code>.\n            </p>\n            <Example href=\"forms/layout#horizontal-form-label-sizing\">\n              <CRow className=\"mb-3\">\n                <CFormLabel\n                  htmlFor=\"colFormLabelSm\"\n                  className=\"col-sm-2 col-form-label col-form-label-sm\"\n                >\n                  Email\n                </CFormLabel>\n                <CCol sm=\"10\">\n                  <CFormControl\n                    type=\"email\"\n                    className=\"form-control form-control-sm\"\n                    id=\"colFormLabelSm\"\n                    placeholder=\"col-form-label-sm\"\n                  />\n                </CCol>\n              </CRow>\n              <CRow className=\"mb-3\">\n                <CFormLabel htmlFor=\"colFormLabel\" className=\"col-sm-2 col-form-label\">\n                  Email\n                </CFormLabel>\n                <CCol sm=\"10\">\n                  <CFormControl type=\"email\" id=\"colFormLabel\" placeholder=\"col-form-label\" />\n                </CCol>\n              </CRow>\n              <CRow>\n                <CFormLabel\n                  htmlFor=\"colFormLabelLg\"\n                  className=\"col-sm-2 col-form-label col-form-label-lg\"\n                >\n                  Email\n                </CFormLabel>\n                <CCol sm=\"10\">\n                  <CFormControl\n                    type=\"email\"\n                    className=\"form-control form-control-lg\"\n                    id=\"colFormLabelLg\"\n                    placeholder=\"col-form-label-lg\"\n                  />\n                </CCol>\n              </CRow>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Layout</strong> <small>Column sizing</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              As shown in the previous examples, our grid system allows you to place any number of{' '}\n              <code>&lt;CCol&gt;</code>s within a <code>&lt;CRow&gt;</code>. They&#39;ll split the\n              available width equally between them. You may also pick a subset of your columns to\n              take up more or less space, while the remaining <code>&lt;CCol&gt;</code>s equally\n              split the rest, with specific column classes like{' '}\n              <code>&lt;CCol sm=&#34;7&#34;&gt;</code>.\n            </p>\n            <Example href=\"forms/layout#column-sizing\">\n              <CRow className=\"g-3\">\n                <CCol sm=\"7\">\n                  <CFormControl placeholder=\"City\" aria-label=\"City\" />\n                </CCol>\n                <CCol sm>\n                  <CFormControl placeholder=\"State\" aria-label=\"State\" />\n                </CCol>\n                <CCol sm>\n                  <CFormControl placeholder=\"Zip\" aria-label=\"Zip\" />\n                </CCol>\n              </CRow>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Layout</strong> <small>Auto-sizing</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              The example below uses a flexbox utility to vertically center the contents and changes{' '}\n              <code>&lt;CCol&gt;</code> to <code>&lt;CCol xs=&#34;auto&#34;&gt;</code> so that your\n              columns only take up as much space as needed. Put another way, the column sizes itself\n              based on the contents.\n            </p>\n            <Example href=\"forms/layout#auto-sizing\">\n              <CForm className=\"row gy-2 gx-3 align-items-center\">\n                <CCol xs=\"auto\">\n                  <CFormLabel className=\"visually-hidden\" htmlFor=\"autoSizingInput\">\n                    Name\n                  </CFormLabel>\n                  <CFormControl id=\"autoSizingInput\" placeholder=\"Jane Doe\" />\n                </CCol>\n                <CCol xs=\"auto\">\n                  <CFormLabel className=\"visually-hidden\" htmlFor=\"autoSizingInputGroup\">\n                    Username\n                  </CFormLabel>\n                  <CInputGroup>\n                    <CInputGroupText>@</CInputGroupText>\n                    <CFormControl id=\"autoSizingInputGroup\" placeholder=\"Username\" />\n                  </CInputGroup>\n                </CCol>\n                <CCol xs=\"auto\">\n                  <CFormLabel className=\"visually-hidden\" htmlFor=\"autoSizingSelect\">\n                    Preference\n                  </CFormLabel>\n                  <CFormSelect id=\"autoSizingSelect\">\n                    <option>Choose...</option>\n                    <option value=\"1\">One</option>\n                    <option value=\"2\">Two</option>\n                    <option value=\"3\">Three</option>\n                  </CFormSelect>\n                </CCol>\n                <CCol xs=\"auto\">\n                  <CFormCheck type=\"checkbox\" id=\"autoSizingCheck\" label=\"Remember me\" />\n                </CCol>\n                <CCol xs=\"auto\">\n                  <CButton type=\"submit\">Submit</CButton>\n                </CCol>\n              </CForm>\n            </Example>\n            <p className=\"text-medium-emphasis small\">\n              You can then remix that once again with size-specific column classes.\n            </p>\n            <Example href=\"forms/layout#auto-sizing\">\n              <CForm className=\"row gx-3 gy-2 align-items-center\">\n                <CCol sm=\"3\">\n                  <CFormLabel className=\"visually-hidden\" htmlFor=\"specificSizeInputName\">\n                    Name\n                  </CFormLabel>\n                  <CFormControl id=\"specificSizeInputName\" placeholder=\"Jane Doe\" />\n                </CCol>\n                <CCol sm=\"3\">\n                  <CFormLabel className=\"visually-hidden\" htmlFor=\"specificSizeInputGroupUsername\">\n                    Username\n                  </CFormLabel>\n                  <CInputGroup>\n                    <CInputGroupText>@</CInputGroupText>\n                    <CFormControl id=\"specificSizeInputGroupUsername\" placeholder=\"Username\" />\n                  </CInputGroup>\n                </CCol>\n                <CCol sm=\"3\">\n                  <CFormLabel className=\"visually-hidden\" htmlFor=\"specificSizeSelect\">\n                    Preference\n                  </CFormLabel>\n                  <CFormSelect id=\"specificSizeSelect\">\n                    <option>Choose...</option>\n                    <option value=\"1\">One</option>\n                    <option value=\"2\">Two</option>\n                    <option value=\"3\">Three</option>\n                  </CFormSelect>\n                </CCol>\n                <CCol xs=\"auto\">\n                  <CFormCheck type=\"checkbox\" id=\"autoSizingCheck2\" label=\"Remember me\" />\n                </CCol>\n                <CCol xs=\"auto\">\n                  <CButton type=\"submit\">Submit</CButton>\n                </CCol>\n              </CForm>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Layout</strong> <small>Inline forms</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Use the <code>&lt;CCol xs=&#34;auto&#34;&gt;</code> class to create horizontal\n              layouts. By adding{' '}\n              <a href=\"https://coreui.io/docs/layout/gutters/\">gutter modifier classes</a>, we will\n              have gutters in horizontal and vertical directions. The{' '}\n              <code>.align-items-center</code> aligns the form elements to the middle, making the{' '}\n              <code>&lt;CFormCheck&gt;</code> align properly.\n            </p>\n            <Example href=\"forms/layout#inline-forms\">\n              <CForm className=\"row row-cols-lg-auto g-3 align-items-center\">\n                <CCol xs=\"12\">\n                  <CFormLabel className=\"visually-hidden\" htmlFor=\"inlineFormInputGroupUsername\">\n                    Username\n                  </CFormLabel>\n                  <CInputGroup>\n                    <CInputGroupText>@</CInputGroupText>\n                    <CFormControl id=\"inlineFormInputGroupUsername\" placeholder=\"Username\" />\n                  </CInputGroup>\n                </CCol>\n                <CCol xs=\"12\">\n                  <CFormLabel className=\"visually-hidden\" htmlFor=\"inlineFormSelectPref\">\n                    Preference\n                  </CFormLabel>\n                  <CFormSelect id=\"inlineFormSelectPref\">\n                    <option>Choose...</option>\n                    <option value=\"1\">One</option>\n                    <option value=\"2\">Two</option>\n                    <option value=\"3\">Three</option>\n                  </CFormSelect>\n                </CCol>\n                <CCol xs=\"12\">\n                  <CFormCheck type=\"checkbox\" id=\"inlineFormCheck\" label=\"Remember me\" />\n                </CCol>\n                <CCol xs=\"12\">\n                  <CButton type=\"submit\">Submit</CButton>\n                </CCol>\n              </CForm>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}