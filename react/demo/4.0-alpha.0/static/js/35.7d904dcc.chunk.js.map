{"version":3,"sources":["reusable/DocsCallout.js","reusable/DocsLink.js","reusable/Example.js","reusable/ProBadge.js","views/components/forms/input-group/InputGroup.js"],"names":["DocsCallout","props","href","name","plural","slice","_href","packageJson","config","coreui_library_short_version","color","className","target","React","memo","DocsLink","text","rest","rel","Example","children","variant","active","visible","ProBadge","attributes","Select","xs","id","placeholder","aria-label","aria-describedby","htmlFor","component","size","type","value","alignment","split"],"mappings":"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","file":"static/js/35.7d904dcc.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react-pro'\n\nimport packageJson from '../../package.json'\n\nconst DocsCallout = (props) => {\n  const { href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      A React {name} component {plural ? 'have' : 'has'} been created as a native React.js version\n      of Bootstrap {name}. {name} {plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react-pro'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react-pro'\nimport CIcon from '@coreui/icons-react'\n\nimport packageJson from '../../package.json'\n\nconst Example = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"underline\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon name=\"cil-media-play\" className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon name=\"cil-code\" className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(Example)\n","import React from 'react'\nimport { CBadge } from '@coreui/react-pro'\nimport PropTypes from 'prop-types'\n\nconst ProBadge = (props) => {\n  let { children, ...attributes } = { ...props }\n  return (\n    <CBadge\n      href=\"https://coreui.io/pro/react/\"\n      color=\"danger\"\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      {...attributes}\n    >\n      {children ? children : 'CoreUI Pro Component'}\n    </CBadge>\n  )\n}\n\nProBadge.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default React.memo(ProBadge)\n","import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CFormCheck,\n  CFormControl,\n  CFormLabel,\n  CFormSelect,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react-pro'\nimport { DocsCallout, Example } from 'src/reusable'\n\nconst Select = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <DocsCallout name=\"Input Group\" href=\"forms/input-group\" />\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Input group</strong> <small>Basic example</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Place one add-on or button on either side of an input. You may also place one on both\n              sides of an input. Remember to place <code>&lt;CFormLabel&gt;</code>s outside the\n              input group.\n            </p>\n            <Example href=\"forms/input-group\">\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText id=\"basic-addon1\">@</CInputGroupText>\n                <CFormControl\n                  placeholder=\"Username\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                />\n              </CInputGroup>\n              <CInputGroup className=\"mb-3\">\n                <CFormControl\n                  placeholder=\"Recipient&#39;s username\"\n                  aria-label=\"Recipient&#39;s username\"\n                  aria-describedby=\"basic-addon2\"\n                />\n                <CInputGroupText id=\"basic-addon2\">@example.com</CInputGroupText>\n              </CInputGroup>\n              <CFormLabel htmlFor=\"basic-url\">Your vanity URL</CFormLabel>\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText id=\"basic-addon3\">https://example.com/users/</CInputGroupText>\n                <CFormControl id=\"basic-url\" aria-describedby=\"basic-addon3\" />\n              </CInputGroup>\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText>$</CInputGroupText>\n                <CFormControl aria-label=\"Amount (to the nearest dollar)\" />\n                <CInputGroupText>.00</CInputGroupText>\n              </CInputGroup>\n              <CInputGroup className=\"mb-3\">\n                <CFormControl placeholder=\"Username\" aria-label=\"Username\" />\n                <CInputGroupText>@</CInputGroupText>\n                <CFormControl placeholder=\"Server\" aria-label=\"Server\" />\n              </CInputGroup>\n              <CInputGroup>\n                <CInputGroupText>With textarea</CInputGroupText>\n                <CFormControl component=\"textarea\" aria-label=\"With textarea\"></CFormControl>\n              </CInputGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Input group</strong> <small>Wrapping</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Input groups wrap by default via <code>flex-wrap: wrap</code> in order to accommodate\n              custom form field validation within an input group. You may disable this with{' '}\n              <code>.flex-nowrap</code>.\n            </p>\n            <Example href=\"forms/input-group#wrapping\">\n              <CInputGroup className=\"flex-nowrap\">\n                <CInputGroupText id=\"addon-wrapping\">@</CInputGroupText>\n                <CFormControl\n                  placeholder=\"Username\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"addon-wrapping\"\n                />\n              </CInputGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Input group</strong> <small>Sizing</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add the relative form sizing classes to the <code>&lt;CInputGroup&gt;</code> itself\n              and contents within will automatically resize—no need for repeating the form control\n              size classes on each element.\n            </p>\n            <p className=\"text-medium-emphasis small\">\n              <strong>Sizing on the individual input group elements isn&#39;tsupported.</strong>\n            </p>\n            <Example href=\"forms/input-group#sizing\">\n              <CInputGroup size=\"sm\" className=\"mb-3\">\n                <CInputGroupText id=\"inputGroup-sizing-sm\">Small</CInputGroupText>\n                <CFormControl\n                  aria-label=\"Sizing example input\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                />\n              </CInputGroup>\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText id=\"inputGroup-sizing-default\">Default</CInputGroupText>\n                <CFormControl\n                  aria-label=\"Sizing example input\"\n                  aria-describedby=\"inputGroup-sizing-default\"\n                />\n              </CInputGroup>\n              <CInputGroup size=\"lg\">\n                <CInputGroupText id=\"inputGroup-sizing-lg\">Large</CInputGroupText>\n                <CFormControl\n                  aria-label=\"Sizing example input\"\n                  aria-describedby=\"inputGroup-sizing-lg\"\n                />\n              </CInputGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Input group</strong> <small>Checkboxes and radios</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Place any checkbox or radio option within an input group&#39;s addon instead of text.\n            </p>\n            <Example href=\"forms/input-group#checkboxes-and-radios\">\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText>\n                  <CFormCheck\n                    type=\"checkbox\"\n                    value=\"\"\n                    aria-label=\"Checkbox for following text input\"\n                  />\n                </CInputGroupText>\n                <CFormControl aria-label=\"Text input with checkbox\" />\n              </CInputGroup>\n              <CInputGroup>\n                <CInputGroupText>\n                  <CFormCheck\n                    type=\"radio\"\n                    value=\"\"\n                    aria-label=\"Radio button for following text input\"\n                  />\n                </CInputGroupText>\n                <CFormControl aria-label=\"Text input with radio button\" />\n              </CInputGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Input group</strong> <small>Multiple inputs</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              While multiple <code>&lt;CFormControl&gt;</code>s are supported visually, validation\n              styles are only available for input groups with a single{' '}\n              <code>&lt;CFormControl&gt;</code>.\n            </p>\n            <Example href=\"forms/input-group#multiple-inputs\">\n              <CInputGroup>\n                <CInputGroupText>First and last name</CInputGroupText>\n                <CFormControl aria-label=\"First name\" />\n                <CFormControl aria-label=\"Last name\" />\n              </CInputGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Input group</strong> <small>Multiple addons</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Multiple add-ons are supported and can be mixed with checkbox and radio input\n              versions..\n            </p>\n            <Example href=\"forms/input-group#multiple-addons\">\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText>$</CInputGroupText>\n                <CInputGroupText>0.00</CInputGroupText>\n                <CFormControl aria-label=\"Dollar amount (with dot and two decimal places)\" />\n              </CInputGroup>\n              <CInputGroup>\n                <CFormControl aria-label=\"Dollar amount (with dot and two decimal places)\" />\n                <CInputGroupText>$</CInputGroupText>\n                <CInputGroupText>0.00</CInputGroupText>\n              </CInputGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Input group</strong> <small>Button addons</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Multiple add-ons are supported and can be mixed with checkbox and radio input\n              versions..\n            </p>\n            <Example href=\"forms/input-group#button-addons\">\n              <CInputGroup className=\"mb-3\">\n                <CButton type=\"button\" color=\"secondary\" variant=\"outline\" id=\"button-addon1\">\n                  Button\n                </CButton>\n                <CFormControl\n                  placeholder=\"\"\n                  aria-label=\"Example text with button addon\"\n                  aria-describedby=\"button-addon1\"\n                />\n              </CInputGroup>\n              <CInputGroup className=\"mb-3\">\n                <CFormControl\n                  placeholder=\"Recipient's username\"\n                  aria-label=\"Recipient's username\"\n                  aria-describedby=\"button-addon2\"\n                />\n                <CButton type=\"button\" color=\"secondary\" variant=\"outline\" id=\"button-addon2\">\n                  Button\n                </CButton>\n              </CInputGroup>\n              <CInputGroup className=\"mb-3\">\n                <CButton type=\"button\" color=\"secondary\" variant=\"outline\">\n                  Button\n                </CButton>\n                <CButton type=\"button\" color=\"secondary\" variant=\"outline\">\n                  Button\n                </CButton>\n                <CFormControl placeholder=\"\" aria-label=\"Example text with two button addons\" />\n              </CInputGroup>\n              <CInputGroup>\n                <CFormControl\n                  placeholder=\"Recipient's username\"\n                  aria-label=\"Recipient's username with two button addons\"\n                />\n                <CButton type=\"button\" color=\"secondary\" variant=\"outline\">\n                  Button\n                </CButton>\n                <CButton type=\"button\" color=\"secondary\" variant=\"outline\">\n                  Button\n                </CButton>\n              </CInputGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Input group</strong> <small>Buttons with dropdowns</small>\n          </CCardHeader>\n          <CCardBody>\n            <Example href=\"forms/input-group#buttons-with-dropdowns\">\n              <CInputGroup className=\"mb-3\">\n                <CDropdown variant=\"input-group\">\n                  <CDropdownToggle color=\"secondary\" variant=\"outline\">\n                    Dropdown\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem href=\"#\">Action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                    <CDropdownDivider />\n                    <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CFormControl aria-label=\"Text input with dropdown button\" />\n              </CInputGroup>\n              <CInputGroup className=\"mb-3\">\n                <CFormControl aria-label=\"Text input with dropdown button\" />\n                <CDropdown alignment=\"end\" variant=\"input-group\">\n                  <CDropdownToggle color=\"secondary\" variant=\"outline\">\n                    Dropdown\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem href=\"#\">Action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                    <CDropdownDivider />\n                    <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </CInputGroup>\n              <CInputGroup>\n                <CDropdown variant=\"input-group\">\n                  <CDropdownToggle color=\"secondary\" variant=\"outline\">\n                    Dropdown\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem href=\"#\">Action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                    <CDropdownDivider />\n                    <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CFormControl aria-label=\"Text input with 2 dropdown buttons\" />\n                <CDropdown alignment=\"end\" variant=\"input-group\">\n                  <CDropdownToggle color=\"secondary\" variant=\"outline\">\n                    Dropdown\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem href=\"#\">Action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                    <CDropdownDivider />\n                    <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </CInputGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Input group</strong> <small>Segmented buttons</small>\n          </CCardHeader>\n          <CCardBody>\n            <Example href=\"forms/input-group#segmented-buttons\">\n              <CInputGroup className=\"mb-3\">\n                <CDropdown variant=\"input-group\">\n                  <CButton type=\"button\" color=\"secondary\" variant=\"outline\">\n                    Action\n                  </CButton>\n                  <CDropdownToggle color=\"secondary\" variant=\"outline\" split />\n                  <CDropdownMenu>\n                    <CDropdownItem href=\"#\">Action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                    <CDropdownDivider />\n                    <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CFormControl aria-label=\"Text input with segmented dropdown button\" />\n              </CInputGroup>\n              <CInputGroup>\n                <CFormControl aria-label=\"Text input with segmented dropdown button\" />\n                <CDropdown alignment=\"end\" variant=\"input-group\">\n                  <CButton type=\"button\" color=\"secondary\" variant=\"outline\">\n                    Action\n                  </CButton>\n                  <CDropdownToggle color=\"secondary\" variant=\"outline\" split />\n                  <CDropdownMenu>\n                    <CDropdownItem href=\"#\">Action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                    <CDropdownDivider />\n                    <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </CInputGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Input group</strong> <small>Custom select</small>\n          </CCardHeader>\n          <CCardBody>\n            <Example href=\"forms/input-group#custom-select\">\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText component=\"label\" htmlFor=\"inputGroupSelect01\">\n                  Options\n                </CInputGroupText>\n                <CFormSelect id=\"inputGroupSelect01\">\n                  <option>Choose...</option>\n                  <option value=\"1\">One</option>\n                  <option value=\"2\">Two</option>\n                  <option value=\"3\">Three</option>\n                </CFormSelect>\n              </CInputGroup>\n              <CInputGroup className=\"mb-3\">\n                <CFormSelect id=\"inputGroupSelect02\">\n                  <option>Choose...</option>\n                  <option value=\"1\">One</option>\n                  <option value=\"2\">Two</option>\n                  <option value=\"3\">Three</option>\n                </CFormSelect>\n                <CInputGroupText component=\"label\" htmlFor=\"inputGroupSelect02\">\n                  Options\n                </CInputGroupText>\n              </CInputGroup>\n              <CInputGroup className=\"mb-3\">\n                <CButton type=\"button\" color=\"secondary\" variant=\"outline\">\n                  Button\n                </CButton>\n                <CFormSelect id=\"inputGroupSelect03\" aria-label=\"Example select with button addon\">\n                  <option>Choose...</option>\n                  <option value=\"1\">One</option>\n                  <option value=\"2\">Two</option>\n                  <option value=\"3\">Three</option>\n                </CFormSelect>\n              </CInputGroup>\n              <CInputGroup>\n                <CFormSelect id=\"inputGroupSelect04\" aria-label=\"Example select with button addon\">\n                  <option>Choose...</option>\n                  <option value=\"1\">One</option>\n                  <option value=\"2\">Two</option>\n                  <option value=\"3\">Three</option>\n                </CFormSelect>\n                <CButton type=\"button\" color=\"secondary\" variant=\"outline\">\n                  Button\n                </CButton>\n              </CInputGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Input group</strong> <small>Custom file input</small>\n          </CCardHeader>\n          <CCardBody>\n            <Example href=\"forms/input-group#custom-file-input\">\n              <CInputGroup className=\"mb-3\">\n                <CInputGroupText component=\"label\" htmlFor=\"inputGroupFile01\">\n                  Upload\n                </CInputGroupText>\n                <CFormControl type=\"file\" id=\"inputGroupFile01\" />\n              </CInputGroup>\n              <CInputGroup className=\"mb-3\">\n                <CFormControl type=\"file\" id=\"inputGroupFile02\" />\n                <CInputGroupText component=\"label\" htmlFor=\"inputGroupFile02\">\n                  Upload\n                </CInputGroupText>\n              </CInputGroup>\n              <CInputGroup className=\"mb-3\">\n                <CButton\n                  type=\"button\"\n                  color=\"secondary\"\n                  variant=\"outline\"\n                  id=\"inputGroupFileAddon03\"\n                >\n                  Button\n                </CButton>\n                <CFormControl\n                  type=\"file\"\n                  id=\"inputGroupFile03\"\n                  aria-describedby=\"inputGroupFileAddon03\"\n                  aria-label=\"Upload\"\n                />\n              </CInputGroup>\n              <CInputGroup>\n                <CFormControl\n                  type=\"file\"\n                  id=\"inputGroupFile04\"\n                  aria-describedby=\"inputGroupFileAddon04\"\n                  aria-label=\"Upload\"\n                />\n                <CButton\n                  type=\"button\"\n                  color=\"secondary\"\n                  variant=\"outline\"\n                  id=\"inputGroupFileAddon04\"\n                >\n                  Button\n                </CButton>\n              </CInputGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Select\n"],"sourceRoot":""}