{"version":3,"sources":["reusable/DocsCallout.js","reusable/DocsLink.js","reusable/Example.js","reusable/ProBadge.js","views/components/base/progress/Progress.js"],"names":["DocsCallout","props","href","name","plural","slice","_href","packageJson","config","coreui_library_short_version","color","className","target","React","memo","DocsLink","text","rest","rel","Example","children","variant","active","visible","ProBadge","attributes","Progress","xs","value","height","animated"],"mappings":"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","file":"static/js/25.217c7c70.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react-pro'\n\nimport packageJson from '../../package.json'\n\nconst DocsCallout = (props) => {\n  const { href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      A React {name} component {plural ? 'have' : 'has'} been created as a native React.js version\n      of Bootstrap {name}. {name} {plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react-pro'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react-pro'\nimport CIcon from '@coreui/icons-react'\n\nimport packageJson from '../../package.json'\n\nconst Example = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"underline\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon name=\"cil-media-play\" className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon name=\"cil-code\" className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(Example)\n","import React from 'react'\nimport { CBadge } from '@coreui/react-pro'\nimport PropTypes from 'prop-types'\n\nconst ProBadge = (props) => {\n  let { children, ...attributes } = { ...props }\n  return (\n    <CBadge\n      href=\"https://coreui.io/pro/react/\"\n      color=\"danger\"\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      {...attributes}\n    >\n      {children ? children : 'CoreUI Pro Component'}\n    </CBadge>\n  )\n}\n\nProBadge.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default React.memo(ProBadge)\n","import React from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CProgressBar,\n  CRow,\n} from '@coreui/react-pro'\nimport { DocsCallout, Example } from 'src/reusable'\n\nconst Progress = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <DocsCallout name=\"Progress\" href=\"components/progress\" />\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Progress</strong> <small>Basic example</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Progress components are built with two HTML elements, some CSS to set the width, and a\n              few attributes. We don&#39;tuse{' '}\n              <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress\">\n                the HTML5 <code>&lt;progress&gt;</code> element\n              </a>\n              , ensuring you can stack progress bars, animate them, and place text labels over them.\n            </p>\n            <Example href=\"components/progress\">\n              <CProgress className=\"mb-3\">\n                <CProgressBar value={0} />\n              </CProgress>\n              <CProgress className=\"mb-3\">\n                <CProgressBar value={25} />\n              </CProgress>\n              <CProgress className=\"mb-3\">\n                <CProgressBar value={50} />\n              </CProgress>\n              <CProgress className=\"mb-3\">\n                <CProgressBar value={75} />\n              </CProgress>\n              <CProgress className=\"mb-3\">\n                <CProgressBar value={100} />\n              </CProgress>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Progress</strong> <small>Labels</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add labels to your progress bars by placing text within the{' '}\n              <code>&lt;CProgressBar&gt;</code>.\n            </p>\n            <Example href=\"components/progress#labels\">\n              <CProgress className=\"mb-3\">\n                <CProgressBar value={25}>25%</CProgressBar>\n              </CProgress>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Progress</strong> <small>Height</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              We only set a <code>height</code> value on the <code>&lt;CProgress&gt;</code>, so if\n              you change that value the inner <code>&lt;CProgressBar&gt;</code> will automatically\n              resize accordingly.\n            </p>\n            <Example href=\"components/progress#height\">\n              <CProgress height={1} className=\"mb-3\">\n                <CProgressBar value={25}></CProgressBar>\n              </CProgress>\n              <CProgress height={20} className=\"mb-3\">\n                <CProgressBar value={25}></CProgressBar>\n              </CProgress>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Progress</strong> <small>Backgrounds</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Use <code>color</code> prop to change the appearance of individual progress bars.\n            </p>\n            <Example href=\"components/progress#backgrounds\">\n              <CProgress className=\"mb-3\">\n                <CProgressBar color=\"success-gradient\" value={25} />\n              </CProgress>\n              <CProgress className=\"mb-3\">\n                <CProgressBar color=\"info-gradient\" value={50} />\n              </CProgress>\n              <CProgress className=\"mb-3\">\n                <CProgressBar color=\"warning-gradient\" value={75} />\n              </CProgress>\n              <CProgress className=\"mb-3\">\n                <CProgressBar color=\"danger-gradient\" value={100} />\n              </CProgress>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Progress</strong> <small>Multiple bars</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Include multiple progress bars in a progress component if you need.\n            </p>\n            <Example href=\"components/progress#multiple-bars\">\n              <CProgress className=\"mb-3\">\n                <CProgressBar value={15} />\n                <CProgressBar color=\"success-gradient\" value={30} />\n                <CProgressBar color=\"info-gradient\" value={20} />\n              </CProgress>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Progress</strong> <small>Striped</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add <code>variant=&#34;striped&#34;</code> to any <code>&lt;CProgressBar&gt;</code> to\n              apply a stripe via CSS gradient over the progress bar&#39;s background color.\n            </p>\n            <Example href=\"components/progress#striped\">\n              <CProgress className=\"mb-3\">\n                <CProgressBar color=\"success\" variant=\"striped\" value={25} />\n              </CProgress>\n              <CProgress className=\"mb-3\">\n                <CProgressBar color=\"info\" variant=\"striped\" value={50} />\n              </CProgress>\n              <CProgress className=\"mb-3\">\n                <CProgressBar color=\"warning\" variant=\"striped\" value={75} />\n              </CProgress>\n              <CProgress className=\"mb-3\">\n                <CProgressBar color=\"danger\" variant=\"striped\" value={100} />\n              </CProgress>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Progress</strong> <small>Animated stripes</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              The striped gradient can also be animated. Add <code>animated</code> property to{' '}\n              <code>&lt;CProgressBar&gt;</code> to animate the stripes right to left via CSS3\n              animations.\n            </p>\n            <Example href=\"components/progress#animated-stripes\">\n              <CProgress className=\"mb-3\">\n                <CProgressBar color=\"success\" variant=\"striped\" animated value={25} />\n              </CProgress>\n              <CProgress className=\"mb-3\">\n                <CProgressBar color=\"info\" variant=\"striped\" animated value={50} />\n              </CProgress>\n              <CProgress className=\"mb-3\">\n                <CProgressBar color=\"warning\" variant=\"striped\" animated value={75} />\n              </CProgress>\n              <CProgress className=\"mb-3\">\n                <CProgressBar color=\"danger\" variant=\"striped\" animated value={100} />\n              </CProgress>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Progress\n"],"sourceRoot":""}