{"version":3,"sources":["reusable/DocsCallout.js","reusable/DocsLink.js","reusable/Example.js","reusable/ProBadge.js","views/components/forms/validation/Validation.js"],"names":["DocsCallout","props","href","name","plural","slice","_href","packageJson","config","coreui_library_short_version","color","className","target","React","memo","DocsLink","text","rest","rel","Example","children","variant","active","visible","ProBadge","attributes","CustomStyles","validated","setValidated","useState","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","md","htmlFor","type","id","defaultValue","required","valid","aria-describedby","invalid","disabled","xs","label","BrowserDefaults","Tooltips","tooltip","Validation","component","placeholder","aria-label","value"],"mappings":"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","file":"static/js/39.b1ed4443.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react-pro'\n\nimport packageJson from '../../package.json'\n\nconst DocsCallout = (props) => {\n  const { href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      A React {name} component {plural ? 'have' : 'has'} been created as a native React.js version\n      of Bootstrap {name}. {name} {plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react-pro'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react-pro'\nimport CIcon from '@coreui/icons-react'\n\nimport packageJson from '../../package.json'\n\nconst Example = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"underline\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon name=\"cil-media-play\" className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon name=\"cil-code\" className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(Example)\n","import React from 'react'\nimport { CBadge } from '@coreui/react-pro'\nimport PropTypes from 'prop-types'\n\nconst ProBadge = (props) => {\n  let { children, ...attributes } = { ...props }\n  return (\n    <CBadge\n      href=\"https://coreui.io/pro/react/\"\n      color=\"danger\"\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      {...attributes}\n    >\n      {children ? children : 'CoreUI Pro Component'}\n    </CBadge>\n  )\n}\n\nProBadge.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default React.memo(ProBadge)\n","import React, { useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormCheck,\n  CFormControl,\n  CFormFeedback,\n  CFormLabel,\n  CFormSelect,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react-pro'\nimport { DocsCallout, Example } from 'src/reusable'\n\nconst CustomStyles = () => {\n  const [validated, setValidated] = useState(false)\n  const handleSubmit = (event) => {\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setValidated(true)\n  }\n  return (\n    <CForm\n      className=\"row g-3 needs-validation\"\n      noValidate\n      validated={validated}\n      onSubmit={handleSubmit}\n    >\n      <CCol md=\"4\">\n        <CFormLabel htmlFor=\"validationCustom01\">Email</CFormLabel>\n        <CFormControl type=\"text\" id=\"validationCustom01\" defaultValue=\"Mark\" required />\n        <CFormFeedback valid>Looks good!</CFormFeedback>\n      </CCol>\n      <CCol md=\"4\">\n        <CFormLabel htmlFor=\"validationCustom02\">Email</CFormLabel>\n        <CFormControl type=\"text\" id=\"validationCustom02\" defaultValue=\"Otto\" required />\n        <CFormFeedback valid>Looks good!</CFormFeedback>\n      </CCol>\n      <CCol md=\"4\">\n        <CFormLabel htmlFor=\"validationCustomUsername\">Username</CFormLabel>\n        <CInputGroup className=\"has-validation\">\n          <CInputGroupText id=\"inputGroupPrepend\">@</CInputGroupText>\n          <CFormControl\n            type=\"text\"\n            id=\"validationCustomUsername\"\n            defaultValue=\"\"\n            aria-describedby=\"inputGroupPrepend\"\n            required\n          />\n          <CFormFeedback invalid>Please choose a username.</CFormFeedback>\n        </CInputGroup>\n      </CCol>\n      <CCol md=\"6\">\n        <CFormLabel htmlFor=\"validationCustom03\">City</CFormLabel>\n        <CFormControl type=\"text\" id=\"validationCustom03\" required />\n        <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>\n      </CCol>\n      <CCol md=\"3\">\n        <CFormLabel htmlFor=\"validationCustom04\">City</CFormLabel>\n        <CFormSelect id=\"validationCustom04\">\n          <option disabled>Choose...</option>\n          <option>...</option>\n        </CFormSelect>\n        <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>\n      </CCol>\n      <CCol md=\"3\">\n        <CFormLabel htmlFor=\"validationCustom05\">City</CFormLabel>\n        <CFormControl type=\"text\" id=\"validationCustom05\" required />\n        <CFormFeedback invalid>Please provide a valid zip.</CFormFeedback>\n      </CCol>\n      <CCol xs=\"12\">\n        <CFormCheck\n          type=\"checkbox\"\n          id=\"invalidCheck\"\n          label=\"Agree to terms and conditions\"\n          required\n        />\n        <CFormFeedback invalid>You must agree before submitting.</CFormFeedback>\n      </CCol>\n      <CCol xs=\"12\">\n        <CButton color=\"primary\" type=\"submit\">\n          Submit form\n        </CButton>\n      </CCol>\n    </CForm>\n  )\n}\n\nconst BrowserDefaults = () => {\n  const [validated, setValidated] = useState(false)\n  const handleSubmit = (event) => {\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setValidated(true)\n  }\n  return (\n    <CForm className=\"row g-3 needs-validation\" validated={validated} onSubmit={handleSubmit}>\n      <CCol md=\"4\">\n        <CFormLabel htmlFor=\"validationDefault01\">Email</CFormLabel>\n        <CFormControl type=\"text\" id=\"validationDefault01\" defaultValue=\"Mark\" required />\n        <CFormFeedback valid>Looks good!</CFormFeedback>\n      </CCol>\n      <CCol md=\"4\">\n        <CFormLabel htmlFor=\"validationDefault02\">Email</CFormLabel>\n        <CFormControl type=\"text\" id=\"validationDefault02\" defaultValue=\"Otto\" required />\n        <CFormFeedback valid>Looks good!</CFormFeedback>\n      </CCol>\n      <CCol md=\"4\">\n        <CFormLabel htmlFor=\"validationDefaultUsername\">Username</CFormLabel>\n        <CInputGroup className=\"has-validation\">\n          <CInputGroupText id=\"inputGroupPrepend02\">@</CInputGroupText>\n          <CFormControl\n            type=\"text\"\n            id=\"validationDefaultUsername\"\n            defaultValue=\"\"\n            aria-describedby=\"inputGroupPrepend02\"\n            required\n          />\n          <CFormFeedback invalid>Please choose a username.</CFormFeedback>\n        </CInputGroup>\n      </CCol>\n      <CCol md=\"6\">\n        <CFormLabel htmlFor=\"validationDefault03\">City</CFormLabel>\n        <CFormControl type=\"text\" id=\"validationDefault03\" required />\n        <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>\n      </CCol>\n      <CCol md=\"3\">\n        <CFormLabel htmlFor=\"validationDefault04\">City</CFormLabel>\n        <CFormSelect id=\"validationDefault04\">\n          <option disabled>Choose...</option>\n          <option>...</option>\n        </CFormSelect>\n        <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>\n      </CCol>\n      <CCol md=\"3\">\n        <CFormLabel htmlFor=\"validationDefault05\">City</CFormLabel>\n        <CFormControl type=\"text\" id=\"validationDefault05\" required />\n        <CFormFeedback invalid>Please provide a valid zip.</CFormFeedback>\n      </CCol>\n      <CCol xs=\"12\">\n        <CFormCheck\n          type=\"checkbox\"\n          id=\"invalidCheck\"\n          label=\"Agree to terms and conditions\"\n          required\n        />\n        <CFormFeedback invalid>You must agree before submitting.</CFormFeedback>\n      </CCol>\n      <CCol xs=\"12\">\n        <CButton color=\"primary\" type=\"submit\">\n          Submit form\n        </CButton>\n      </CCol>\n    </CForm>\n  )\n}\n\nconst Tooltips = () => {\n  const [validated, setValidated] = useState(false)\n  const handleSubmit = (event) => {\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setValidated(true)\n  }\n  return (\n    <CForm\n      className=\"row g-3 needs-validation\"\n      noValidate\n      validated={validated}\n      onSubmit={handleSubmit}\n    >\n      <CCol md=\"4\" className=\"position-relative\">\n        <CFormLabel htmlFor=\"validationTooltip01\">Email</CFormLabel>\n        <CFormControl type=\"text\" id=\"validationTooltip01\" defaultValue=\"Mark\" required />\n        <CFormFeedback tooltip valid>\n          Looks good!\n        </CFormFeedback>\n      </CCol>\n      <CCol md=\"4\" className=\"position-relative\">\n        <CFormLabel htmlFor=\"validationTooltip02\">Email</CFormLabel>\n        <CFormControl type=\"text\" id=\"validationTooltip02\" defaultValue=\"Otto\" required />\n        <CFormFeedback tooltip valid>\n          Looks good!\n        </CFormFeedback>\n      </CCol>\n      <CCol md=\"4\" className=\"position-relative\">\n        <CFormLabel htmlFor=\"validationTooltipUsername\">Username</CFormLabel>\n        <CInputGroup className=\"has-validation\">\n          <CInputGroupText id=\"inputGroupPrepend\">@</CInputGroupText>\n          <CFormControl\n            type=\"text\"\n            id=\"validationTooltipUsername\"\n            defaultValue=\"\"\n            aria-describedby=\"inputGroupPrepend\"\n            required\n          />\n          <CFormFeedback tooltip invalid>\n            Please choose a username.\n          </CFormFeedback>\n        </CInputGroup>\n      </CCol>\n      <CCol md=\"6\" className=\"position-relative\">\n        <CFormLabel htmlFor=\"validationTooltip03\">City</CFormLabel>\n        <CFormControl type=\"text\" id=\"validationTooltip03\" required />\n        <CFormFeedback tooltip invalid>\n          Please provide a valid city.\n        </CFormFeedback>\n      </CCol>\n      <CCol md=\"3\" className=\"position-relative\">\n        <CFormLabel htmlFor=\"validationTooltip04\">City</CFormLabel>\n        <CFormSelect id=\"validationTooltip04\" required>\n          <option disabled defaultValue=\"\">\n            Choose...\n          </option>\n          <option>...</option>\n        </CFormSelect>\n        <CFormFeedback tooltip invalid>\n          Please provide a valid city.\n        </CFormFeedback>\n      </CCol>\n      <CCol md=\"3\" className=\"position-relative\">\n        <CFormLabel htmlFor=\"validationTooltip05\">City</CFormLabel>\n        <CFormControl type=\"text\" id=\"validationTooltip05\" required />\n        <CFormFeedback tooltip invalid>\n          Please provide a valid zip.\n        </CFormFeedback>\n      </CCol>\n      <CCol xs=\"12\" className=\"position-relative\">\n        <CButton color=\"primary\" type=\"submit\">\n          Submit form\n        </CButton>\n      </CCol>\n    </CForm>\n  )\n}\n\nconst Validation = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <DocsCallout name=\"Validation\" href=\"forms/validation\" />\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Validation</strong> <small>Custom styles</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              For custom CoreUI form validation messages, you&#39;ll need to add the{' '}\n              <code>noValidate</code> boolean property to your <code>&lt;CForm&gt;</code>. This\n              disables the browser default feedback tooltips, but still provides access to the form\n              validation APIs in JavaScript. Try to submit the form below; our JavaScript will\n              intercept the submit button and relay feedback to you. When attempting to submit,\n              you&#39;ll see the <code>:invalid</code> and <code>:valid</code> styles applied to\n              your form controls.\n            </p>\n            <p className=\"text-medium-emphasis small\">\n              Custom feedback styles apply custom colors, borders, focus styles, and background\n              icons to better communicate feedback.{' '}\n            </p>\n            <Example href=\"forms/validation\">{CustomStyles()}</Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Validation</strong> <small>Browser defaults</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Not interested in custom validation feedback messages or writing JavaScript to change\n              form behaviors? All good, you can use the browser defaults. Try submitting the form\n              below. Depending on your browser and OS, you&#39;ll see a slightly different style of\n              feedback.\n            </p>\n            <p className=\"text-medium-emphasis small\">\n              While these feedback styles cannot be styled with CSS, you can still customize the\n              feedback text through JavaScript.\n            </p>\n            <Example href=\"forms/validation#browser-defaults\">{BrowserDefaults()}</Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Validation</strong> <small>Server side</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              We recommend using client-side validation, but in case you require server-side\n              validation, you can indicate invalid and valid form fields with <code>invalid</code>{' '}\n              and <code>valid</code> boolean properties.\n            </p>\n            <p className=\"text-medium-emphasis small\">\n              For invalid fields, ensure that the invalid feedback/error message is associated with\n              the relevant form field using <code>aria-describedby</code> (noting that this\n              attribute allows more than one <code>id</code> to be referenced, in case the field\n              already points to additional form text).\n            </p>\n            <Example href=\"forms/validation#server-side\">\n              <CForm className=\"row g-3 needs-validation\">\n                <CCol md=\"4\">\n                  <CFormLabel htmlFor=\"validationServer01\">Email</CFormLabel>\n                  <CFormControl\n                    type=\"text\"\n                    id=\"validationServer01\"\n                    defaultValue=\"Mark\"\n                    valid\n                    required\n                  />\n                  <CFormFeedback valid>Looks good!</CFormFeedback>\n                </CCol>\n                <CCol md=\"4\">\n                  <CFormLabel htmlFor=\"validationServer02\">Email</CFormLabel>\n                  <CFormControl\n                    type=\"text\"\n                    id=\"validationServer02\"\n                    defaultValue=\"Otto\"\n                    valid\n                    required\n                  />\n                  <CFormFeedback valid>Looks good!</CFormFeedback>\n                </CCol>\n                <CCol md=\"4\">\n                  <CFormLabel htmlFor=\"validationServerUsername\">Username</CFormLabel>\n                  <CInputGroup className=\"has-validation\">\n                    <CInputGroupText id=\"inputGroupPrepend03\">@</CInputGroupText>\n                    <CFormControl\n                      type=\"text\"\n                      id=\"validationServerUsername\"\n                      defaultValue=\"\"\n                      aria-describedby=\"inputGroupPrepend03\"\n                      invalid\n                      required\n                    />\n                    <CFormFeedback invalid>Please choose a username.</CFormFeedback>\n                  </CInputGroup>\n                </CCol>\n                <CCol md=\"6\">\n                  <CFormLabel htmlFor=\"validationServer03\">City</CFormLabel>\n                  <CFormControl type=\"text\" id=\"validationServer03\" invalid required />\n                  <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>\n                </CCol>\n                <CCol md=\"3\">\n                  <CFormLabel htmlFor=\"validationServer04\">City</CFormLabel>\n                  <CFormSelect id=\"validationServer04\" invalid>\n                    <option disabled>Choose...</option>\n                    <option>...</option>\n                  </CFormSelect>\n                  <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>\n                </CCol>\n                <CCol md=\"3\">\n                  <CFormLabel htmlFor=\"validationServer05\">City</CFormLabel>\n                  <CFormControl type=\"text\" id=\"validationServer05\" invalid required />\n                  <CFormFeedback invalid>Please provide a valid zip.</CFormFeedback>\n                </CCol>\n                <CCol xs=\"12\">\n                  <CFormCheck\n                    type=\"checkbox\"\n                    id=\"invalidCheck\"\n                    label=\"Agree to terms and conditions\"\n                    invalid\n                    required\n                  />\n                  <CFormFeedback invalid>You must agree before submitting.</CFormFeedback>\n                </CCol>\n                <CCol xs=\"12\">\n                  <CButton color=\"primary\" type=\"submit\">\n                    Submit form\n                  </CButton>\n                </CCol>\n              </CForm>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Validation</strong> <small>Supported elements</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Validation styles are available for the following form controls and components:\n            </p>\n            <ul>\n              <li>\n                <code>&lt;CFormControl&gt;</code>s\n              </li>\n              <li>\n                <code>&lt;CFormSelect&gt;</code>s\n              </li>\n              <li>\n                <code>&lt;CFormCheck&gt;</code>s\n              </li>\n            </ul>\n            <Example href=\"forms/validation#supported-elements\">\n              <CForm validated={true}>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"validationTextarea\" className=\"form-label\">\n                    Textarea\n                  </CFormLabel>\n                  <CFormControl\n                    component=\"textarea\"\n                    id=\"validationTextarea\"\n                    placeholder=\"Required example textarea\"\n                    invalid\n                    required\n                  ></CFormControl>\n                  <CFormFeedback invalid>Please enter a message in the textarea.</CFormFeedback>\n                </div>\n                <CFormCheck\n                  className=\"mb-3\"\n                  id=\"validationFormCheck1\"\n                  label=\"Check this checkbox\"\n                  required\n                />\n                <CFormFeedback invalid>Example invalid feedback text</CFormFeedback>\n\n                <CFormCheck\n                  type=\"radio\"\n                  name=\"radio-stacked\"\n                  id=\"validationFormCheck2\"\n                  label=\"Check this checkbox\"\n                  required\n                />\n\n                <CFormCheck\n                  className=\"mb-3\"\n                  type=\"radio\"\n                  name=\"radio-stacked\"\n                  id=\"validationFormCheck3\"\n                  label=\"Or toggle this other radio\"\n                  required\n                />\n                <CFormFeedback invalid>More example invalid feedback text</CFormFeedback>\n\n                <div className=\"mb-3\">\n                  <CFormSelect required aria-label=\"select example\">\n                    <option>Open this select menu</option>\n                    <option value=\"1\">One</option>\n                    <option value=\"2\">Two</option>\n                    <option value=\"3\">Three</option>\n                  </CFormSelect>\n                  <CFormFeedback invalid>Example invalid select feedback</CFormFeedback>\n                </div>\n\n                <div className=\"mb-3\">\n                  <CFormControl\n                    type=\"file\"\n                    id=\"validationTextarea\"\n                    aria-label=\"file example\"\n                    required\n                  />\n                  <CFormFeedback invalid>Example invalid form file feedback</CFormFeedback>\n                </div>\n\n                <div className=\"mb-3\">\n                  <CButton type=\"submit\" color=\"primary\" disabled>\n                    Submit form\n                  </CButton>\n                </div>\n              </CForm>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Validation</strong> <small>Tooltips</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              If your form layout allows it, you can swap the text for the tooltip to display\n              validation feedback in a styled tooltip. Be sure to have a parent with{' '}\n              <code>position: relative</code> on it for tooltip positioning. In the example below,\n              our column classes have this already, but your project may require an alternative\n              setup.\n            </p>\n            <Example href=\"forms/validation#tooltips\">{Tooltips()}</Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Validation\n"],"sourceRoot":""}