{"version":3,"sources":["reusable/DocsCallout.js","reusable/DocsLink.js","reusable/Example.js","reusable/ProBadge.js","views/components/base/list-groups/ListGroups.js"],"names":["DocsCallout","props","href","name","plural","slice","_href","packageJson","config","coreui_library_short_version","color","className","target","React","memo","DocsLink","text","rest","rel","Example","children","variant","active","visible","ProBadge","attributes","ListGroups","xs","disabled","component","flush","map","breakpoint","index","layout","shape","label","defaultChecked"],"mappings":"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","file":"static/js/21.27b371e3.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react-pro'\n\nimport packageJson from '../../package.json'\n\nconst DocsCallout = (props) => {\n  const { href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      A React {name} component {plural ? 'have' : 'has'} been created as a native React.js version\n      of Bootstrap {name}. {name} {plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react-pro'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react-pro'\nimport CIcon from '@coreui/icons-react'\n\nimport packageJson from '../../package.json'\n\nconst Example = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"underline\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon name=\"cil-media-play\" className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon name=\"cil-code\" className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(Example)\n","import React from 'react'\nimport { CBadge } from '@coreui/react-pro'\nimport PropTypes from 'prop-types'\n\nconst ProBadge = (props) => {\n  let { children, ...attributes } = { ...props }\n  return (\n    <CBadge\n      href=\"https://coreui.io/pro/react/\"\n      color=\"danger\"\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      {...attributes}\n    >\n      {children ? children : 'CoreUI Pro Component'}\n    </CBadge>\n  )\n}\n\nProBadge.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default React.memo(ProBadge)\n","import React from 'react'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CFormCheck,\n  CListGroup,\n  CListGroupItem,\n  CRow,\n} from '@coreui/react-pro'\nimport { DocsCallout, Example } from 'src/reusable'\n\nconst ListGroups = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <DocsCallout name=\"List Group\" href=\"components/list-group\" />\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Basic example</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              The default list group is an unordered list with items and the proper CSS classes.\n              Build upon it with the options that follow, or with your CSS as required.\n            </p>\n            <Example href=\"components/list-group\">\n              <CListGroup>\n                <CListGroupItem>Cras justo odio</CListGroupItem>\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\n                <CListGroupItem>Morbi leo risus</CListGroupItem>\n                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\n                <CListGroupItem>Vestibulum at eros</CListGroupItem>\n              </CListGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Active items</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add <code>active</code> boolean property to a <code>&lt;CListGroupItem&gt;</code> to\n              show the current active selection.\n            </p>\n            <Example href=\"components/list-group/#active-items\">\n              <CListGroup>\n                <CListGroupItem active>Cras justo odio</CListGroupItem>\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\n                <CListGroupItem>Morbi leo risus</CListGroupItem>\n                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\n                <CListGroupItem>Vestibulum at eros</CListGroupItem>\n              </CListGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Disabled items</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add <code>disabled</code> boolean property to a <code>&lt;CListGroupItem&gt;</code> to\n              make it appear disabled.\n            </p>\n            <Example href=\"components/list-group/#disabled-items\">\n              <CListGroup>\n                <CListGroupItem disabled>Cras justo odio</CListGroupItem>\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\n                <CListGroupItem>Morbi leo risus</CListGroupItem>\n                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\n                <CListGroupItem>Vestibulum at eros</CListGroupItem>\n              </CListGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Links and buttons</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Use <code>&lt;a&gt;</code>s or <code>&lt;button&gt;</code>s to create{' '}\n              <em>actionable</em> list group items with hover, disabled, and active states by adding{' '}\n              <code>component=&#34;a|button&#34;</code>. We separate these pseudo-classes to ensure\n              list groups made of non-interactive elements (like <code>&lt;li&gt;</code>s or{' '}\n              <code>&lt;div&gt;</code>\n              s) don&#39;tprovide a click or tap affordance.\n            </p>\n            <Example href=\"components/list-group/#links-and-buttons\">\n              <CListGroup>\n                <CListGroupItem component=\"a\" href=\"#\" active>\n                  Cras justo odio\n                </CListGroupItem>\n                <CListGroupItem component=\"a\" href=\"#\">\n                  Dapibus ac facilisis in\n                </CListGroupItem>\n                <CListGroupItem component=\"a\" href=\"#\">\n                  Morbi leo risus\n                </CListGroupItem>\n                <CListGroupItem component=\"a\" href=\"#\">\n                  Porta ac consectetur ac\n                </CListGroupItem>\n                <CListGroupItem component=\"a\" href=\"#\" disabled>\n                  Vestibulum at eros\n                </CListGroupItem>\n              </CListGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Flush</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add <code>flush</code> boolean property to remove some borders and rounded corners to\n              render list group items edge-to-edge in a parent container (e.g., cards).\n            </p>\n            <Example href=\"components/list-group/#flush\">\n              <CListGroup flush>\n                <CListGroupItem>Cras justo odio</CListGroupItem>\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\n                <CListGroupItem>Morbi leo risus</CListGroupItem>\n                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\n                <CListGroupItem>Vestibulum at eros</CListGroupItem>\n              </CListGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Horizontal</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add <code>layout=&#34;horizontal&#34;</code> to change the layout of list group items\n              from vertical to horizontal across all breakpoints. Alternatively, choose a responsive\n              variant <code>.layout=&#34;horizontal-&#123;sm | md | lg | xl | xxl&#125;&#34;</code>{' '}\n              to make a list group horizontal starting at that breakpoint&#39;s{' '}\n              <code>min-width</code>. Currently{' '}\n              <strong>horizontal list groups cannot be combined with flush list groups.</strong>\n            </p>\n            <Example href=\"components/list-group/#flush\">\n              {['', '-sm', '-md', '-lg', '-xl', '-xxl'].map((breakpoint, index) => (\n                <CListGroup className=\"mb-2\" layout={`horizontal${breakpoint}`} key={index}>\n                  <CListGroupItem>Cras justo odio</CListGroupItem>\n                  <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\n                  <CListGroupItem>Morbi leo risus</CListGroupItem>\n                </CListGroup>\n              ))}\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Contextual classes</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Use contextual classes to style list items with a stateful background and color.\n            </p>\n            <Example href=\"components/list-group/#contextual-classes\">\n              <CListGroup>\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\n                {[\n                  'primary',\n                  'secondary',\n                  'success',\n                  'danger',\n                  'warning',\n                  'info',\n                  'light',\n                  'dark',\n                ].map((color, index) => (\n                  <CListGroupItem color={color} key={index}>\n                    A simple {color} list group item\n                  </CListGroupItem>\n                ))}\n              </CListGroup>\n            </Example>\n            <p className=\"text-medium-emphasis small\">\n              Contextual classes also work with <code>&lt;a&gt;</code>s or{' '}\n              <code>&lt;button&gt;</code>s. Note the addition of the hover styles here not present\n              in the previous example. Also supported is the <code>active</code> state; apply it to\n              indicate an active selection on a contextual list group item.\n            </p>\n            <Example href=\"components/list-group/#contextual-classes\">\n              <CListGroup>\n                <CListGroupItem component=\"a\" href=\"#\">\n                  Dapibus ac facilisis in\n                </CListGroupItem>\n                {[\n                  'primary',\n                  'secondary',\n                  'success',\n                  'danger',\n                  'warning',\n                  'info',\n                  'light',\n                  'dark',\n                ].map((color, index) => (\n                  <CListGroupItem component=\"a\" href=\"#\" color={color} key={index}>\n                    A simple {color} list group item\n                  </CListGroupItem>\n                ))}\n              </CListGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>With badges</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add badges to any list group item to show unread counts, activity, and more.\n            </p>\n            <Example href=\"components/list-group/#with-badges\">\n              <CListGroup>\n                <CListGroupItem className=\"d-flex justify-content-between align-items-center\">\n                  Cras justo odio\n                  <CBadge color=\"primary-gradient\" shape=\"rounded-pill\">\n                    14\n                  </CBadge>\n                </CListGroupItem>\n                <CListGroupItem className=\"d-flex justify-content-between align-items-center\">\n                  Dapibus ac facilisis in\n                  <CBadge color=\"primary-gradient\" shape=\"rounded-pill\">\n                    2\n                  </CBadge>\n                </CListGroupItem>\n                <CListGroupItem className=\"d-flex justify-content-between align-items-center\">\n                  Morbi leo risus\n                  <CBadge color=\"primary-gradient\" shape=\"rounded-pill\">\n                    1\n                  </CBadge>\n                </CListGroupItem>\n              </CListGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Custom content</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add nearly any HTML within, even for linked list groups like the one below, with the\n              help of <a href=\"https://coreui.io/docs/utilities/flex/\">flexbox utilities</a>.\n            </p>\n            <Example href=\"components/list-group/#custom-content\">\n              <CListGroup>\n                <CListGroupItem component=\"a\" href=\"#\" active>\n                  <div className=\"d-flex w-100 justify-content-between\">\n                    <h5 className=\"mb-1\">List group item heading</h5>\n                    <small>3 days ago</small>\n                  </div>\n                  <p className=\"mb-1\">\n                    Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus\n                    varius blandit.\n                  </p>\n                  <small>Donec id elit non mi porta.</small>\n                </CListGroupItem>\n                <CListGroupItem component=\"a\" href=\"#\">\n                  <div className=\"d-flex w-100 justify-content-between\">\n                    <h5 className=\"mb-1\">List group item heading</h5>\n                    <small className=\"text-medium-emphasis\">3 days ago</small>\n                  </div>\n                  <p className=\"mb-1\">\n                    Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus\n                    varius blandit.\n                  </p>\n                  <small className=\"text-medium-emphasis\">Donec id elit non mi porta.</small>\n                </CListGroupItem>\n                <CListGroupItem component=\"a\" href=\"#\">\n                  <div className=\"d-flex w-100 justify-content-between\">\n                    <h5 className=\"mb-1\">List group item heading</h5>\n                    <small className=\"text-medium-emphasis\">3 days ago</small>\n                  </div>\n                  <p className=\"mb-1\">\n                    Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus\n                    varius blandit.\n                  </p>\n                  <small className=\"text-medium-emphasis\">Donec id elit non mi porta.</small>\n                </CListGroupItem>\n              </CListGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React List Group</strong> <small>Checkboxes and radios</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Place CoreUI&#39;s checkboxes and radios within list group items and customize as\n              needed.\n            </p>\n            <Example href=\"components/list-group/#checkboxes-and-radios\">\n              <CListGroup>\n                <CListGroupItem>\n                  <CFormCheck label=\"Cras justo odio\" />\n                </CListGroupItem>\n                <CListGroupItem>\n                  <CFormCheck label=\"Dapibus ac facilisis in\" defaultChecked />\n                </CListGroupItem>\n                <CListGroupItem>\n                  <CFormCheck label=\"Morbi leo risus\" defaultChecked />\n                </CListGroupItem>\n                <CListGroupItem>\n                  <CFormCheck label=\"orta ac consectetur ac\" />\n                </CListGroupItem>\n                <CListGroupItem>\n                  <CFormCheck label=\"Vestibulum at eros\" />\n                </CListGroupItem>\n              </CListGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default ListGroups\n"],"sourceRoot":""}